<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Adb 命令</title>
    <url>/posts/Adb/f3983032.html</url>
    <content><![CDATA[<p>Adb 命令</p>
<a id="more"></a>

<h5 id="应用版本号"><a href="#应用版本号" class="headerlink" title="应用版本号"></a>应用版本号</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">adb shell dumpsys package com.jingdong.app.mall | grep version</span><br></pre></td></tr></tbody></table></figure>

<h5 id="启动页Activity"><a href="#启动页Activity" class="headerlink" title="启动页Activity"></a>启动页Activity</h5><p>简单的来说Activity指的就是App中我们看到的页面，一个页面就是一个Activity，通常第一页启动起来的页面我们就称之为 “启动页Activity”。</p>
<h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><p>先使用 <code>adb shell logcat | grep "category.LAUNCHER"</code> 监听启动项，随后手机端打开京东APP。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">adb shell logcat | grep <span class="string">"category.LAUNCHER"</span></span><br><span class="line"></span><br><span class="line">03-17 11:44:00.994  1530  2199 I ActivityManager: START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.jingdong.app.mall/.main.MainActivity bnds=[792,966][1044,1260]} from uid 10052 and from pid 2906 on display 0</span><br></pre></td></tr></tbody></table></figure>

<p>其中 <code>com.jingdong.app.mall/.main.MainActivity</code> 即为京东APP的启动页Activity。</p>
<h5 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 拿京东APP举例</span></span><br><span class="line">adb shell monkey -p com.jingdong.app.mall -vvv 1 | grep <span class="string">"category.LAUNCHER"</span></span><br><span class="line"></span><br><span class="line">:IncludeCategory: android.intent.category.LAUNCHER</span><br><span class="line">:Switch: <span class="comment">#Intent;action=android.intent.action.MAIN;category=android.intent.category.LAUNCHER;launchFlags=0x10200000;component=com.jingdong.app.mall/.main.MainActivity;end</span></span><br><span class="line">    // Allowing start of Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.jingdong.app.mall/.main.MainActivity } <span class="keyword">in</span> package com.jingdong.app.mall</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<h5 id="启动App"><a href="#启动App" class="headerlink" title="启动App"></a>启动App</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">adb shell am start -n com.jingdong.app.mall/.main.MainActivity -S</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Adb</category>
      </categories>
      <tags>
        <tag>Adb</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown 总结</title>
    <url>/posts/Markdown/54710870.html</url>
    <content><![CDATA[<p>Markdown 使用总结</p>
<a id="more"></a>



<p>下面引用自 <strong>百度百科</strong></p>
<blockquote>
<p>Markdown是一种<a href="https://baike.baidu.com/item/%E8%BD%BB%E9%87%8F%E7%BA%A7%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/52671915">轻量级标记语言</a>，创始人为约翰·格鲁伯（英语：John Gruber）。 它允许人们使用易读易写的<a href="https://baike.baidu.com/item/%E7%BA%AF%E6%96%87%E6%9C%AC%E6%A0%BC%E5%BC%8F/9862288">纯文本格式</a>编写文档，然后转换成有效的XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。</p>
<p>由于Markdown的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，目前许多网站都广泛使用Markdown来撰写帮助文档或是用于论坛上发表消息。 如<a href="https://baike.baidu.com/item/GitHub/10145341">GitHub</a>、<a href="https://baike.baidu.com/item/Reddit/1272010">Reddit</a>、<a href="https://baike.baidu.com/item/Diaspora/10726893">Diaspora</a>、[Stack Exchange](<a href="https://baike.baidu.com/item/Stack">https://baike.baidu.com/item/Stack</a> Exchange/13777796)、<a href="https://baike.baidu.com/item/OpenStreetMap/3171606">OpenStreetMap</a> 、<a href="https://baike.baidu.com/item/SourceForge/6562141">SourceForge</a>、<a href="https://baike.baidu.com/item/%E7%AE%80%E4%B9%A6/5782216">简书</a>等，甚至还能被使用来撰写<a href="https://baike.baidu.com/item/%E7%94%B5%E5%AD%90%E4%B9%A6/346054">电子书</a>。</p>
</blockquote>
<h4 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h4><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span></span><br></pre></td></tr></tbody></table></figure>

<p>这是 <em>斜体</em> 字哦~</p>
<h4 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h4><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line"><span class="strong">**粗体**</span></span><br></pre></td></tr></tbody></table></figure>

<p>这是 <strong>粗体</strong> 字哦~</p>
<h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></tbody></table></figure>

<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 天行健，君子以自强不息；地势坤，君子以厚德载物。—《周易》</span></span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>天行健，君子以自强不息；地势坤，君子以厚德载物。—《周易》</p>
</blockquote>
<h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">[<span class="string">codezm的个人博客</span>](<span class="link">http://www.codezm.com</span>)</span><br></pre></td></tr></tbody></table></figure>

<p><a href="http://www.codezm.com/">codezm的个人博客</a></p>
<h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">![<span class="string">图片描述</span>](<span class="link">http://codezm.com/images/avatar.jpg</span>)</span><br></pre></td></tr></tbody></table></figure>

<p><img data-src="http://codezm.com/images/avatar.jpg" alt="我的头像"></p>
<h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line"><span class="section">##### 兴趣</span></span><br><span class="line"><span class="bullet">*</span> 羽毛球</span><br><span class="line"><span class="bullet">*</span> 篮球</span><br><span class="line"><span class="bullet">*</span> 乒乓球</span><br></pre></td></tr></tbody></table></figure>

<h5 id="无序列表：兴趣？"><a href="#无序列表：兴趣？" class="headerlink" title="无序列表：兴趣？"></a>无序列表：兴趣？</h5><ul>
<li>羽毛球</li>
<li>篮球</li>
<li>乒乓球</li>
</ul>
<h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line"><span class="section">##### 如何玩游戏？</span></span><br><span class="line"><span class="bullet">1.</span> 下载游戏</span><br><span class="line"><span class="bullet">2.</span> 安装游戏</span><br><span class="line"><span class="bullet">3.</span> 进入游戏</span><br><span class="line"><span class="bullet">4.</span> 创建角色</span><br><span class="line"><span class="bullet">5.</span> 开始游戏</span><br></pre></td></tr></tbody></table></figure>

<h5 id="有序列表：如何玩游戏？"><a href="#有序列表：如何玩游戏？" class="headerlink" title="有序列表：如何玩游戏？"></a>有序列表：如何玩游戏？</h5><ol>
<li>下载游戏</li>
<li>安装游戏</li>
<li>进入游戏</li>
<li>创建角色</li>
<li>开始游戏</li>
</ol>
<h4 id="水平分割线"><a href="#水平分割线" class="headerlink" title="水平分割线"></a>水平分割线</h4><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">---</span><br></pre></td></tr></tbody></table></figure>

<hr>
<h4 id="内联代码"><a href="#内联代码" class="headerlink" title="内联代码"></a>内联代码</h4><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">学习 <span class="code">`Java`</span> 得先学会输出 <span class="code">`Hello World!`</span>，示例：<span class="code">`System.out.print("Hello World!");`</span></span><br></pre></td></tr></tbody></table></figure>

<p>学习 <code>Java</code> 得先学会输出 <code>Hello World!</code>，示例：<code>System.out.print("Hello World!");</code></p>
<h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">学习 `Java` 得先学会输出 `Hello World!`，示例：</span><br><span class="line">```java</span><br><span class="line">System.out.print("Hello World!");</span><br><span class="line">```</span><br></pre></td></tr></tbody></table></figure>

<p>学习 <code>Java</code> 得先学会输出 <code>Hello World!</code>，示例：</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line">System.out.print(<span class="string">"Hello World!"</span>);</span><br></pre></td></tr></tbody></table></figure>



<h4 id="Markdown-编辑器"><a href="#Markdown-编辑器" class="headerlink" title="Markdown 编辑器"></a>Markdown 编辑器</h4><h5 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h5><ul>
<li>Typora</li>
</ul>
<h5 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h5><ul>
<li>Typora</li>
</ul>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://www.runoob.com/note/47651">Typora 画流程图、时序图(顺序图)、甘特图</a></li>
<li><a href="https://www.jianshu.com/p/80ac23666a98">如何在markdown中打出上标、下标和一些特殊符号</a></li>
</ul>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>fcs-tool工具</title>
    <url>/posts/uncategorized/13e78a65.html</url>
    <content><![CDATA[<p>fcs-tool 全称是 Fast Connect Server Tools，是一款在命令行管理使用 ssh、scp、redis 命令的工具。</p>
<p>项目地址：<a href="https://github.com/codezm/fcs-tools">https://github.com/codezm/fcs-tools</a></p>
<hr>
<a id="more"></a>

<h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><p>本项目运行依赖 expect、ssh、scp、redis-cli 命令，依赖 <a href="https://github.com/stedolan/jq">jq</a> 来解析 <code>JSON</code>。</p>
<h5 id="expect-安装"><a href="#expect-安装" class="headerlink" title="expect 安装"></a><code>expect</code> 安装</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ yum install -y expect</span><br></pre></td></tr></tbody></table></figure>



<h5 id="jq-安装"><a href="#jq-安装" class="headerlink" title="jq 安装"></a><code>jq</code> 安装</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># macos</span></span><br><span class="line">$ brew install jq</span><br><span class="line"></span><br><span class="line"><span class="comment"># linux</span></span><br><span class="line">$ curl -L -o /usr/bin/jq -s https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 &amp;&amp; chmod +x /usr/<span class="built_in">local</span>/bin/jq</span><br><span class="line"></span><br><span class="line"><span class="comment"># centos</span></span><br><span class="line">$ yum install -y epel-release</span><br><span class="line">$ yum update -y</span><br><span class="line">$ yum install -y jq</span><br><span class="line">$ yum remove -y epel-release</span><br><span class="line"></span><br><span class="line"><span class="comment"># ubuntu</span></span><br><span class="line">$ apt install -y jq</span><br></pre></td></tr></tbody></table></figure>

<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/codezm/fcs-tools.git</span><br><span class="line">$ <span class="built_in">cd</span> fcs-tools</span><br><span class="line">$ chmod +x install.sh</span><br><span class="line">$ ./install.sh</span><br></pre></td></tr></tbody></table></figure>

<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h5 id="zssh-命令"><a href="#zssh-命令" class="headerlink" title="zssh 命令"></a>zssh 命令</h5><ul>
<li><p>服务器添加</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ zssh add vm-web96.2 172.16.96.2 codezm 1234 root1234</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>服务器列表</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ zssh list</span><br><span class="line">$ zssh list -v</span><br><span class="line">$ zssh list -vv</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>服务器搜索</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ zssh search vm</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>服务器删除</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ zssh delete vm-web96.2</span><br></pre></td></tr></tbody></table></figure>

</li>
</ul>
<h5 id="zscp-命令"><a href="#zscp-命令" class="headerlink" title="zscp 命令"></a>zscp 命令</h5><ul>
<li><p>下载服务器文件</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ zscp vm-web96.2 download /etc/passwd ./</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>上传本地文件</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ zscp vm-web96.2 upload ./test.txt /tmp/</span><br></pre></td></tr></tbody></table></figure>

</li>
</ul>
<h5 id="zredis-命令"><a href="#zredis-命令" class="headerlink" title="zredis 命令"></a>zredis 命令</h5><ul>
<li><p>服务器添加</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ zredis add vm-web96.2 172.16.96.2 6379 0 1234</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>服务器列表</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ zredis list</span><br><span class="line">$ zredis list -v</span><br><span class="line">$ zredis list -vv</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>服务器搜索</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ zredis search vm</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>服务器删除</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ zssh delete vm-web96.2</span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/hello-world/4a17b156.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post-1"</span></span><br></pre></td></tr></tbody></table></figure>
<a id="more"></a>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>hello-world</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ消息队列</title>
    <url>/posts/RabbitMQ/26d4999d.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>RabbitMQ是一个开源的消息队列系统，它实现了高级消息队列协议（AMQP）。它通常用于在分布式系统中存储和转发消息，支持多种消息传递模式，包括点对点、发布/订阅和主题交换等。</p>
<a id="more"></a>

<h2 id="RabbitMQ-高级消息队列处理"><a href="#RabbitMQ-高级消息队列处理" class="headerlink" title="RabbitMQ 高级消息队列处理"></a>RabbitMQ 高级消息队列处理</h2><h2 id="rabbitmqctl-使用"><a href="#rabbitmqctl-使用" class="headerlink" title="rabbitmqctl 使用"></a>rabbitmqctl 使用</h2><h3 id="Listing-queues-列出所有队列"><a href="#Listing-queues-列出所有队列" class="headerlink" title="Listing queues - 列出所有队列"></a>Listing queues - 列出所有队列</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">rabbitmqctl list_queues</span><br></pre></td></tr></tbody></table></figure>

<h3 id="列出未确认的消息"><a href="#列出未确认的消息" class="headerlink" title="列出未确认的消息"></a>列出未确认的消息</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">rabbitmqctl list_queues name messages_ready messages_unacknowledged</span><br></pre></td></tr></tbody></table></figure>

<h3 id="列出服务器上所有的交换机"><a href="#列出服务器上所有的交换机" class="headerlink" title="列出服务器上所有的交换机"></a>列出服务器上所有的交换机</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">rabbitmqctl list_exchanges</span><br></pre></td></tr></tbody></table></figure>

<h3 id="列出绑定列表"><a href="#列出绑定列表" class="headerlink" title="列出绑定列表"></a>列出绑定列表</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">rabbitmqctl list_bindings</span><br></pre></td></tr></tbody></table></figure>






















<p>参考:<br><a href="http://www.rabbitmq.com/tutorials/tutorial-one-php.html">http://www.rabbitmq.com/tutorials/tutorial-one-php.html</a><br><a href="https://github.com/php-amqplib/php-amqplib">https://github.com/php-amqplib/php-amqplib</a></p>
]]></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
        <tag>消息队列</tag>
      </tags>
  </entry>
  <entry>
    <title>SonarQube</title>
    <url>/posts/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/74b6dd6c.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>SonarQube（通常简称为Sonar）是一个开源的代码质量管理系统，它能够分析源代码的质量，提供有关代码质量、代码异味、潜在漏洞和安全问题的报告。SonarQube 可以对多种编程语言进行静态代码分析，包括 Java、C#、C/C++、JavaScript、Python 等。</p>
<a id="more"></a>

<h1 id="SonarQube-插件地址"><a href="#SonarQube-插件地址" class="headerlink" title="SonarQube 插件地址"></a>SonarQube 插件地址</h1><p><a href="https://docs.sonarqube.org/display/PLUG/">https://docs.sonarqube.org/display/PLUG/</a></p>
<p>Objective-C<br>    <a href="https://docs.sonarqube.org/display/PLUG/SonarCFamily+for+Objective-C">https://docs.sonarqube.org/display/PLUG/SonarCFamily+for+Objective-C</a></p>
<h1 id="服务端安装"><a href="#服务端安装" class="headerlink" title="服务端安装"></a>服务端安装</h1><p>sonarQube</p>
<h1 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a>客户端安装</h1><p>brew install sonar-scanner</p>
]]></content>
      <categories>
        <category>代码质量管理系统</category>
      </categories>
      <tags>
        <tag>代码质量管理系统</tag>
        <tag>SonarQube</tag>
      </tags>
  </entry>
  <entry>
    <title>包管理器镜像源配置</title>
    <url>/posts/mirrors/5e3aa94a.html</url>
    <content><![CDATA[<p>本篇主要记录各软件、包管理器使用时因<code>GWF</code>无法使用而需修改国内代码源的解决方案:</p>
<a id="more"></a>

<h3 id="Composer"><a href="#Composer" class="headerlink" title="Composer."></a>Composer.</h3><p>composer config -g repo.packagist composer <a href="https://packagist.phpcomposer.com/">https://packagist.phpcomposer.com</a></p>
<h3 id="Brew"><a href="#Brew" class="headerlink" title="Brew."></a>Brew.</h3><p>替换brew.git:<br>cd “$(brew –repo)”<br>git remote set-url origin <a href="https://mirrors.ustc.edu.cn/brew.git">https://mirrors.ustc.edu.cn/brew.git</a></p>
<p>替换homebrew-core.git:<br>cd “$(brew –repo)/Library/Taps/homebrew/homebrew-core”<br>git remote set-url origin <a href="https://mirrors.ustc.edu.cn/homebrew-core.git">https://mirrors.ustc.edu.cn/homebrew-core.git</a></p>
<p>替换Homebrew Bottles源:<br>echo ‘export HOMEBREW_BOTTLE_DOMAIN=<a href="https://mirrors.ustc.edu.cn/homebrew-bottles'">https://mirrors.ustc.edu.cn/homebrew-bottles'</a> &gt;&gt; ~/.zshrc<br>source ~/.zshrc</p>
<h2 id="brew-update"><a href="#brew-update" class="headerlink" title="brew update"></a>brew update</h2><p>切换回官方源<br>重置brew.git:<br>cd “$(brew –repo)”<br>git remote set-url origin <a href="https://github.com/Homebrew/brew.git">https://github.com/Homebrew/brew.git</a></p>
<p>重置homebrew-core.git:<br>cd “$(brew –repo)/Library/Taps/homebrew/homebrew-core”<br>git remote set-url origin <a href="https://github.com/Homebrew/homebrew-core.git">https://github.com/Homebrew/homebrew-core.git</a></p>
<p>注释掉bash配置文件里的有关Homebrew Bottles即可恢复官方源。 重启bash或让bash重读配置文件</p>
<h3 id="npm"><a href="#npm" class="headerlink" title="npm."></a>npm.</h3><p><a href="https://npm.taobao.org/">https://npm.taobao.org/</a><br>npm install -g cnpm –registry=<a href="https://registry.npmmirror.com/">https://registry.npmmirror.com</a></p>
<h3 id="pip"><a href="#pip" class="headerlink" title="pip."></a>pip.</h3><p>vi ~/.pip/pip.conf<br>[global]<br>trusted-host =  mirrors.aliyun.com<br>index-url = <a href="http://mirrors.aliyun.com/pypi/simple">http://mirrors.aliyun.com/pypi/simple</a></p>
]]></content>
      <categories>
        <category>mirrors</category>
      </categories>
      <tags>
        <tag>mirrors</tag>
      </tags>
  </entry>
  <entry>
    <title>快捷键汇总</title>
    <url>//kjj.html</url>
    <content><![CDATA[<h1 id="快捷键汇总"><a href="#快捷键汇总" class="headerlink" title="快捷键汇总"></a>快捷键汇总</h1><pre class="mermaid">graph LR
  A[快捷键]---AA[fa:fa-apple MacOS操作系统 fa:fa-link]


  AA-.-AAB[fa:fa-link Typora]
  AA-.-AAC[fa:fa-link NeoVim]
  A[快捷键]---AB[fa:fa-windows Windows操作系统 fa:fa-link]
  A[快捷键]---AC[VSCode fa:fa-link]
  A[快捷键]---AD[IDEA fa:fa-link]
  A[快捷键]---AE[Chrome fa:fa-link]
  A[快捷键]---AF[HHKB键盘图 fa:fa-link]

  AB-.-ABB[fa:fa-link Typora]
  AB-.-ABC[fa:fa-link NeoVim]
  ABC---ABCA[fa:fa-link Vim]

    click AA "/posts/MacOS/kjj.html"
    click AB "/posts/Windows/kjj.html"
    click AC "/posts/VSCode/kjj.html"
    click AD "/posts/IDEA/kjj.html"
  click AE "/posts/Chrome/kjj.html"
  click AF "/images/hhkb.jpg"
  click AAB "https://support.typora.io/Shortcut-Keys/"
  click ABCA "https://www.runoob.com/w3cnote/all-vim-cheatsheat.html"</pre>



<a id="more"></a>

<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://mermaid.live/">https://mermaid.live/</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/355997933">https://zhuanlan.zhihu.com/p/355997933</a></p>
<p><a href="https://csnotes.gitlab.io/csnotes/tools/markdown/mermaid.html">https://csnotes.gitlab.io/csnotes/tools/markdown/mermaid.html</a></p>
<p><a href="https://fontawesome.com/icons?d=gallery">Mermaid 支持的图标</a></p>
]]></content>
      <categories>
        <category>快捷键</category>
      </categories>
      <tags>
        <tag>快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>Alfred Workflows</title>
    <url>/posts/Alfred/7de8e7b8.html</url>
    <content><![CDATA[<p>本文主要收集我所使用过的 <code>Alfred Workflows</code> , 在此也推荐给大家并将持续更新, 也欢迎大家留言推荐实用的<code>Workflows</code>以便与众人共享<br>若没有也可向我提出你的想法，具体实现交给我。</p>
<a id="more"></a>
<h3 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h3><ul>
<li><p><a href="https://github.com/codezm/Alfred-codezm-workflows-ssh">Alfred-codezm-workflows-ssh</a> 快速通过<code>iTerm</code> ssh 到服务器。对<code>~/.ssh/config</code>进行分析，快捷键<code>ssh</code>, 若你根据简介配置<code>ssh</code>, 打开<code>Alfred</code> 输入 <code>ssh 127.0.0.1</code> 打开默认终端后<code>Command + v</code>完成密码输入即可链接服务器。</p>
</li>
<li><p><a href="https://github.com/codezm/Alfred-codezm-workflows-timestamp-convert">Alfred-codezm-workflows-timestamp-convert</a> 时间戳与时间互转换工具。若你是<code>Web</code>开发工作者选择它没有错。</p>
</li>
<li><p>Dash 此工具没有放置链接，只要你下载<code>Dash.app</code> 进入 <code>Preferences</code> 至 <code>Ietegration</code> 点击 <code>Alfred</code> 即可完成添加，手册查询利器。输入 <code>dash php:echo</code> 即可查询指定<code>php</code>语言的<code>echo</code>语法。</p>
</li>
<li><p><a href="https://github.com/liszd/whyliam.workflows.youdao">whyliam.workflows.youdao</a> 若你英语不是很好那就选择它。</p>
</li>
<li><p><a href="https://github.com/hzlzh/Alfred-Workflows/raw/master/Downloads/Copy-Path.alfredworkflow">Copy-Path</a> 「Downloading」当你打开<code>Finder</code>却不知如何<code>Copy</code>文件或文件夹路径，这个工具可能适合你。</p>
</li>
<li><p><a href="https://github.com/shawnrice/alfred-2-caffeinate-workflow">Caffeinate Control</a> 不想让电脑<code>Sleep</code>? 那就选择它</p>
</li>
<li><p><a href="https://github.com/LeEnno/alfred-terminalfinder">alfred-terminalfinder</a> 想在<code>Finder</code>与<code>Terminal</code>相互切换，选择它没有错。</p>
</li>
<li><p><a href="https://github.com/jeffmagill/alfred-open-in-filezilla">Open in Filezilla</a> 你若使用<code>Filezilla</code>来上传文件, 下载它能使你更加便利, 如果发现键入快捷键没有效果, 你需要双击<code>Fz</code>图片更改<code>Script</code>中的 <code>~/.filezilla/sitemanager.xml</code> 为 <code>~/.config/filezilla/sitemanager.xml</code>。</p>
</li>
<li><p><a href="https://github.com/ngreenstein/alfred-process-killer">alfred-process-killer</a> <code>kill</code> 太麻烦试试它吧 ~, 结束进程使用 <code>kill -9</code>。</p>
</li>
<li><p><a href="https://github.com/gharlan/alfred-github-workflow/releases/download/v1.6/github.alfredworkflow">alfred-github-workflow</a> 你若经常提交<code>github</code>, 这个工具会适合你。</p>
</li>
<li><p><a href="https://github.com/hzlzh/Alfred-Workflows/raw/master/Downloads/Workflow-Searcher.alfredworkflow">Workflow Searcher</a> 「Downloading」如果看到这里还没有你想要的，选择它愉快的进行搜索吧。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Alfred</category>
      </categories>
      <tags>
        <tag>Alfred</tag>
      </tags>
  </entry>
  <entry>
    <title>Alfred插件使用</title>
    <url>/posts/Alfred/be15de54.html</url>
    <content><![CDATA[<p>Alfred插件使用</p>
<a id="more"></a>

<h2 id="快速连接服务器"><a href="#快速连接服务器" class="headerlink" title="快速连接服务器"></a>快速连接服务器</h2><h3 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h3><h5 id="创建服务器配置"><a href="#创建服务器配置" class="headerlink" title="创建服务器配置"></a>创建服务器配置</h5><ul>
<li><p>固定格式</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ssh <span class="variable">$server</span>-name <span class="variable">$server</span>-ip <span class="variable">$server</span>-username <span class="variable">$server</span>-password [<span class="variable">$server</span>-su-password] | <span class="keyword">do</span></span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>万能模式</p>
<p>可配置密钥、端口号等登入服务器。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ssh <span class="variable">$server</span>-name <span class="string">'ssh -i ~/.ssh/id_rsa -p 2222 root@127.0.0.1'</span> | <span class="keyword">do</span></span><br></pre></td></tr></tbody></table></figure>

</li>
</ul>
<h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p>首先，在 <code>Alfred</code> 搜索框中输入 <code>ssh + $server-name</code> 进行检索。</p>
<ol>
<li>按 <code>Enter</code> 键，将自动打开终端并登入 <code>$server-name</code> 服务器。</li>
<li>按 <code>Shift + Enter</code> 键，将删除 <code>$server-name</code> 服务器配置。</li>
<li>按 <code>Command + Enter</code> 键，将复制 <code>$server-name</code> 服务器配置至系统剪贴板，在任意处按 <code>Command + v</code> 粘贴即可。</li>
</ol>
<h3 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h3><p>此命令依赖于通过 <code>ssh</code> 保存的服务器配置，使用方法与 <code>ssh</code> 相同，但没有删除、复制功能，如有需要须切换至 <code>ssh</code> 命令。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 下载服务器端文件至本地</span></span><br><span class="line">scp <span class="variable">$server</span>-name&lt;Enter&gt;Download&lt;Enter&gt;<span class="variable">$server</span>-download-file-path <span class="variable">$local</span>-save-directory</span><br><span class="line"><span class="comment"># 上传本地文件至服务器</span></span><br><span class="line">scp <span class="variable">$server</span>-name&lt;Enter&gt;upload&lt;Enter&gt;<span class="variable">$server</span>-save-directory <span class="variable">$local</span>-upload-file-path</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>Tips: </p>
<ul>
<li>本地保存文件目录、上传文件路径：<code>$local-save-directory</code>、<code>$local-upload-file-path</code>  若非绝对路径，则默认路径前缀是 <code>$HOME/Downloads/</code>。</li>
</ul>
</blockquote>
<h3 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h3><h5 id="创建服务器配置-1"><a href="#创建服务器配置-1" class="headerlink" title="创建服务器配置"></a>创建服务器配置</h5><ul>
<li><p>固定格式</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">redis <span class="variable">$server</span>-name <span class="variable">$server</span>-ip [<span class="variable">$server</span>-port <span class="variable">$db</span> [<span class="variable">$user</span>] <span class="variable">$pass</span>] | <span class="keyword">do</span></span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>万能模式</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">redis <span class="variable">$server</span>-name <span class="string">'redis-cli -h 127.0.0.1 -p 6379 -n 15 --pass 1234'</span> | <span class="keyword">do</span></span><br></pre></td></tr></tbody></table></figure>

</li>
</ul>
<h5 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h5><p>首先，在 <code>Alfred</code> 搜索框中输入 <code>redis + $server-name</code> 进行检索。</p>
<ol>
<li>按 <code>Enter</code> 键，将自动打开终端并登入 <code>$server-name</code> 服务器。</li>
<li>按 <code>Shift + Enter</code> 键，将删除 <code>$server-name</code> 服务器配置。</li>
<li>按 <code>Command + Enter</code> 键，将复制 <code>$server-name</code> 服务器配置至系统剪贴板，在任意处按 <code>Command + v</code> 粘贴即可。</li>
</ol>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"export DOTFILE_HOME=~/config/dotfile"</span> &gt;&gt; ~/.zshrc</span><br><span class="line">vim <span class="variable">$DOTFILE_HOME</span>/quick-connect-server.zsh</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Alfred</category>
      </categories>
      <tags>
        <tag>Alfred</tag>
      </tags>
  </entry>
  <entry>
    <title>Ansible 实用代码总结</title>
    <url>/posts/Ansible/af3f283b.html</url>
    <content><![CDATA[<p>Ansible 实用代码总结</p>
<a id="more"></a>

<h5 id="变量打印"><a href="#变量打印" class="headerlink" title="变量打印"></a>变量打印</h5><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">       <span class="attr">msg:</span> <span class="string">task10</span></span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Check</span> <span class="string">ImageMagick</span> <span class="string">source</span> <span class="string">dir</span> <span class="string">exists</span></span><br><span class="line">  <span class="attr">stat:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/tmp/ImageMagick-{{</span> <span class="string">ImageMagick_version</span> <span class="string">}}</span></span><br><span class="line">  <span class="attr">changed_when:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">register:</span> <span class="string">result_stat_imagemagick_source_dir</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">    <span class="attr">var:</span> <span class="string">result_stat_imagemagick_source_dir</span></span><br><span class="line">    <span class="attr">verbosity:</span> <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>



<h5 id="目录、文件存在判断"><a href="#目录、文件存在判断" class="headerlink" title="目录、文件存在判断"></a>目录、文件存在判断</h5><p><a href="https://stackoverrun.com/cn/q/9829335">https://stackoverrun.com/cn/q/9829335</a></p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Check</span> <span class="string">ImageMagick</span> <span class="string">source</span> <span class="string">dir</span> <span class="string">exists</span></span><br><span class="line">  <span class="attr">stat:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/tmp/ImageMagick-{{</span> <span class="string">ImageMagick_version</span> <span class="string">}}</span></span><br><span class="line">  <span class="attr">changed_when:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">register:</span> <span class="string">result_stat_imagemagick_source_dir</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Copy</span> <span class="string">and</span> <span class="string">unarchive</span> <span class="string">ImageMagick</span> <span class="string">source</span> <span class="string">code</span> <span class="string">zip</span> <span class="string">file.</span></span><br><span class="line">  <span class="attr">unarchive:</span> <span class="string">src="ImageMagick-{{</span> <span class="string">ImageMagick_version</span> <span class="string">}}.tar.gz"</span> <span class="string">dest=/tmp</span> <span class="string">copy=yes</span> <span class="string">mode=0755</span></span><br><span class="line">  <span class="attr">when:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">result_stat_imagemagick_source_dir.stat.exists</span> <span class="string">==</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      <categories>
        <category>Ansible</category>
      </categories>
      <tags>
        <tag>Ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>Ansible 目录、文件操作</title>
    <url>/posts/Ansible/6f5838da.html</url>
    <content><![CDATA[<p>Ansible 目录、文件操作</p>
<a id="more"></a>

<h4 id="目录创建、删除"><a href="#目录创建、删除" class="headerlink" title="目录创建、删除"></a>目录创建、删除</h4><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Create</span> <span class="string">a</span> <span class="string">directory</span> <span class="string">if</span> <span class="string">it</span> <span class="string">does</span> <span class="string">not</span> <span class="string">exist</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/appvol/some_directory</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">'0755'</span></span><br><span class="line">    </span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Remove</span> <span class="string">a</span> <span class="string">directory</span> <span class="string">if</span> <span class="string">it</span> <span class="string">exist</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/appvol/some_directory</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">absent</span></span><br></pre></td></tr></tbody></table></figure>

<h4 id="文件创建、删除"><a href="#文件创建、删除" class="headerlink" title="文件创建、删除"></a>文件创建、删除</h4><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Create</span> <span class="string">a</span> <span class="string">file</span> <span class="string">if</span> <span class="string">it</span> <span class="string">does</span> <span class="string">not</span> <span class="string">exist</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/appvol/some_directory/hello.txt</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">touch</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">'0755'</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Remove</span> <span class="string">a</span> <span class="string">file</span> <span class="string">if</span> <span class="string">it</span> <span class="string">exist</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/appvol/some_directory/hello.txt</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">absent</span></span><br></pre></td></tr></tbody></table></figure>

<h4 id="删除某个目录下的所有文件，或者符合条件的文件名"><a href="#删除某个目录下的所有文件，或者符合条件的文件名" class="headerlink" title="删除某个目录下的所有文件，或者符合条件的文件名"></a>删除某个目录下的所有文件，或者符合条件的文件名</h4><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">list</span> <span class="string">the</span> <span class="string">files</span> <span class="string">of</span> <span class="string">dir</span> <span class="string">some_directory</span></span><br><span class="line">  <span class="attr">shell:</span> <span class="string">ls</span></span><br><span class="line">  <span class="attr">args:</span></span><br><span class="line">    <span class="attr">chdir:</span> <span class="string">/appvol/some_directory</span></span><br><span class="line">  <span class="attr">register:</span> <span class="string">files_list</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Remove</span> <span class="string">a</span> <span class="string">directory</span> <span class="string">if</span> <span class="string">it</span> <span class="string">does</span> <span class="string">not</span> <span class="string">exist</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/appvol/some_directory/{{</span> <span class="string">item</span> <span class="string">}}</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">absent</span></span><br><span class="line">  <span class="attr">with_items:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"<span class="template-variable">{{ files_list.stdout_lines }}</span>"</span></span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Ansible</category>
      </categories>
      <tags>
        <tag>Ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>Appium使用记录</title>
    <url>/posts/Appium/edb40252.html</url>
    <content><![CDATA[<p>Appium使用记录</p>
<a id="more"></a>


<h4 id="通过坐标点击"><a href="#通过坐标点击" class="headerlink" title="通过坐标点击"></a>通过坐标点击</h4><p>官方文档：<a href="https://appium.io/docs/en/commands/interactions/touch/tap/">https://appium.io/docs/en/commands/interactions/touch/tap/</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> appium.webdriver.common.touch_action <span class="keyword">import</span> TouchAction</span><br><span class="line"></span><br><span class="line">TouchAction(self.driver).tap(x=<span class="number">529</span>, y=<span class="number">1170</span>).perform()</span><br></pre></td></tr></tbody></table></figure>



<h4 id="获取-content-desc-中的内容"><a href="#获取-content-desc-中的内容" class="headerlink" title="获取 content-desc 中的内容"></a>获取 content-desc 中的内容</h4><p><a href="https://appium.io/docs/en/commands/element/attributes/attribute/">https://appium.io/docs/en/commands/element/attributes/attribute/</a></p>
<figure class="highlight py"><table><tbody><tr><td class="code"><pre><span class="line">self.driver.find_element(By.XPATH, <span class="string">"//android.view.ViewGroup[contains(@content-desc, '工作通知')]"</span>).get_attribute(<span class="string">"contentDescription"</span>)</span><br></pre></td></tr></tbody></table></figure>



<h4 id="页面原始-xml-信息"><a href="#页面原始-xml-信息" class="headerlink" title="页面原始 xml 信息"></a>页面原始 xml 信息</h4><p><a href="https://appium.io/docs/en/commands/session/source/">https://appium.io/docs/en/commands/session/source/</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">source = self.driver.page_source</span><br></pre></td></tr></tbody></table></figure>





<h4 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h4><p><a href="https://www.cnblogs.com/dy99/p/14287543.html">https://www.cnblogs.com/dy99/p/14287543.html</a></p>
]]></content>
      <categories>
        <category>Appium</category>
      </categories>
      <tags>
        <tag>Appium</tag>
      </tags>
  </entry>
  <entry>
    <title>Charles使用</title>
    <url>/posts/Tools/fc49c289.html</url>
    <content><![CDATA[<p>程序员开发程序除了要会编写代码外还需要会使用各种工具辅助 - [Charles] 代理工具.</p>
<a id="more"></a>
<h4 id="Https-to-http-转发"><a href="#Https-to-http-转发" class="headerlink" title="Https to http 转发."></a>Https to http 转发.</h4><p><code>Tools - Map Remote - add</code><br>from https<br>to http</p>
<h6 id="手机添加证书"><a href="#手机添加证书" class="headerlink" title="手机添加证书"></a>手机添加证书</h6><p>手机端使用浏览器访问<code>chls.pro/ssl</code>地址, 安装证书.</p>
<h6 id="证书信任"><a href="#证书信任" class="headerlink" title="证书信任"></a>证书信任</h6><p>Iphone用户: <code>设置 - 通用 - 关于本机 - 证书信任设置</code> 信任证书.</p>
]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Chrome 开发必装插件分享</title>
    <url>/posts/Chrome/1913efb4.html</url>
    <content><![CDATA[<h2 id="Chrome-开发必装插件"><a href="#Chrome-开发必装插件" class="headerlink" title="Chrome 开发必装插件"></a>Chrome 开发必装插件</h2><p>清除浏览器缓存：chrome://settings/clearBrowserData</p>
<p>强制https设置：chrome://net-internals/#hsts</p>
<p>管理扩展程序：chrome://extensions/</p>
<p>清除 DNS 缓存：<a href="chrome://net-internals/#dns">chrome://net-internals/#dns</a></p>
<ul>
<li>chrome://settings/ </li>
<li>系统</li>
<li>使 <code>使用图形加速功能（如果可用） </code> 保持关闭</li>
</ul>
<a id="more"></a>

<h4 id="代理插件"><a href="#代理插件" class="headerlink" title="代理插件"></a>代理插件</h4><ul>
<li><p><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif">SwitchyOmega</a></p>
<ul>
<li><p>ID值：<code>padekgcemlokbadohgkifijomclgjgif</code>。</p>
</li>
<li><p>简介：轻松快捷地管理和切换多个代理设置。</p>
</li>
<li><p><a href="https://github.com//FelisCatus/SwitchyOmega/releases">Github</a></p>
</li>
<li><p><a href="https://github.com/gfwlist/gfwlist">gfwlist</a>： <a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</a></p>
</li>
</ul>
</li>
</ul>
<h4 id="密码管理"><a href="#密码管理" class="headerlink" title="密码管理"></a>密码管理</h4><ul>
<li><a href="https://chrome.google.com/webstore/detail/1password-extension-deskt/aomjjhallfgjeglblehebfpbcfeobpgk">1Password (desktop app required)</a><ul>
<li>ID值：<code>aomjjhallfgjeglblehebfpbcfeobpgk</code>。</li>
<li>简介：1Password 为你记住一切。保存您的密码并可一键登录网站。就是这么简单。</li>
<li><a href="https://1password.com/">官网</a></li>
</ul>
</li>
<li><a href="https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/related?hl=zh-CN">Bitwarden</a> 免费的密码管理器。</li>
<li><a href="">LastPass</a> 屡获殊荣的密码管理器,保存你的密码,让你安全访问任何计算机和移动设备。</li>
</ul>
<h4 id="广告拦截"><a href="#广告拦截" class="headerlink" title="广告拦截"></a>广告拦截</h4><ul>
<li><a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm">uBlock Origin</a><ul>
<li>ID值：<code>cjpalhdlnbpafiamejdnhcphjbkeiagm</code>。</li>
<li>简介：一款高效的网络请求过滤工具，占用极低的内存和 CPU。</li>
<li><a href="https://github.com/gorhill/uBlock/releases">Github</a></li>
</ul>
</li>
<li><a href="https://chrome.google.com/webstore/detail/adblock-plus-free-ad-bloc/cfhdojbkjhnklbpkdaibdccddilifddb">Adblock Plus</a><ul>
<li>ID值：<code>cfhdojbkjhnklbpkdaibdccddilifddb</code>。</li>
<li>简介：Adblock Plus 是拥有超过 5 亿次下载的全球最受欢迎的广告拦截软件之一。</li>
<li><a href="https://adblockplus.org/">官网</a></li>
</ul>
</li>
</ul>
<h4 id="脚本管理"><a href="#脚本管理" class="headerlink" title="脚本管理"></a>脚本管理</h4><ul>
<li><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo">Tampermonkey</a><ul>
<li>ID值：<code>dhdgffkkebhmkfjojejmpbldmpobfkfo</code>。</li>
<li>简介：Tampermonkey（油猴）是最受欢迎的浏览器扩展之一，拥有超过1000万用户。</li>
<li><a href="https://www.tampermonkey.net/">官网</a></li>
<li><a href="https://www.userscript.zone/">用户脚本搜索</a></li>
</ul>
</li>
<li><a href="https://chrome.google.com/webstore/detail/ace-script/mjbepbhonbojpoaenhckjocchgfiaofo">暴力猴</a><ul>
<li>ID值：<code>mjbepbhonbojpoaenhckjocchgfiaofo</code>。</li>
<li><a href="http://acescript.acestream.me/">官网</a></li>
<li><a href="https://github.com/acestream/webextension">Github</a></li>
</ul>
</li>
</ul>
<h4 id="新标签页"><a href="#新标签页" class="headerlink" title="新标签页"></a>新标签页</h4><ul>
<li><p><a href="https://chrome.google.com/webstore/detail/infinity-new-tab-producti/dbfmnekepjoapopniengjbcpnbljalfg">Infinity 新标签页</a></p>
<ul>
<li>ID值：<code>dbfmnekepjoapopniengjbcpnbljalfg</code></li>
<li>简介：百万用户选择的新标签页，自由添加网站图标，云端高清壁纸，快速访问书签、天气、笔记、待办事项、扩展管理与历史记录。</li>
<li><a href="https://www.infinitynewtab.com/">官网</a></li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/%E6%8E%98%E9%87%91/lecdifefmmfjnjjinhaennhdlmcaeeeb">掘金</a></p>
<ul>
<li>ID值：<code>lecdifefmmfjnjjinhaennhdlmcaeeeb</code></li>
<li>简介：为程序员、设计师、产品经理每日发现优质内容。</li>
<li><a href="%5Bhttps://juejin.im%5D(https://juejin.im/)">官网</a></li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/mhloojimgilafopcmlcikiidgbbnelip">iTab新标签页</a></p>
<ul>
<li>简介：iTab 组件式图标自定义您的浏览器的标签页，精美日历、炫酷天气、每日头条、海量壁纸、常用网址随心订制</li>
</ul>
</li>
</ul>
<h4 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h4><ul>
<li><p><a href="https://chrome.google.com/webstore/detail/ctool-%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/ipfcebkfhpkjeikaammlkcnalknjahmh">Ctool</a></p>
<ul>
<li>ID值：<code>ipfcebkfhpkjeikaammlkcnalknjahmh</code></li>
<li>简介：程序开发常用工具,哈希/加解密/编码转换/时间戳/二维码/拼音/IP查询/代码优化/Unicode/正则等…</li>
<li><a href="https://github.com/baiy/Ctool">Github</a></li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/web-developer-form-filler/gbagmkohmhcjgbepncmehejaljoclpil">Web Developer Form Filler</a></p>
<ul>
<li>ID值：<code>gbagmkohmhcjgbepncmehejaljoclpil</code></li>
<li>简介：这个扩展被开发人员使用，使它很容易填写表格。</li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/xpath-helper/hgimnogjllphhhkhlmebbmlgjoejdpjl">XPath Helper</a></p>
<ul>
<li>ID值：<code>hgimnogjllphhhkhlmebbmlgjoejdpjl</code></li>
<li>简介：轻松提取、编辑和评估XPath查询。</li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb">Vimium</a></p>
<ul>
<li>ID值：<code>dbepggeogbaibhgnhhndojpepiihcmeb</code></li>
<li>简介：黑客的浏览器。viium本着Vim的精神提供了导航和控制的键盘快捷键。</li>
<li><a href="https://github.com/philc/vimium">Github</a></li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc">JSONView</a></p>
<ul>
<li>ID值：<code>chklaanhfefbnpoihckbnefhakgolnmc</code></li>
<li>简介：验证和查看JSON文档。</li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi">React Developer Tools</a></p>
<ul>
<li>ID值：<code>fmkadmapgofadopljbjfkapdkoienihi</code></li>
<li>简介：React 调试工具。</li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd">Vue.js devtools</a></p>
<ul>
<li>ID值：<code>nhdogjmejiglipccpnnnanhbledajbpd</code></li>
<li>简介：Vue.js 应用调试工具。</li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/pkgccpejnmalmdinmhkkfafefagiiiad">FeHelper(前端助手)</a></p>
<ul>
<li>简介：JSON自动格式化、手动格式化，支持排序、解码、下载等。</li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/ieelmcmcagommplceebfedjlakkhpden">Disable Content-Security-Policy</a></p>
<ul>
<li>简介：禁用 <code>Content-Security-Policy</code></li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/%E5%8D%B3%E6%97%B6%E5%B7%A5%E5%85%B7/fnlomhffjgaiejopfbacfjjpnegclmfb">即时工具</a></p>
<ul>
<li>简介：一款在线高效办公工具，拥有近300款工具包括视频工具、音频工具、图片工具、文档处理、文档转换、办公辅助、设计工具等等。</li>
<li>官方网址：<a href="https://www.67tool.com/">https://www.67tool.com/</a></li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd">Vue.js devtools</a></p>
<ul>
<li>简介：Vue.js 应用开发调试工具</li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/hackbar/ginpbkfigcoaokgflihfhhmglmbchinc">HackBar</a></p>
<ul>
<li>简介：渗透测试工具</li>
</ul>
</li>
</ul>
<h4 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h4><ul>
<li><p><a href="https://chrome.google.com/webstore/detail/gitcodetree/inaaldjpdbkaodlmdcplgpoibohcmmlj">GitCodeTree</a></p>
<ul>
<li>ID值：<code>inaaldjpdbkaodlmdcplgpoibohcmmlj</code></li>
<li>简介：基于 Octotree 的 <a href="http://gitee.com/">码云</a> 文件树插件，一个浏览器插件，在Gitee、GitHub上显示代码树。不用clone到本地就能查看项目结构。</li>
</ul>
</li>
<li><p><a href="https://chrome.google.com/webstore/detail/github%E5%8A%A0%E9%80%9F/mfnkflidjnladnkldfonnaicljppahpg">GitHub加速</a></p>
<ul>
<li>ID值：<code>mfnkflidjnladnkldfonnaicljppahpg</code></li>
<li>简介：能提高中国开发者访问GitHub的速度，提升克隆Git仓库的速度，提升下载release包的下载速度。</li>
</ul>
</li>
</ul>
<h4 id="Aria"><a href="#Aria" class="headerlink" title="Aria"></a>Aria</h4><ul>
<li><a href="https://chrome.google.com/webstore/detail/dennnbdlpgjgbcjfgaohdahloollfgoc">YAAW for Chrome</a></li>
</ul>
<p>​        支持右键添加到YAAW进行下载</p>
<h4 id="插件打包"><a href="#插件打包" class="headerlink" title="插件打包"></a>插件打包</h4><h5 id="Mac-平台"><a href="#Mac-平台" class="headerlink" title="Mac 平台"></a>Mac 平台</h5><ol>
<li><p>复制要打包的扩展ID及版本号。</p>
<blockquote>
<p>vue3-devtools</p>
<p>ID：ljjemllljcmogpfapbkkighbhhppjdbg</p>
<p>Version：6.0.0.21</p>
</blockquote>
</li>
<li><p>打包扩展</p>
<p>依次点击：三个点 <code>更多工具 -&gt; 扩展程序 -&gt; 打包扩展程序</code> ，扩展程序根目录 点击 <code>浏览</code> 按钮，键入 <code>Shift + Command + G</code> 输入扩展路径：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">~/Library/Application Support/Google/Chrome/Default/Extensions/ljjemllljcmogpfapbkkighbhhppjdbg/6.0.0.21_0</span><br></pre></td></tr></tbody></table></figure>

</li>
</ol>
<h5 id="Windows平台"><a href="#Windows平台" class="headerlink" title="Windows平台"></a>Windows平台</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">C:\Users\codezm\AppData\Local\Google\Chrome\User Data\Default\Extensions\ljjemllljcmogpfapbkkighbhhppjdbg\6.0.0.21_0</span><br></pre></td></tr></tbody></table></figure>



<h4 id="疑难自助解决"><a href="#疑难自助解决" class="headerlink" title="疑难自助解决"></a>疑难自助解决</h4><ol>
<li><p>安装插件时提示：<code>程序包无效："CRX_HEADER_INVALID"。</code> 问题。</p>
<ol>
<li>将插件安装包后缀名字 <code>.crx</code> 改为 <code>.rar</code> 或者 <code>.zip</code>，修改完 <code>解压</code>。</li>
</ol>
<pre class="mermaid">   graph LR

A[插件.crx]--&gt;|改后缀|B[插件.rar]--&gt;|解压缩|C(插件文件夹)</pre>

<ol start="2">
<li>Chrome地址栏输入 <code>chrome://extensions/</code> 打开，点击右上角 <code>开发者模式</code>，再点击左上角 <code>加载已解压的扩展程序</code> ，选择刚才解压后的 <code>文件夹</code>（打开文件夹可以看到很多文件），完成安装。</li>
</ol>
<p>如果依然提示安装失败，可尝试将文件夹名字 <code>_metadata</code> 修改为 <code>metadata</code> 也就是去掉前面的 <code>_</code> 修改完毕重新按照上述方法安装。</p>
</li>
<li><p>国内无法访问 Google Chrome 扩展商店的，可通过 <a href="https://crxdl.com/">CrxDL.COM</a> 下载Chrome扩展插件Crx离线安装包。</p>
</li>
<li><p>国内 Chrome 应用商店镜像站点：<a href="https://chrome.pictureknow.com/">https://chrome.pictureknow.com/</a></p>
</li>
</ol>
<h4 id="Chrome-URLs-列表"><a href="#Chrome-URLs-列表" class="headerlink" title="Chrome URLs 列表"></a><a href="chrome://chrome-urls/">Chrome URLs 列表</a></h4><ul>
<li><a href="chrome://extensions">扩展程序</a></li>
<li><a href="chrome://extensions/shortcuts">扩展程序 - 键盘快捷键</a></li>
<li><a href="chrome://settings/">设置</a></li>
</ul>
<h4 id="Chrome-浏览器下载"><a href="#Chrome-浏览器下载" class="headerlink" title="Chrome 浏览器下载"></a>Chrome 浏览器下载</h4><h5 id="离线版本下载地址"><a href="#离线版本下载地址" class="headerlink" title="离线版本下载地址"></a>离线版本下载地址</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">https://dl.google.com/tag/s/appguid={8A69D345-D564-463C-AFF1-A69D9E530F96}&amp;iid={77CCCA8B-F59C-E570-E701-E2575690F29C}&amp;lang=zh-CN&amp;browser=3&amp;usagestats=0&amp;appname=Google Chrome&amp;needsadmin=prefers&amp;ap=x64-stable-statsdef_1&amp;installdataindex=empty/chrome/install/ChromeStandaloneSetup64.exe</span><br></pre></td></tr></tbody></table></figure>

<h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="https://zhuanlan.zhihu.com/p/97198043">https://zhuanlan.zhihu.com/p/97198043</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/57152816">https://zhuanlan.zhihu.com/p/57152816</a></li>
</ul>
]]></content>
      <categories>
        <category>Chrome</category>
      </categories>
      <tags>
        <tag>Chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>Chrome中如何禁用JavaScript来实现复制自由</title>
    <url>/posts/Chrome/e3041ae7.html</url>
    <content><![CDATA[<p>Chrome中如何禁用JavaScript来实现复制自由</p>
<a id="more"></a>



<h1 id="禁用或启用-JavaScript"><a href="#禁用或启用-JavaScript" class="headerlink" title="禁用或启用 JavaScript"></a>禁用或启用 JavaScript</h1><ol>
<li>Chrome 打开 DevTools（F12 / ⌥+⌘+J）</li>
<li>⌘ + ⇪ + P（Ctrl + shift + P） 打开 Command Menu</li>
<li>输入<code>Disable JavaScript</code> 来启用或禁用。需要还原时再输入：<code>Enable JavaScript</code>。</li>
</ol>
]]></content>
      <categories>
        <category>Chrome</category>
      </categories>
      <tags>
        <tag>Chrome</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Chrome快捷键</title>
    <url>/posts/Chrome/kjj.html</url>
    <content><![CDATA[<h2 id="Chrome快捷键"><a href="#Chrome快捷键" class="headerlink" title="Chrome快捷键"></a>Chrome快捷键</h2><table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>⇪⌘B</td>
<td>显示/隐藏书签栏</td>
</tr>
<tr>
<td>⌘,</td>
<td>打开设置页</td>
</tr>
<tr>
<td>⌥⌘L</td>
<td>下载内容</td>
</tr>
<tr>
<td>⌘Y</td>
<td>历史记录</td>
</tr>
<tr>
<td>⇪B</td>
<td>打开书签检索框</td>
</tr>
<tr>
<td>⌃⇥</td>
<td>切换至下一个标签页</td>
</tr>
<tr>
<td>⌃⇪⇥</td>
<td>切换至上一个标签页</td>
</tr>
</tbody></table>
<h2 id="Chrome-浏览器下载"><a href="#Chrome-浏览器下载" class="headerlink" title="Chrome 浏览器下载"></a>Chrome 浏览器下载</h2><p><strong>默认当前系统版本：</strong><br><a href="https://www.google.cn/intl/zh-CN/chrome/">https://www.google.cn/intl/zh-CN/chrome/</a></p>
<p><strong>Windows 64：</strong><br><a href="https://www.google.cn/intl/zh-CN/chrome/?standalone=1&amp;platform=win64">https://www.google.cn/intl/zh-CN/chrome/?standalone=1&amp;platform=win64</a></p>
<p><strong>Windows 32：</strong><br><a href="https://www.google.cn/intl/zh-CN/chrome/?standalone=1&amp;platform=win">https://www.google.cn/intl/zh-CN/chrome/?standalone=1&amp;platform=win</a></p>
<p><strong>Mac：</strong><br><a href="https://www.google.cn/intl/zh-CN/chrome/?standalone=1&amp;platform=mac">https://www.google.cn/intl/zh-CN/chrome/?standalone=1&amp;platform=mac</a></p>
<p><strong>Linux：</strong><br><a href="https://www.google.cn/intl/zh-CN/chrome/?standalone=1&amp;platform=linux">https://www.google.cn/intl/zh-CN/chrome/?standalone=1&amp;platform=linux</a></p>
<p><strong>历史版本：</strong><br><a href="https://www.slimjet.com/chrome/google-chrome-old-version.php">https://www.slimjet.com/chrome/google-chrome-old-version.php</a></p>
<p>url 的参数说明：</p>
<p><code>standalone=1</code>：下载最新的完整离线安装包</p>
<p><code>platform=win64</code>：适用于Windows操作系统，64代表64位</p>
<p><code>platform=win</code>：如果不写64，就是下载的32位安装包</p>
<p><code>installdataindex=defaultbrowser</code>： 设置 Chrome 为默认浏览器，</p>
<p><code>installdataindex=empty</code>：不设置 Chrome 为默认浏览器</p>
<p><code>extra=stablechannel</code>：指定下载的版本为稳定版，还有其他版本（betachannel、devchannel、canarychannel）分别是测试版、开发版、金丝雀版</p>
]]></content>
      <categories>
        <category>Chrome</category>
      </categories>
      <tags>
        <tag>Chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>Chrome麦克风授权</title>
    <url>/posts/Chrome/e3041ae8.html</url>
    <content><![CDATA[<p>使用 127.0.0.1、localhost及 https 可以正常获取麦克风权限。如果使用的是局域网 IP 地址则需要设置信任的地址</p>
<h3 id="信任的地址配置"><a href="#信任的地址配置" class="headerlink" title="信任的地址配置"></a>信任的地址配置</h3><p><a href="chrome://flags/#unsafely-treat-insecure-origin-as-secure">chrome://flags/#unsafely-treat-insecure-origin-as-secure</a></p>
<p><img data-src="e3041ae8/image-20250918103132601.png" alt="image-20250918103132601"></p>
<blockquote>
<p>启用后需要重启 Chrome 浏览器，重启后就能成功调起麦克风。</p>
</blockquote>
]]></content>
      <categories>
        <category>Chrome</category>
      </categories>
      <tags>
        <tag>Chrome</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker-制作whistle镜像</title>
    <url>/posts/Docker/53910851.html</url>
    <content><![CDATA[<p>本篇将介绍如何通过 Github 的 Action 自动化脚本制作 whistle 的 docker 镜像并发布到 ghcr.io 上。</p>
<p><a href="https://github.com/codezm/whistle">https://github.com/codezm/whistle</a></p>
<a id="more"></a>

<h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><figure class="highlight dockerfile"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:lts-alpine3.<span class="number">18</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> npm install -g whistle</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"w2 run"</span>]</span></span><br></pre></td></tr></tbody></table></figure>



<h3 id="Actions"><a href="#Actions" class="headerlink" title="Actions"></a>Actions</h3><p>任何 Git 的 push 动作将触发脚本的执行。本脚本将构建 linux/amd64 平台的 docker 镜像，交叉编译多平台可参见：<a href="https://github.com/codezm/whistle/blob/master/.github/workflows/docker.yml">https://github.com/codezm/whistle/blob/master/.github/workflows/docker.yml</a></p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Docker</span> <span class="string">Image</span> <span class="string">CI</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="string">push</span></span><br><span class="line"></span><br><span class="line"><span class="attr">env:</span></span><br><span class="line">  <span class="attr">GHCR_IMAGE_NAME:</span> <span class="string">${{</span> <span class="string">github.repository</span> <span class="string">}}</span></span><br><span class="line">  <span class="attr">GHCR_TOKEN:</span> <span class="string">${{</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">}}</span></span><br><span class="line">  <span class="attr">GHCR_USERNAME:</span> <span class="string">${{</span> <span class="string">github.actor</span> <span class="string">}}</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">docker_build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">permissions:</span></span><br><span class="line">      <span class="attr">contents:</span> <span class="string">read</span></span><br><span class="line">      <span class="attr">packages:</span> <span class="string">write</span></span><br><span class="line">      <span class="attr">attestations:</span> <span class="string">write</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">fetch-depth:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Login</span> <span class="string">to</span> <span class="string">GHCR</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/login-action@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">registry:</span> <span class="string">ghcr.io</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">${{</span> <span class="string">env.GHCR_USERNAME</span> <span class="string">}}</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">${{</span> <span class="string">env.GHCR_TOKEN</span> <span class="string">}}</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Docker</span> <span class="string">meta</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">meta</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/metadata-action@v5</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">images:</span> <span class="string">|</span></span><br><span class="line">            <span class="string">ghcr.io/${{</span> <span class="string">env.GHCR_IMAGE_NAME</span> <span class="string">}}</span></span><br><span class="line">          <span class="attr">tags:</span> <span class="string">|</span></span><br><span class="line">            <span class="string">type=ref,event=tag</span></span><br><span class="line">            <span class="string">type=raw,value=latest,enable=${{</span> <span class="string">startsWith(github.ref,</span> <span class="string">'refs/tags/'</span><span class="string">)</span> <span class="string">}}</span></span><br><span class="line">            <span class="string">type=pep440,pattern={{raw}},enable=${{</span> <span class="string">startsWith(github.ref,</span> <span class="string">'refs/tags/'</span><span class="string">)</span> <span class="string">}}</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">and</span> <span class="string">push</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/build-push-action@v5</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">          <span class="attr">push:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">tags:</span> <span class="string">${{</span> <span class="string">steps.meta.outputs.tags</span> <span class="string">}}</span></span><br><span class="line">          <span class="attr">labels:</span> <span class="string">${{</span> <span class="string">steps.meta.outputs.labels</span> <span class="string">}}</span></span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker使用记录</title>
    <url>/posts/Docker/4a31bd63.html</url>
    <content><![CDATA[<h1 id="Docker使用记录"><a href="#Docker使用记录" class="headerlink" title="Docker使用记录"></a>Docker使用记录</h1><a id="more"></a>



<h4 id="inspect-查看镜像详细信息"><a href="#inspect-查看镜像详细信息" class="headerlink" title="inspect 查看镜像详细信息"></a>inspect 查看镜像详细信息</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">docker inspect -f {{<span class="string">".Size"</span>}} nginx</span><br></pre></td></tr></tbody></table></figure>



<h4 id="history-查看镜像历史信息"><a href="#history-查看镜像历史信息" class="headerlink" title="history 查看镜像历史信息"></a>history 查看镜像历史信息</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">docker <span class="built_in">history</span> --no-trunc nginx</span><br></pre></td></tr></tbody></table></figure>



<h3 id="Docker-–volume-挂载时报错信息如下"><a href="#Docker-–volume-挂载时报错信息如下" class="headerlink" title="Docker –volume 挂载时报错信息如下:"></a>Docker –volume 挂载时报错信息如下:</h3><pre><code>Are you trying to mount a directory onto a file (or vice-versa)? Check if the specified host path exists and is the expected type.

出现此情况: 请检查是否使用boot2docker挂载了共享目录，是有使用了别名</code></pre>
<h4 id="docker-run"><a href="#docker-run" class="headerlink" title="docker run"></a>docker run</h4><pre><code>-d 后台运行
-h 修改container终端HOST
-p 指定端口映射 本机(非docker)端口:container端口
-v 挂载目录 本机:container
--privileged 提权
--name container name
--restart=always 自动重启
--dns=ipaddr 指定dns
/run.sh 将运行 /usr/sbin/sshd -D</code></pre>
<h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3><p>安装 telnet<br>apt-get install xinetd telnetd</p>
<p>memcached<br>telnet 127.0.0.1 11211<br>stats items<br>stats cachedump 7 0<br>get testkey</p>
<h4 id="镜像的导入导出"><a href="#镜像的导入导出" class="headerlink" title="镜像的导入导出"></a>镜像的导入导出</h4><p>导出镜像<br>docker save -o centos7.tar centos<br>导入本地镜像<br>sudo docker load –input centos7.tar</p>
<h4 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -i mysql8 mysql --show-warnings --silent -uroot -p1234 -e <span class="string">"show databases"</span></span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker 镜像仓库</title>
    <url>/posts/Docker/d6d418a.html</url>
    <content><![CDATA[<h1 id="Docker-镜像仓库"><a href="#Docker-镜像仓库" class="headerlink" title="Docker 镜像仓库"></a>Docker 镜像仓库</h1><ul>
<li><a href="https://hub.docker.com/">hub.docker.com</a></li>
<li><a href="https://ghcr.io/">ghcr.io</a></li>
</ul>
<h2 id="ghcr-io简介"><a href="#ghcr-io简介" class="headerlink" title="ghcr.io简介"></a>ghcr.io简介</h2><p>ghcr.io 是GitHub Container Registry 的域名。 </p>
<p>GitHub Container Registry 是GitHub 提供的容器镜像注册表服务，允许开发者在GitHub 上存储、管理和分享Docker 镜像。</p>
<h2 id="阿里云容器镜像服务"><a href="#阿里云容器镜像服务" class="headerlink" title="阿里云容器镜像服务"></a>阿里云容器镜像服务</h2><p><a href="https://cr.console.aliyun.com/cn-hangzhou/instances">https://cr.console.aliyun.com/cn-hangzhou/instances</a></p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker-machine certificate is valid</title>
    <url>/posts/Error-resolution/6c357078.html</url>
    <content><![CDATA[<p>docker-machine start docker-vm 后, docker-machine env docker-vm 提示如下信息:</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">Unknown Unable to query docker version: Get https://192.168.99.101:2376/v1.15/version: x509: certificate is valid for 192.168.99.103, not 192.168.99.101</span><br></pre></td></tr></tbody></table></figure>

<a id="more"></a>

<p>解决方案:</p>
<figure class="highlight docker"><table><tbody><tr><td class="code"><pre><span class="line">docker-machine regenerate-certs docker-vm</span><br><span class="line"></span><br><span class="line">docker-machine restart docker-vm</span><br><span class="line">eval $(docker-machine <span class="keyword">env</span> docker-vm)</span><br></pre></td></tr></tbody></table></figure>

<p>需要为一个 machine 重新生成 TLS 证书。<br>导致此错误的原因是 docker-machine rm docker-vm-one 后，在后面新创建一个 docker-vm-two 而再次启动  docker-vm-two 时则可能会出现此错误[ 此处未详细测试(terminal close sometime triggle), 本人是在重启电脑后提示的 ]!</p>
]]></content>
      <categories>
        <category>Error_resolution</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>制作Alpine Docker镜像</title>
    <url>/posts/Docker/3b8c1fde.html</url>
    <content><![CDATA[<h1 id="制作Alpine-Docker镜像"><a href="#制作Alpine-Docker镜像" class="headerlink" title="制作Alpine Docker镜像"></a>制作Alpine Docker镜像</h1><a id="more"></a>

<h4 id="使用-Alpine-系统-3-6-4M"><a href="#使用-Alpine-系统-3-6-4M" class="headerlink" title="使用 Alpine 系统[3.6 - 4M]"></a>使用 Alpine 系统[3.6 - 4M]</h4><p>类似服务有:<br>    nginx mysql-client etc.<br>    对于这些服务运行来说使用 ubuntu centos 都太过庞大.</p>
<p>修改镜像源:<br>    echo “<a href="http://mirrors.aliyun.com/alpine/v3.4/main/&quot;">http://mirrors.aliyun.com/alpine/v3.4/main/"</a> &gt; /etc/apk/repositories</p>
<p>apk update &amp;&amp; apk add wget gcc make openssl-dev zlib-dev perl-dev pcre-dev libc-dev</p>
<p>wget –no-check-certificate -O /tmp/nginx-1.12.1.tar.gz <a href="http://nginx.org/download/nginx-1.12.1.tar.gz">http://nginx.org/download/nginx-1.12.1.tar.gz</a><br>cd /tmp/ &amp;&amp; tar zxf nginx-1.12.1.tar.gz &amp;&amp; <br>       cd /tmp/nginx-1.12.1 &amp;&amp; <br>       ./configure –with-http_gzip_static_module –with-http_ssl_module &amp;&amp; <br>       make &amp;&amp; make install</p>
<p>移除 build 依赖的文件<br>    apk del gcc make openssl-dev zlib-dev perl-dev pcre-dev libc-dev wget &amp;&amp; <br>    rm -rf /var/cache/* &amp;&amp; <br>    rm -rf /tmp/* &amp;&amp; <br>    ln -sf /dev/stdout /usr/local/nginx/logs/access.log &amp;&amp; <br>    ln -sf /dev/stderr /usr/local/nginx/logs/error.log</p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Alpine</tag>
      </tags>
  </entry>
  <entry>
    <title>FFmpeg 使用记录</title>
    <url>/posts/FFmpeg/5c3a73b0.html</url>
    <content><![CDATA[<h1 id="FFmpeg-使用记录"><a href="#FFmpeg-使用记录" class="headerlink" title="FFmpeg 使用记录"></a>FFmpeg 使用记录</h1><a id="more"></a>

<h1 id="列出设备列表"><a href="#列出设备列表" class="headerlink" title="列出设备列表"></a>列出设备列表</h1><p>ffmpeg -f avfoundation -list_devices true -i “”</p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>ffmpeg -f avfoundation -framerate 30 -i “0” -f mpeg1video -b 500k -r 20 -vf scale=640:360</p>
]]></content>
      <categories>
        <category>FFmpeg</category>
      </categories>
      <tags>
        <tag>FFmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 工具个人总结</title>
    <url>//git.html</url>
    <content><![CDATA[<p><a href="https://git-scm.com/">Git</a> 是一款免费开源的分布式版本控制系统工具, 以下是我在日常或工作使用时总结的 Git 常用命令。</p>
<hr>
<a id="more"></a>

<h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><ul>
<li><a href="#guide">基本概念</a></li>
<li><a href="#install">安装</a><ul>
<li><a href="#windows">Windows</a></li>
<li><a href="#mac">Mac</a></li>
<li><a href="#tools">可视化工具</a> (sourcetree、fork)</li>
</ul>
</li>
<li><a href="#config">配置</a> (git config / .gitconfig)</li>
<li><a href="#ignore">忽略文件</a> (.gitignore / .gitkeep)</li>
<li><a href="#repository">仓库</a> (git clone / git init / git remote)</li>
<li><a href="#branch">分支</a> (git branch / git checkout)</li>
<li><a href="#commit">提交</a> (git add / git commit / git push)</li>
<li><a href="#show">查看</a> (git status / git log / git diff / git show)</li>
<li><a href="#pull">拉取</a> (git pull / git fetch)</li>
<li><a href="#merge">合并</a> (git merge)</li>
<li><a href="#reset">撤销/回滚</a> (git reset)</li>
<li><a href="#conflict">解决冲突</a> (git reset)</li>
<li><a href="#Tag">Tag</a> (git tag)</li>
<li><a href="#Stash">Stash</a> (git stash)</li>
</ul>
<h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a><span id="guide">基本概念</span></h4><p><img data-src="69ed1173/git-tree.png" alt="img"></p>
<ul>
<li>工作区/工作目录(Workspace/Working Directory)： 就是你平时存放项目代码的目录。</li>
<li>暂存区(Stage/Index)：用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息, 一般存放在 “.git目录下” 下的index文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。</li>
<li>仓库区/版本库(Repository/Git Directory)：就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中HEAD指向最新放入仓库的版本。</li>
<li>远程仓库(Remote Directory)：<a href="https://gitee.com/">gitee.com</a>。</li>
</ul>
<p>一般文件 Git 操作流程:</p>
<ul>
<li>通过 <code>vim REDEME.md</code> 更改 <code>工作区</code> 文件内容。</li>
<li>通过 <code>git add</code> 命令将 <code>工作区</code> 文件添加到 <code>暂存区(Index/Stage)</code> 。</li>
<li>通过 <code>git commmit</code> 命令提交到 <code>仓库区</code>。</li>
<li>通过 <code>git push</code> 命令推送到 <code>远程仓库</code>。</li>
</ul>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a><span id="install">安装</span></h4><ul>
<li><span id="windows"><a href="https://git-scm.com/download/win">Windows</a></span><ul>
<li><a href="https://tortoisegit.org/download/">https://tortoisegit.org/download/</a><ul>
<li>客户端：<a href="https://download.tortoisegit.org/tgit/2.16.0.0/TortoiseGit-2.16.0.0-64bit.msi">https://download.tortoisegit.org/tgit/2.16.0.0/TortoiseGit-2.16.0.0-64bit.msi</a></li>
<li>客户端汉化包：<a href="https://download.tortoisegit.org/tgit/2.16.0.0/TortoiseGit-LanguagePack-2.16.0.0-64bit-zh_CN.msi">https://download.tortoisegit.org/tgit/2.16.0.0/TortoiseGit-LanguagePack-2.16.0.0-64bit-zh_CN.msi</a></li>
</ul>
</li>
</ul>
</li>
<li><span id="mac">Mac</span>: <code>brew install git</code></li>
<li><span id="tools">Git 可视化工具 - 适用于 Mac &amp; Windows 平台</span><ul>
<li><a href="https://www.sourcetreeapp.com/">sourcetree</a> 相比 fork 卡、中文菜单、Bug?</li>
<li><a href="https://git-fork.com/">fork</a><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a><span id="config">配置</span></h4>Git 全局配置, 默认 <code>Git</code> 配置信息存储在用户目录即: <code>~/.gitconfig</code> 文件中。<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">"codezm"</span></span><br><span class="line">git config --global user.email <span class="string">"codezm@163.com"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 - 保存账号及密码至本地 ~/.git-credentials，仅第一次手动录入账号及密码</span></span><br><span class="line">git config --global credential.helper store</span><br><span class="line"><span class="comment"># macOS</span></span><br><span class="line"><span class="comment"># git config --global credential.helper osxkeychain</span></span><br><span class="line"><span class="comment"># windows</span></span><br><span class="line"><span class="comment"># git config --global credential.helper wincred</span></span><br><span class="line"><span class="comment"># 密码更换</span></span><br><span class="line"><span class="comment"># git config --global --unset user.password</span></span><br><span class="line"><span class="comment"># 开启行尾结束符自动转换，默认值是：false，crlf (Windows默认模式) to *unix lf 模式。</span></span><br><span class="line">git config --global core.autocrlf <span class="literal">true</span></span><br><span class="line"><span class="comment"># 配置 - 全局忽略文件, 默认文件不存在自行新建文件即可</span></span><br><span class="line">git config --global core.excludesfile ~/.gitignore</span><br><span class="line"><span class="comment"># git 使用外部工具合并冲突后避免生成多余的 .orig 备份文件</span></span><br><span class="line">git config --global mergetool.keepBackup <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 Git 配置信息。</span></span><br><span class="line">git config --list</span><br></pre></td></tr></tbody></table></figure>
vim ~/.gitconfig<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">[user]</span><br><span class="line">    name = codezm</span><br><span class="line">    email = codezm@163.com</span><br><span class="line">[credential]</span><br><span class="line">    helper = store</span><br><span class="line">[core]</span><br><span class="line">    excludesfile = ~/.gitignore</span><br><span class="line">    editor = vim</span><br><span class="line">[mergetool]</span><br><span class="line">    keepBackup = false</span><br><span class="line">[alias]</span><br><span class="line">    co = checkout</span><br><span class="line">    lg = log --graph --pretty=format:'%Cred%h%Creset - %C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit --date=relative</span><br></pre></td></tr></tbody></table></figure>

</li>
</ul>
</li>
</ul>
<h4 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a><span id="ignore">忽略文件</span></h4><ul>
<li><p>Git 全局忽略规则配置文件，应用于所有 Git 项目，配置文件路径可使用命令 <code>git config core.excludesfile</code> 查看 ––– 默认不存在需配置。</p>
  <figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ vim `git config core.excludesfile`</span><br><span class="line"></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line"><span class="comment">######## OS generated files ########</span></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line">.DS_Store</span><br><span class="line">.DS_Store?</span><br><span class="line">*.swp</span><br><span class="line">._*</span><br><span class="line">.Spotlight-V100</span><br><span class="line">.Trashes</span><br><span class="line">Icon?</span><br><span class="line">ehthumbs.db</span><br><span class="line">Thumbs.db</span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line"><span class="comment">############# packages #############</span></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line">*.7z</span><br><span class="line">*.dmg</span><br><span class="line">*.gz</span><br><span class="line">*.iso</span><br><span class="line">*.jar</span><br><span class="line">*.rar</span><br><span class="line">*.tar</span><br><span class="line">*.zip</span><br><span class="line"><span class="comment"># Compiled source #</span></span><br><span class="line"><span class="comment">###################</span></span><br><span class="line">*.com</span><br><span class="line">*.class</span><br><span class="line">*.dll</span><br><span class="line">*.exe</span><br><span class="line">*.o</span><br><span class="line">*.so</span><br><span class="line">*.pyc</span><br><span class="line"></span><br><span class="line"><span class="comment"># Logs and databases #</span></span><br><span class="line"><span class="comment">######################</span></span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">*.sqlite</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>Git 忽略规则配置文件: <code>.gitignore</code>，在单个 Git 项目下创建仅适用于此项目。</p>
  <figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 忽略项目中所有 log 文件夹(/runtime/log、/log):</span></span><br><span class="line"><span class="built_in">log</span></span><br><span class="line"><span class="comment"># 忽略项目根路径下整个 runtime 文件夹：</span></span><br><span class="line">/runtime/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 但排除 runtime 根文件夹下某个文件:</span></span><br><span class="line">!/runtime/wechat-post-data.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意: 若想排除以下文件是无效的。</span></span><br><span class="line"><span class="comment"># !/runtime/pid/swoole/master.pid</span></span><br><span class="line"><span class="comment"># 解决方案，这也是 `忽略某个文件夹，但又不想忽略这个文件夹下的某个子目录`的解决方案。</span></span><br><span class="line">!/runtime/pid</span><br><span class="line">/runtime/pid/*</span><br><span class="line">!/runtime/pid/swoole</span><br><span class="line">/runtime/pid/swoole/*</span><br><span class="line">!/runtime/pid/swoole/master.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 UI-Images.zip 文件被哪个忽略规则所匹配:</span></span><br><span class="line">git check-ignore -v /tags/UI-Images.zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略规则强制添加至 Git 版本库：</span></span><br><span class="line">git add -f /tags/UI-Images.zip</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p><code>.gitkeep</code> 文件的作用</p>
<p>  Git 默认是不允许提交一个空目录到版本库的，可以在空的文件夹里面建立一个 <code>.gitkeep</code> 文件，然后提交去即可。其实在 <code>Git</code> 中 <code>.gitkeep</code> 就是一个占位符。</p>
<p>  示例: 需要 Git 提交 Yaf - <code>views</code> 空目录。</p>
<h4 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a><span id="repository">仓库</span></h4></li>
<li><p>基于远程项目克隆至本地</p>
<p>  首先，<a href="https://gitee.com/">gitee</a> 创建远端「 remote 」仓库: git-demo，然后克隆至本地目录: </p>
  <figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/codezm/git-demo.git git-demo</span><br><span class="line"><span class="built_in">cd</span> git-demo</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>基于本地项目创建 git 仓库</p>
  <figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;project&gt;</span><br><span class="line">git init</span><br><span class="line">git remote add origin https://gitee.com/codezm/git-demo.git</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">'First commit.'</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>修改本地项目 git 仓库地址</p>
  <figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;project&gt;</span><br><span class="line">git remote set-url origin &lt;origin-url&gt;</span><br></pre></td></tr></tbody></table></figure>

</li>
</ul>
<h4 id="分支"><a href="#分支" class="headerlink" title="分支"></a><span id="branch">分支</span></h4><p>新 Git 项目默认 ( git clone ) 所在分支为: <code>master</code>。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 查看本地所在分支，带 * 表示当前所在分支.</span></span><br><span class="line">git branch</span><br><span class="line"><span class="comment"># 查看远程所有分支</span></span><br><span class="line"><span class="comment"># git branch -r</span></span><br><span class="line"><span class="comment"># 查看所有分支, 包含本地和远程服务器</span></span><br><span class="line">git branch -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建分支</span></span><br><span class="line">git branch &lt;branch-name&gt;</span><br><span class="line"><span class="comment"># 创建一个空分支</span></span><br><span class="line"><span class="comment"># git checkout --orphan emptybranch</span></span><br><span class="line"><span class="comment"># 示例 - 于 master 分支基础上创建 dev 分支: git branch dev</span></span><br><span class="line"><span class="comment"># 创建并检出至一个新分支</span></span><br><span class="line">git checkout -b &lt;branch-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分支切换，切换至 dev 分支</span></span><br><span class="line">git checkout &lt;branch-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除本地分支</span></span><br><span class="line">git branch -d &lt;branch-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分支重命名</span></span><br><span class="line"><span class="comment"># git branch -m &lt;old-branch-name&gt; &lt;new-branch-name&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程服务器分支</span></span><br><span class="line"><span class="comment"># git push origin --delete &lt;branch-name&gt;</span></span><br><span class="line"><span class="comment"># git push origin :&lt;branch-name&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<p><strong>注意: 本地分支删除时需要先切换至其他分支再操作要删除的分支。</strong></p>
<h4 id="提交"><a href="#提交" class="headerlink" title="提交"></a><span id="commit">提交</span></h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 编辑工作区项目代码.</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"test git"</span> &gt; README.md</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交至暂存区.</span></span><br><span class="line">git add README.md</span><br><span class="line"><span class="comment"># 遍历询问是否添加 - 仅限已添加至 Git 项目文件，新增文件排除。</span></span><br><span class="line"><span class="comment"># git add -p</span></span><br><span class="line"><span class="comment"># 添加工作目录所有新增/改动文件</span></span><br><span class="line"><span class="comment"># git add .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交至本地仓库区.</span></span><br><span class="line">git commit -m <span class="string">'Modify README.md'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交至远端仓库 - 只有提交后他人才可使用你提交的代码.</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="comment"># -u 设置 origin 为默认主机, 之后就可以直接使用 git push 推送至远程服务器。</span></span><br><span class="line"><span class="comment"># 默认只推送当前分支: simple方式。Git 2.0版本之前，默认采用matching方法， 会推送所有有对应的远程分支的本地分支</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></tbody></table></figure>

<h4 id="查看"><a href="#查看" class="headerlink" title="查看"></a><span id="show">查看</span></h4><ul>
<li><p>查看哪些文件改动了？「 <code>git add</code> 前查看 」</p>
  <figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>工作区文件. 「 git 文件差异对比 」</p>
  <figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">git diff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对比某一文件差异</span></span><br><span class="line"><span class="comment"># git diff &lt;file-name&gt;</span></span><br></pre></td></tr></tbody></table></figure></li>
<li><p>暂存区文件: <code>git add</code>. 「 git 文件差异对比 」</p>
  <figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">git diff --cached</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对比某一文件差异</span></span><br><span class="line">git diff --cached &lt;file-name&gt;</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>版本库文件: <code>git commit</code>. 「 git 文件差异对比 」</p>
  <figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 查看此 &lt;COMMIT-ID&gt; 所有文件更改详情.</span></span><br><span class="line">git show &lt;COMMIT-ID&gt;</span><br><span class="line"><span class="comment"># 示例-仅查看指定文件: git show a09ce4377cd292 README.md</span></span><br><span class="line"><span class="comment"># 示例-使用某次COMMIT文件内容: git show 0cc28f7194a19b3303c2cf:README.md</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 对比两次 &lt;COMMIT-ID&gt; 的文件更改详情.</span></span><br><span class="line"><span class="comment"># git diff &lt;COMMIT-ID&gt;...&lt;COMMIT-ID&gt; README.md</span></span><br><span class="line"><span class="comment"># 对比两次 &lt;COMMIT-ID&gt; 涉及的所有文件名</span></span><br><span class="line"><span class="comment"># git diff &lt;COMMIT-ID&gt;...&lt;COMMIT-ID&gt; --name-only</span></span><br></pre></td></tr></tbody></table></figure>
<p>  <a href="https://github.com/codezm/Alfred-codezm-workflows-timestamp-convert/compare/309309eacca73067e1058cd415d776da7e53448f...b4a5f82f0d5760dba97ea08318e3a962e03df985">github - 对比视图 | 示例</a></p>
</li>
<li><p>修改了哪些文件？「 <code>git commit</code> 后查看 」</p>
  <figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># git show &lt;COMMIT-ID&gt; --name-only</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示最后一次提交修改的文件</span></span><br><span class="line"><span class="comment"># git log --stat -n 1</span></span><br><span class="line"><span class="comment"># 查看&lt;文件&gt;commit历史, 展示 &lt;commit-id&gt; &lt;comment-message&gt;</span></span><br><span class="line"><span class="comment"># git log --oneline &lt;filename&gt;</span></span><br><span class="line"><span class="comment"># 查看某个文件的历史改动</span></span><br><span class="line"><span class="comment"># git blame &lt;filename&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<h4 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a><span id="pull">拉取</span></h4></li>
<li><p>git fetch 是将远程主机的最新内容(所有远程仓库的 branch、tag)拉到本地，用户在检查了以后决定是否合并到工作本机分支中。</p>
</li>
<li><p>git pull 则是将远程主机的最新内容拉下来后直接合并，即：<code>git pull = git fetch + git merge</code>。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">git pull origin/master</span><br><span class="line"></span><br><span class="line"><span class="comment"># git fetch</span></span><br><span class="line"><span class="comment"># git merge origin/master</span></span><br></pre></td></tr></tbody></table></figure>

</li>
</ul>
<h4 id="合并"><a href="#合并" class="headerlink" title="合并"></a><span id="merge">合并</span></h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">git checkout dev</span><br><span class="line"><span class="comment"># git pull 有个前提当前分支 dev 对应远程分支 origin/dev 已存在，此处也可使用: git fetch</span></span><br><span class="line">git pull</span><br><span class="line">git merge origin/kakaguo</span><br><span class="line"><span class="comment"># 若存在冲突则解决完冲突后还需要执行以下操作: </span></span><br><span class="line"><span class="comment"># git add .</span></span><br><span class="line"><span class="comment"># git commit -m ''</span></span><br><span class="line">git push origin dev</span><br></pre></td></tr></tbody></table></figure>

<h4 id="撤销-回滚"><a href="#撤销-回滚" class="headerlink" title="撤销/回滚"></a><span id="reset">撤销/回滚</span></h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 非 Git 项目管理文件撤销「 删除 」, 即: 不在 git 版本控制下的新增文件</span></span><br><span class="line">rm -f README.md</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增文件撤销</span></span><br><span class="line">git rm --cached NEW_README.md</span><br><span class="line"></span><br><span class="line"><span class="comment"># 工作区文件撤销「 还原 」</span></span><br><span class="line">git checkout -- README.md</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂存区文件撤销「 取消 git add 操作 」</span></span><br><span class="line">git reset HEAD README.md</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地仓库文件撤销 「 取消 git commit 操作 」</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 重置 HEAD 和索引</span></span><br><span class="line"><span class="comment">#### 此时若是又修改了 README.md 文件再执行 git reset 后文件 README.md 内容会展示什么? </span></span><br><span class="line">git reset &lt;COMMENT-ID&gt; 等价于 git reset --mixed &lt;COMMENT-ID&gt;</span><br><span class="line"><span class="comment">## 重置 HEAD、索引和工作区, 会重置以下工作区域文件: - 执行此操作是危险的。</span></span><br><span class="line"><span class="comment">## 1. 对 README.md 所有操作丢弃.</span></span><br><span class="line"><span class="comment">## 2. 若工作区对 README.en.md 做了修改但未 git commit, 即使 git add 到了暂存区也会被丢弃。</span></span><br><span class="line">git reset --hard &lt;COMMENT-ID&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程仓库撤销: 主要用于撤销已 push 的 commit 操作，即 git commit -&gt; git push -&gt; git reset -&gt; git push -f</span></span><br><span class="line">git push -f</span><br></pre></td></tr></tbody></table></figure>


<h4 id="冲突解决"><a href="#冲突解决" class="headerlink" title="冲突解决"></a><span id="conflict">冲突解决</span></h4><p>分支 hanlu、kakaguo 同时修改 <code>README.md</code> 文件.</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">git checkout hanlu</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'hanlu'</span> &gt; README.md</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">'Modify README.md by hanlu.'</span></span><br><span class="line">git push -u origin hanlu</span><br><span class="line"></span><br><span class="line">git checkout kakaguo</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'kakaguo'</span> &gt; README.md</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">'Modify README.md by kakaguo.'</span></span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line">git checkout dev</span><br><span class="line">git pull</span><br><span class="line">git merge origin/hanlu</span><br><span class="line">git push origin dev</span><br><span class="line">git merge origin/kakaguo</span><br><span class="line"><span class="comment"># 解决冲突</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">'Merge kakaguo'</span></span><br><span class="line">git push origin dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销合并「 注意: 仅在合并失败(快速合并失败被阻止)时执行 」, 以下命令对工作区代码无影响:</span></span><br><span class="line"><span class="comment"># git reset --merge</span></span><br><span class="line"><span class="comment"># git merge --abort</span></span><br></pre></td></tr></tbody></table></figure>
<h4 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a><span id="Tag">Tag</span></h4><p>打标签、项目版本管理.</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 Tag</span></span><br><span class="line">git tag &lt;tag-name&gt;</span><br><span class="line"><span class="comment"># 示例 - 创建 1.0.0 版本Tag: git tag v1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有 Tag</span></span><br><span class="line">git tag</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加上 -l 命令可以使用通配符来过滤tag</span></span><br><span class="line"><span class="comment"># git tag -l "1.0.*"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给 &lt;commit-id&gt; 加 Tag 并添加备注信息.</span></span><br><span class="line"><span class="comment"># git tag -a &lt;tag-name&gt; &lt;commit-id&gt; -m &lt;comment-message&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 Tag 详情: 显示 &lt;commit-id&gt;、Tag 备注信息等</span></span><br><span class="line"><span class="comment"># git show &lt;tag-name&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送至远程仓库</span></span><br><span class="line"><span class="comment"># git push origin &lt;tag-name&gt;</span></span><br><span class="line"><span class="comment"># 推送本地所有 Tag</span></span><br><span class="line">git push origin --tags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换至某个 Tag, 与分支类似</span></span><br><span class="line">git checkout &lt;tag-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除本地某个 Tag</span></span><br><span class="line"><span class="comment"># git tag -d &lt;tag-name&gt; &lt;tag-name-mores&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程仓库 Tag</span></span><br><span class="line"><span class="comment"># git push origin --delete tag &lt;tag-name&gt;</span></span><br><span class="line"><span class="comment"># git push origin :refs/tags/&lt;tag-name&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<h4 id="Stash-贮藏"><a href="#Stash-贮藏" class="headerlink" title="Stash - 贮藏"></a><span id="Stash">Stash</span> - 贮藏</h4><p>适用场景: 临时合并他人分支存在 - 同时更改相同文件、分支可能存在冲突。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">git stash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存 stash 并设置名称，simple 方式: git stash</span></span><br><span class="line"><span class="comment"># git stash save &lt;message&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅还原</span></span><br><span class="line"><span class="comment"># git stash apply</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除指定 stash</span></span><br><span class="line"><span class="comment"># git stash drop stash@{0}</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 还原并删除 stash， git stash apply + git stash drop</span></span><br><span class="line">git stash pop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有 stash</span></span><br><span class="line"><span class="comment"># git stash list</span></span><br></pre></td></tr></tbody></table></figure>
<p><strong>注意: <code>git stash pop</code> 如果存在冲突文件将导致 <code>drop</code> 失败。</strong></p>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><ol>
<li>每次 <code>git push</code> 前，先拉取下 <code>git pull origin master</code> /  <code>git pull origin dev</code> 代码。</li>
<li>仅merge部分文件：<code>git rebase -i</code>。</li>
<li>仅stash部分文件: <code>git stash -p</code>。</li>
<li>批量还原: git status | grep “修改”  | awk ‘{print $2}’ | grep -v “git” | xargs git checkout –</li>
<li>批量删除: git status | grep “/“ | grep -v “origin/master” | xargs rm -rf</li>
</ol>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>我经常使用的 Git 命令总结</title>
    <url>/posts/%E5%B8%AE%E5%8A%A9/be9af137.html</url>
    <content><![CDATA[<p>此文章主要记录不常使用但特殊情况需求下确非常有用的 Git 命令:</p>
<a id="more"></a>
<h3 id="删除远程文件或文件夹-示例-项目文件已全部提交，但是远程又用不到此文件-或此文件在各工作环境有差异需单独生成-且-保留本地文件"><a href="#删除远程文件或文件夹-示例-项目文件已全部提交，但是远程又用不到此文件-或此文件在各工作环境有差异需单独生成-且-保留本地文件" class="headerlink" title="删除远程文件或文件夹[示例:项目文件已全部提交，但是远程又用不到此文件(或此文件在各工作环境有差异需单独生成) 且 保留本地文件]."></a>删除远程文件或文件夹[示例:项目文件已全部提交，但是远程又用不到此文件(或此文件在各工作环境有差异需单独生成) 且 保留本地文件].</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">git rm -r -n --cached node_modules/\*</span><br></pre></td></tr></tbody></table></figure>
<p>浏览将要删除<code>node_modules</code>文件夹下的所有文件(去掉 -n 则执行删除操作).</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">git rm -r --cached node_modules/\*</span><br><span class="line">git commit -m 'remote node_modules directory.'</span><br><span class="line">git push origin master</span><br></pre></td></tr></tbody></table></figure>

<h3 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">git push origin --delete codezm_debug</span><br><span class="line">git push origin :codezm_debug</span><br></pre></td></tr></tbody></table></figure>

<h3 id="共同维护项目时，若想帮助某人维护其分支，可以在本地创建一个起始点分支指向他的远程分支"><a href="#共同维护项目时，若想帮助某人维护其分支，可以在本地创建一个起始点分支指向他的远程分支" class="headerlink" title="共同维护项目时，若想帮助某人维护其分支，可以在本地创建一个起始点分支指向他的远程分支."></a>共同维护项目时，若想帮助某人维护其分支，可以在本地创建一个起始点分支指向他的远程分支.</h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git checkout -b serverfix origin/serverfix</span><br></pre></td></tr></tbody></table></figure>

<h4 id="Stash-操作"><a href="#Stash-操作" class="headerlink" title="Stash 操作."></a>Stash 操作.</h4><p>git stash list                                                              显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复<br>git stash                                                                   备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中<br>git stash pop                                                               从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。<br>git stash clear                                                             清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。<br>git stash apply stash@{1}                                                   就可以将你指定版本号为stash@{1}的工作取出来，当你将所有的栈都应用回来的时候，可以使用’git stash clear’来将栈清空</p>
<p><a href="http://www.cppblog.com/deercoder/archive/2011/11/13/160007.aspx">http://www.cppblog.com/deercoder/archive/2011/11/13/160007.aspx</a></p>
<h4 id="Tag-操作"><a href="#Tag-操作" class="headerlink" title="Tag 操作."></a>Tag 操作.</h4><p>git tag ‘name’                                                              将当前分支状态代码生成名叫 name 的 tag[精简版].<br>git tag -l                                                                  列出所有tag.<br>git tag -d ‘name’                                                           删除本地名叫 name 的 tag.<br>git tag -a ‘tagname’ -m ‘tagname comment.’                                  将当前分支状态代码生成名叫 name 的 tag[详记版].</p>
<p>git push tag tagname                                                        默认情况下，git push 并不会把标签传送到远端服务器上，只有通过显式命令才能分享标签到远端仓库<br>git push origin –tags                                                      如果要一次推送所有本地新增的标签上去，可以使用 –tags 选项<br>git push origin –delete refs/tags/v2.0.20                                  删除远程仓库 refs/tags/v2.0.20 tag[git ls-remote –tags].</p>
<p>git log –pretty=oneline                                                    查看所有提交记录.<br>git tag -a tagname 9fceb02                                                  对 9fceb02 打上 tag.</p>
<p>git fetch –tags                    获取远程仓库所有 tag 代码.</p>
<p>若远程仓库删除了某个 tag 本地的tag并不会删除，可使用以下代码操作:<br>git tag -l | xargs git tag -d    #delete local tag(s)</p>
<h4 id="Remote-操作"><a href="#Remote-操作" class="headerlink" title="Remote 操作."></a>Remote 操作.</h4><p>git ls-remote –heads origin<br>git ls-remote –tags origin<br>git ls-remote origin</p>
<h4 id="Branch-操作"><a href="#Branch-操作" class="headerlink" title="Branch 操作."></a>Branch 操作.</h4><p>git branch     # 查询本地存在的branch<br>git branch -r  # 查询远程的branch<br>git branch -a  # 查询本地和远程branch<br>git branch -d -r origin/todo  #删除远程的todo branch</p>
<p>git fetch –prune  #这样就可在本地删除在远程不存在的branch</p>
<h4 id="选择合并某个分支"><a href="#选择合并某个分支" class="headerlink" title="选择合并某个分支."></a>选择合并某个分支.</h4><p>git merge –no-ff –no-commit origin/codezm<br>git status<br>git checkout HEAD filename<br>git commit </p>
<p><a href="https://ask.helplib.com/21320">https://ask.helplib.com/21320</a></p>
]]></content>
      <categories>
        <category>帮助</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL8不支持语法</title>
    <url>/posts/MySQL/3c6f162e.html</url>
    <content><![CDATA[<p>MySQL8不支持语法</p>
<hr>
<a id="more"></a>

<h5 id="1-不支持-ROW-FORMAT-FIXED-行格式。"><a href="#1-不支持-ROW-FORMAT-FIXED-行格式。" class="headerlink" title="1. 不支持 ROW_FORMAT=FIXED 行格式。"></a>1. 不支持 <code>ROW_FORMAT=FIXED</code> 行格式。</h5><p><a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-row-format.html">https://dev.mysql.com/doc/refman/8.0/en/innodb-row-format.html</a></p>
<p><img data-src="3c6f162e/image-20201119170957127.png" alt="image-20201119170957127"></p>
<p>DEFAULT、DYNAMIC、COMPACT、REDUNDANT、COMPRESSED。</p>
<h5 id="2-编码、字符集-需统一。"><a href="#2-编码、字符集-需统一。" class="headerlink" title="2. 编码、字符集 需统一。"></a>2. 编码、字符集 需统一。</h5><p>字符集不统一将无法比较、排序。</p>
<p>个别表存在字段编码，需统一改为 <code>utf8mb4</code>。</p>
<p><strong>优先级顺序为：数据库字符集 &lt; 表字符集 &lt; 列字符集；</strong></p>
<h5 id="3-更新数据时记录当前更新时间"><a href="#3-更新数据时记录当前更新时间" class="headerlink" title="3. 更新数据时记录当前更新时间"></a>3. 更新数据时记录当前更新时间</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">ALTER TABLE `canal`.`user_4` MODIFY COLUMN `dateline` datetime(0) NULL ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '时间' AFTER `intro`</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p> 注意：利用 <code>canal</code> 处理数据，因为其解析 binlog 使历史数据 <code>dateline</code> 值不准同主库有差异。这种表结构，在主从同步时，若从库执行慢也会导致主从库数据不同。</p>
</blockquote>
<h5 id="4-语法错误SQL无法执行更新"><a href="#4-语法错误SQL无法执行更新" class="headerlink" title="4. 语法错误SQL无法执行更新"></a>4. 语法错误SQL无法执行更新</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">UPDATE `canal`.`user_4` SET `age` = 1811 WHERE `id` = 1</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>错误信息：SQLSTATE[22003]: Numeric value out of range: 1264 Out of range value for column ‘age’ at row 1</p>
</blockquote>
<p>通过 <code>Navicate</code> 修改表数据（主库：mysql-5.6）<code>age = 1811</code> 时，age 字段值被更新为其存储的最大值 255, 但 <code>binlog=mixed</code> 模式下依旧记录着上述语句。<code>binlog=row</code> 模式下 <code>age = 255</code>。</p>
<h5 id="从8-0-17版本开始，TINYINT-SMALLINT-MEDIUMINT-INT-and-BIGINT类型的显示宽度将失效。"><a href="#从8-0-17版本开始，TINYINT-SMALLINT-MEDIUMINT-INT-and-BIGINT类型的显示宽度将失效。" class="headerlink" title="从8.0.17版本开始，TINYINT, SMALLINT, MEDIUMINT, INT, and BIGINT类型的显示宽度将失效。"></a>从8.0.17版本开始，TINYINT, SMALLINT, MEDIUMINT, INT, and BIGINT类型的显示宽度将失效。</h5><p><img data-src="3c6f162e/image-20210918132910288.png" alt="image-20210918132910288"></p>
<h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><hr>
<ol>
<li>表分区问题。</li>
</ol>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL使用技巧</title>
    <url>/posts/MySQL/1c587b3.html</url>
    <content><![CDATA[<p>MySQL使用技巧</p>
<a id="more"></a>

<h4 id="mysql-修改密码"><a href="#mysql-修改密码" class="headerlink" title="mysql 修改密码"></a>mysql 修改密码</h4><h5 id="方法1：-用SET-PASSWORD命令"><a href="#方法1：-用SET-PASSWORD命令" class="headerlink" title="方法1： 用SET PASSWORD命令"></a>方法1： 用SET PASSWORD命令</h5><p>首先登录MySQL。<br>格式：mysql&gt; set password for 用户名@localhost = password(‘新密码’);<br>例子：mysql&gt; set password for root@localhost = password(‘1234’);</p>
<h5 id="方法2：用mysqladmin"><a href="#方法2：用mysqladmin" class="headerlink" title="方法2：用mysqladmin"></a>方法2：用mysqladmin</h5><p>格式：mysqladmin -u用户名 -p旧密码 password 新密码<br>例子：mysqladmin -uroot -p123456 password 123</p>
<h5 id="方法3：用UPDATE直接编辑user表"><a href="#方法3：用UPDATE直接编辑user表" class="headerlink" title="方法3：用UPDATE直接编辑user表"></a>方法3：用UPDATE直接编辑user表</h5><p>首先登录MySQL。<br>mysql&gt; use mysql;<br>mysql&gt; update user set password=password(‘1234’) where user=’root’ and host=’localhost’;<br>mysql&gt; flush privileges;</p>
<h5 id="方法4：在忘记root密码的时候，可以这样"><a href="#方法4：在忘记root密码的时候，可以这样" class="headerlink" title="方法4：在忘记root密码的时候，可以这样"></a>方法4：在忘记root密码的时候，可以这样</h5><p>以windows为例： </p>
<ol>
<li>关闭正在运行的MySQL服务。 </li>
<li>打开DOS窗口，转到mysql\bin目录。 </li>
<li>输入mysqld –skip-grant-tables 回车。–skip-grant-tables 的意思是启动MySQL服务的时候跳过权限表认证。 </li>
<li>再开一个DOS窗口（因为刚才那个DOS窗口已经不能动了），转到mysql\bin目录。 </li>
<li>输入mysql回车，如果成功，将出现MySQL提示符 &gt;。 </li>
<li>连接权限数据库： use mysql; 。 </li>
<li>改密码：update user set password=password(“123”) where user=”root”;（别忘了最后加分号） 。 </li>
<li>刷新权限（必须步骤）：flush privileges;　。 </li>
<li>退出 quit。 </li>
<li>注销系统，再进入，使用用户名root和刚才设置的新密码123登录。</li>
</ol>
<h4 id="mysql-内部变量"><a href="#mysql-内部变量" class="headerlink" title="mysql 内部变量"></a>mysql 内部变量</h4><ul>
<li>查询数据库存储路径：<code> SHOW VARIABLES WHERE Variable_name LIKE '%datadir%';</code></li>
</ul>
<h4 id="初始化-Mysql"><a href="#初始化-Mysql" class="headerlink" title="初始化 Mysql"></a>初始化 Mysql</h4><p>在更换 mysql 数据目录 <code>datadir=~/mysql</code>后，可通过如下命令初始化 mysql 数据目录。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># mysql-5.5</span></span><br><span class="line">scripts/mysql_install_db --user=root --datadir=/Volumes/databases</span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql-5.7</span></span><br><span class="line">bin/mysqld --initialize-insecure</span><br></pre></td></tr></tbody></table></figure>



<h4 id="正则获取表名"><a href="#正则获取表名" class="headerlink" title="正则获取表名"></a>正则获取表名</h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">SELECT </span><br><span class="line">    table_name, </span><br><span class="line">		table_rows</span><br><span class="line">FROM</span><br><span class="line">    information_schema.tables</span><br><span class="line">WHERE</span><br><span class="line">    table_schema = 'api' and table_name REGEXP '^oss_photo_[0-9]*$'</span><br><span class="line">ORDER BY table_rows desc;</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><a href="https://www.jianshu.com/p/0636e13c26c80">MySQL获取行数</a></li>
</ul>
<h4 id="批量-kill-mysql-sql"><a href="#批量-kill-mysql-sql" class="headerlink" title="批量 kill mysql sql"></a>批量 kill mysql sql</h4><p>直接执行 <code>kill</code> 操作是不优雅的，会有业务问题。</p>
<blockquote>
<p> 事由： <code>Alter table</code> 引发的惨案。</p>
</blockquote>
<p>遇到的情况是对业务日志处理，表大小： <code>100GB+</code> 记录条数：<code>7kw+</code> ，Mysql 版本是：<code>5.7.22-log</code> 。</p>
<ol>
<li>在执行新增字段时导致了锁表。</li>
<li>锁表后因还有此表相关 <code>Insert into</code> SQL 执行，导致阻塞了 Mysql 所有的线程。显示用户正在运行的线程： <code>show processlist;</code>  或者 <code>select * from information_schema.processlist;</code>， 若要查看完成 SQL 可通过 <code>show full processlist</code> 命令，这里提示一点<strong>只有 <code>root</code> 用户能查询到所有的线程，其他用户只能查看到自己的线程</strong>。</li>
<li>相关业务受影响，服务端无法响应。</li>
</ol>
<h5 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h5><ol>
<li>暂停日志记录。</li>
<li>kill 掉所有与日志表相关的 <code>Insert into</code> SQL。</li>
</ol>
<p>通过以下命令查询表 <code>&lt;Table-Name&gt;</code> 相关的SQL。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select * from information_schema.PROCESSLIST where Info like 'INSERT INTO &lt;Table-Name&gt;%';</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><p>按客户端 IP 分组，看哪个客户端的链接数最多</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select client_ip,count(client_ip) as client_num from (select substring_index(host, ':', 1) as client_ip from processlist ) as connect_info group by client_ip order by client_num desc;</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>查看正在执行的线程，并按 Time 倒排序，看看有没有执行时间特别长的线程</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select * from information_schema.processlist where Command != 'Sleep' order by Time desc;</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>找出所有执行时间超过 5 分钟的线程，拼凑出 kill 语句，方便后面kill</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select concat('kill ', id, ';') from information_schema.processlist where Command != 'Sleep' and Time &gt; 300 order by Time desc;</span><br></pre></td></tr></tbody></table></figure>

</li>
</ul>
<h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="https://zhuanlan.zhihu.com/p/30743094">mysql: show processlist 详解</a></li>
<li><a href="https://www.cnblogs.com/siqi/p/3984499.html">批量 kill mysql 中运行时间长的sql</a></li>
</ul>
<h4 id="MySQL-Online-DDL"><a href="#MySQL-Online-DDL" class="headerlink" title="MySQL Online DDL"></a>MySQL Online DDL</h4><p>Online DDL: <code>MySQL &gt;= 5.6.7</code>。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">alter table t_base_user modify telephone varchar(50), ALGORITHM=INPLACE, LOCK=NONE;</span><br></pre></td></tr></tbody></table></figure>

<p>LOCK 类型</p>
<ol>
<li>LOCK=EXCLUSIVE : 表示独占锁，DDL语句执行期间会阻塞该表的所有请求。</li>
<li>LOCK=SHARED：共享锁，DDL语句执行期间会阻塞除查询外的所有DML操作，如: insert，update等。</li>
<li>LOCK=NONE: 允许所有查询以及DML操作。</li>
<li>LOCK=DEFAULT 默认级别，MySQL尽可能允许最大的并发操作。</li>
</ol>
<p>当我们不显示指定时，默认就为LOCK=DEFAULT类型。</p>
<blockquote>
<p>注：不是所有的DDL操作LOCK类型都可以指定为NONE的。如果DDL操作的类型，不能以请求的锁定类型执行，则会执行失败。</p>
</blockquote>
<h5 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="https://zhuanlan.zhihu.com/p/31586399">浅谈MySQL Online DDL</a></li>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-online-ddl-operations.html">Online DDL Operations</a></li>
</ul>
<h4 id="MySQL-生成测试数据"><a href="#MySQL-生成测试数据" class="headerlink" title="MySQL 生成测试数据"></a>MySQL 生成测试数据</h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">CREATE TABLE `test` (</span><br><span class="line">    `id` INT (11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">    `user_id` VARCHAR (20) NOT NULL,</span><br><span class="line">    `group_id` INT (11) NOT NULL,</span><br><span class="line">    `create_time` datetime NOT NULL,</span><br><span class="line">    PRIMARY KEY (`id`),</span><br><span class="line">    KEY `index_user_id` (`user_id`) USING HASH</span><br><span class="line">) ENGINE = INNODB AUTO_INCREMENT = 1 DEFAULT CHARSET = utf8;</span><br><span class="line"></span><br><span class="line">delimiter $$</span><br><span class="line">CREATE FUNCTION rand_string(n int) RETURNS varchar(255) </span><br><span class="line">begin        </span><br><span class="line">  declare chars_str varchar(100) </span><br><span class="line">  default "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";</span><br><span class="line">  declare return_str varchar(255) default "";        </span><br><span class="line">  declare i int default 0;</span><br><span class="line">  while i &lt; n do        </span><br><span class="line">      set return_str=concat(return_str,substring(chars_str,floor(1+rand()*62),1));</span><br><span class="line">      set i= i+1;        </span><br><span class="line">  end while;        </span><br><span class="line">  return return_str;    </span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line">delimiter $$</span><br><span class="line"></span><br><span class="line">CREATE  PROCEDURE `insert_data`(IN n int)</span><br><span class="line">BEGIN  </span><br><span class="line">  DECLARE i INT DEFAULT 1;</span><br><span class="line">    WHILE (i &lt;= n ) DO</span><br><span class="line">      INSERT into test (user_id,group_id,create_time ) VALUEs (rand_string(20),FLOOR(RAND() * 100) ,now() );</span><br><span class="line">            set i=i+1;</span><br><span class="line">    END WHILE;</span><br><span class="line">END $$</span><br><span class="line">delimiter ;</span><br><span class="line"></span><br><span class="line">call insert_data(1000000);</span><br><span class="line"></span><br><span class="line"># 快速创建其他数据表并插入数据</span><br><span class="line">create table test_myisam engine=myisam as select * from test;</span><br></pre></td></tr></tbody></table></figure>

<h5 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="https://www.jianshu.com/p/2d7ee0c37e21">https://www.jianshu.com/p/2d7ee0c37e21</a></li>
</ul>
<h4 id="MySQL-8-0-安装完成后配置"><a href="#MySQL-8-0-安装完成后配置" class="headerlink" title="MySQL 8.0 安装完成后配置"></a>MySQL 8.0 安装完成后配置</h4><ol>
<li><p>查找 <code>root</code> 密码。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ grep <span class="string">"A temporary password"</span> /var/<span class="built_in">log</span>/mysqld.log</span><br><span class="line">2021-01-11T03:35:29.613489Z 6 [Note] [MY-010454] [Server] A temporary password is generated <span class="keyword">for</span> root@localhost: d+CGdmfw;5/!</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>设置 <code>root</code> 为简单密码。</p>
<blockquote>
<p>注意：设置成简单免密，只为了提高本地开发的便利性，若是修改线上服务器 <code>root</code> 账号密码，还是要设置个复杂点的密码以提高安全性。</p>
</blockquote>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">set GLOBAL validate_password.policy=0;</span><br><span class="line">SET GLOBAL validate_password.length=4;</span><br><span class="line"></span><br><span class="line">ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '1234';</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>开启外网访问权限。</p>
</li>
</ol>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 开启外网访问</span></span><br><span class="line">use mysql;</span><br><span class="line"><span class="comment"># 更新域属性，'%'表示允许外部访问：</span></span><br><span class="line">update user <span class="built_in">set</span> host=<span class="string">'%'</span> <span class="built_in">where</span> user =<span class="string">'root'</span>;</span><br><span class="line"><span class="comment"># FLUSH 的作用</span></span><br><span class="line"><span class="comment"># 将当前user和privilige表中的用户信息/权限设置从mysql库(MySQL数据库的内置库)中提取到内存里。</span></span><br><span class="line"><span class="comment"># MySQL用户数据和权限有修改后，希望在"不重启MySQL服务"的情况下直接生效，那么就需要执行这个命令。</span></span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权</span></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">'root'</span>@<span class="string">'%'</span> WITH GRANT OPTION;</span><br></pre></td></tr></tbody></table></figure>

<h5 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="https://blog.csdn.net/h996666/article/details/80921913">https://blog.csdn.net/h996666/article/details/80921913</a></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL数据库引擎InnoDB物理文件备份</title>
    <url>/posts/MySQL/7b6f5b70.html</url>
    <content><![CDATA[<h1 id="MySQL数据库引擎InnoDB物理文件备份"><a href="#MySQL数据库引擎InnoDB物理文件备份" class="headerlink" title="MySQL数据库引擎InnoDB物理文件备份"></a>MySQL数据库引擎InnoDB物理文件备份</h1><p>Percona XtraBackup（简称PXB）是 <a href="https://www.percona.com/software/mysql-database/percona-xtrabackup">Percona</a> 公司开发的一个用于 MySQL 数据库物理热备的备份工具，支持 MySQL（Oracle）、Percona Server 和 MariaDB。</p>
<a id="more"></a>

<h2 id="XtraBackup"><a href="#XtraBackup" class="headerlink" title="XtraBackup"></a>XtraBackup</h2><ul>
<li>Github：<a href="https://github.com/percona/percona-xtrabackup">https://github.com/percona/percona-xtrabackup</a></li>
<li><code>apt</code> and <code>yum</code> package repositories ：<a href="https://repo.percona.com/percona/yum/release/centos/7/RPMS/x86_64/">https://repo.percona.com/percona/yum/release/centos/7/RPMS/x86_64/</a></li>
</ul>
<h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="1-生成SQL"><a href="#1-生成SQL" class="headerlink" title="1. 生成SQL"></a>1. 生成SQL</h3><ul>
<li>生成丢弃表空间的SQL</li>
<li>生成导入表空间的SQL</li>
<li>导出表结构SQL&amp;移除表结构SQL中的表外键</li>
<li>更改数据库名</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- mysql 使用 --secure-file-priv 参数启用，需查看允许导出的目录。</span></span><br><span class="line"><span class="comment">-- SHOW VARIABLES LIKE "secure_file_priv";</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成丢弃表空间的SQL</span></span><br><span class="line">mysql&gt; select concat('alter table ',table_schema,'.',TABLE_NAME , ' discard tablespace', ';') from  information_schema.tables where TABLE_SCHEMA = 'school_last1' into outfile '/var/lib/mysql-files/discard.sql';</span><br><span class="line">Query OK, 75 rows affected (0.05 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成导入表空间的SQL</span></span><br><span class="line">mysql&gt; select concat('alter table ',table_schema,'.',TABLE_NAME , ' import tablespace', ';') from  information_schema.tables where TABLE_SCHEMA = 'school_last1' into outfile '/var/lib/mysql-files/import.sql';</span><br><span class="line">Query OK, 75 rows affected (0.00 sec)</span><br></pre></td></tr></tbody></table></figure>

<p>导出 <code>school_last1</code> 数据库中所有表的结构</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ mysqldump -uroot -proot -d school_last1 &gt; school_last1-table-structure.sql</span><br></pre></td></tr></tbody></table></figure>

<p>删除表外键（在后期删除表空间时有影响）</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 查看表外键</span></span><br><span class="line"><span class="comment"># grep "CONSTRAINT.*RESTRICT" school_last1-table-structure.sql</span></span><br><span class="line">$ sed -i -e <span class="string">":a;N;s/,\n/,,/g;$!ba;"</span> school_last1-table-structure.sql</span><br><span class="line">$ sed -i -e <span class="string">"s/,,\s*CONSTRAINT.*RESTRICT//g;s/,,/,\n/g"</span> school_last1-table-structure.sql</span><br></pre></td></tr></tbody></table></figure>

<p>修改数据库名</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ sed -i -e <span class="string">"s/school_last1/school/g"</span> discard.sql</span><br><span class="line">$ sed -i -e <span class="string">"s/school_last1/school/g"</span> import.sql</span><br></pre></td></tr></tbody></table></figure>

<h3 id="2-备份指定数据库"><a href="#2-备份指定数据库" class="headerlink" title="2. 备份指定数据库"></a>2. 备份指定数据库</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># on 10.10.16.10</span></span><br><span class="line">$ curl https://repo.percona.com/percona/yum/release/centos/7/RPMS/x86_64/percona-xtrabackup-80-8.0.27-19.1.el7.x86_64.rpm</span><br><span class="line">$ yum install -y percona-xtrabackup-80-8.0.27-19.1.el7.x86_64.rpm</span><br><span class="line">$ xtrabackup --backup --target-dir=/tmp/mysql \</span><br><span class="line">					--datadir=/home/htdocs/mysql</span><br><span class="line">					--user=root \</span><br><span class="line">					--password=root \</span><br><span class="line">					--host=127.0.0.1 \</span><br><span class="line">					--port=3307 \</span><br><span class="line">					--databases=school_last1 \</span><br><span class="line">					--use-memory=4G</span><br><span class="line">					</span><br><span class="line">xtrabackup: recognized server arguments: --datadir=/var/lib/mysql --datadir=/home/htdocs/mysql</span><br><span class="line">xtrabackup: recognized client arguments: --backup=1 --target-dir=/tmp/mysql --user=root --password=* --host=127.0.0.1 --port=3307 --databases=school_last1 --use-memory=4G</span><br><span class="line">xtrabackup version 8.0.27-19 based on MySQL server 8.0.27 Linux (x86_64) (revision id: 50dbc8dadda)</span><br><span class="line">230912 17:32:31  version_check Connecting to MySQL server with DSN <span class="string">'dbi:mysql:;mysql_read_default_group=xtrabackup;host=127.0.0.1;port=3307'</span> as <span class="string">'root'</span>  (using password: YES).</span><br><span class="line">...</span><br><span class="line">xtrabackup: Transaction <span class="built_in">log</span> of lsn (79075768667) to (79076184216) was copied.</span><br><span class="line">230912 17:37:57 completed OK!</span><br><span class="line">$ xtrabackup --apply-log-only --prepare --<span class="built_in">export</span> --target-dir=/tmp/mysql</span><br></pre></td></tr></tbody></table></figure>

<p>xtrabackup 工具参数：</p>
<ul>
<li><p>–backup 将备份保存到 target-dir</p>
</li>
<li><p>—target-dir 指定备份目录路径</p>
</li>
<li><p>–datadir 数据库物理路径</p>
</li>
<li><p>–use-memory 导出时可使用的内存限制，默认：100MB</p>
</li>
<li><p>–databases 指定要备份数据库名</p>
</li>
</ul>
<blockquote>
<p>mysqldump 导出的sql文件近 6GB，xtrabackup 备份用时不到 6 分钟。</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># on 10.10.16.10</span></span><br><span class="line">$ mv school_last1-table-structure.sql import.sql discard.sql /tmp/mysql/</span><br><span class="line">$ tar czvf school_last1.tar.gz /tmp/mysql</span><br><span class="line">$ ls -lah</span><br><span class="line">-rw-r--r--.  1 root root  3.4G 9月  13 09:52 school_last1.tar.gz</span><br><span class="line">$ du -d 1 -h</span><br><span class="line">25G	./mysql</span><br><span class="line">$ scp /tmp/school_last1.tar.gz c79user@10.10.51.81:/tmp/</span><br></pre></td></tr></tbody></table></figure>

<h3 id="3-还原数据库表结构"><a href="#3-还原数据库表结构" class="headerlink" title="3. 还原数据库表结构"></a>3. 还原数据库表结构</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># on 10.10.51.81</span></span><br><span class="line">$ mkdir /data1/mysql-bk &amp;&amp; tar zxvf /tmp/school_last1.tar.gz -C /data1/mysql-bk</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># on 10.10.51.81</span></span><br><span class="line">mysql&gt; create database school default character set utf8mb4 collate utf8mb4_general_ci;</span><br><span class="line">mysql&gt; use school;</span><br><span class="line">mysql&gt; source /data1/mysql-bk/tmp/mysql/school_last1-table-structure.sql;</span><br><span class="line"><span class="comment"># 删除表空间</span></span><br><span class="line">mysql&gt; source /data1/mysql-bk/tmp/mysql/discard.sql;</span><br></pre></td></tr></tbody></table></figure>

<h3 id="4-迁移数据库表物理文件"><a href="#4-迁移数据库表物理文件" class="headerlink" title="4. 迁移数据库表物理文件"></a>4. 迁移数据库表物理文件</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># on 10.10.51.81</span></span><br><span class="line">$ mv /data1/mysql-bk/tmp/mysql/school_last1/* /data1/mysql/data/school/</span><br><span class="line">$ chown -R mysql:mysql /data1/mysql/data/school</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># on 10.10.51.81</span></span><br><span class="line"><span class="comment"># 导入表空间</span></span><br><span class="line">mysql&gt; source /data1/mysql-bk/tmp/mysql/import.sql;</span><br></pre></td></tr></tbody></table></figure>

<h3 id="5-还原表外键"><a href="#5-还原表外键" class="headerlink" title="5. 还原表外键"></a>5. 还原表外键</h3><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># on 10.10.51.81</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> qrtz_blob_triggers <span class="keyword">add</span> <span class="keyword">CONSTRAINT</span> <span class="string">`qrtz_blob_triggers_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`sched_name`</span>, <span class="string">`trigger_name`</span>, <span class="string">`trigger_group`</span>) <span class="keyword">REFERENCES</span> <span class="string">`qrtz_triggers`</span> (<span class="string">`sched_name`</span>, <span class="string">`trigger_name`</span>, <span class="string">`trigger_group`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT <span class="keyword">ON</span> <span class="keyword">UPDATE</span> RESTRICT;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> qrtz_cron_triggers <span class="keyword">add</span> <span class="keyword">CONSTRAINT</span> <span class="string">`qrtz_cron_triggers_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`sched_name`</span>, <span class="string">`trigger_name`</span>, <span class="string">`trigger_group`</span>) <span class="keyword">REFERENCES</span> <span class="string">`qrtz_triggers`</span> (<span class="string">`sched_name`</span>, <span class="string">`trigger_name`</span>, <span class="string">`trigger_group`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT <span class="keyword">ON</span> <span class="keyword">UPDATE</span> RESTRICT;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> qrtz_simprop_triggers <span class="keyword">add</span> <span class="keyword">CONSTRAINT</span> <span class="string">`qrtz_simprop_triggers_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`sched_name`</span>, <span class="string">`trigger_name`</span>, <span class="string">`trigger_group`</span>) <span class="keyword">REFERENCES</span> <span class="string">`qrtz_triggers`</span> (<span class="string">`sched_name`</span>, <span class="string">`trigger_name`</span>, <span class="string">`trigger_group`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT <span class="keyword">ON</span> <span class="keyword">UPDATE</span> RESTRICT;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> qrtz_simple_triggers <span class="keyword">add</span> <span class="keyword">CONSTRAINT</span> <span class="string">`qrtz_simple_triggers_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`sched_name`</span>, <span class="string">`trigger_name`</span>, <span class="string">`trigger_group`</span>) <span class="keyword">REFERENCES</span> <span class="string">`qrtz_triggers`</span> (<span class="string">`sched_name`</span>, <span class="string">`trigger_name`</span>, <span class="string">`trigger_group`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT <span class="keyword">ON</span> <span class="keyword">UPDATE</span> RESTRICT;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> qrtz_triggers <span class="keyword">add</span> <span class="keyword">CONSTRAINT</span> <span class="string">`qrtz_triggers_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`sched_name`</span>, <span class="string">`job_name`</span>, <span class="string">`job_group`</span>) <span class="keyword">REFERENCES</span> <span class="string">`qrtz_job_details`</span> (<span class="string">`sched_name`</span>, <span class="string">`job_name`</span>, <span class="string">`job_group`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT <span class="keyword">ON</span> <span class="keyword">UPDATE</span> RESTRICT;</span><br></pre></td></tr></tbody></table></figure>

<h3 id="6-清理"><a href="#6-清理" class="headerlink" title="6. 清理"></a>6. 清理</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># on 10.10.51.81</span></span><br><span class="line">rm -rf /tmp/school_last1.tar.gz</span><br><span class="line">rm -rf /data1/mysql-bk</span><br><span class="line"></span><br><span class="line"><span class="comment"># on 10.10.16.10</span></span><br><span class="line">rm -rf /tmp/school_last1.tar.gz /tmp/mysql</span><br></pre></td></tr></tbody></table></figure>



<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过上述方式备份及还原数据库时，支持热备及热还原。中途并未暂停及重启过位于 <code>10.10.16.10</code> 及 <code>10.10.51.81</code> 上的数据库。</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>InnoDB</tag>
        <tag>XtraBackup</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL错误及解决方案</title>
    <url>/posts/MySQL/7fc5246f.html</url>
    <content><![CDATA[<h1 id="MySQL错误及解决方案"><a href="#MySQL错误及解决方案" class="headerlink" title="MySQL错误及解决方案"></a>MySQL错误及解决方案</h1><p>MySQL 错误及解决方案</p>
<a id="more"></a>

<h3 id="mysql：1071-Specified-key-was-too-long-max-key-length-is-1000-bytes"><a href="#mysql：1071-Specified-key-was-too-long-max-key-length-is-1000-bytes" class="headerlink" title="mysql：1071 - Specified key was too long; max key length is 1000 bytes"></a>mysql：1071 - Specified key was too long; max key length is 1000 bytes</h3><pre><code>问题描述:
    在给 Mysql 表添加`unique`索引时弹出此提示
解决方案:
    1. 修改索引字段长度
    2. 修改DB engine 至 innodb</code></pre>
<h3 id="mysql-1093-You-can’t-specify-target-table-‘pre-the-public’-for-update-in-FROM-clause-Time-0-005000s"><a href="#mysql-1093-You-can’t-specify-target-table-‘pre-the-public’-for-update-in-FROM-clause-Time-0-005000s" class="headerlink" title="mysql: 1093 - You can’t specify target table ‘pre_the_public’ for update in FROM clause, Time: 0.005000s"></a>mysql: 1093 - You can’t specify target table ‘pre_the_public’ for update in FROM clause, Time: 0.005000s</h3><pre><code>问题描述:
    delete a from pre_the_public a where (a.type,a.name) in (
        select type,name from pre_the_public group by type,name having count(*) &gt; 1) 
    and id not in (
        select min(id) from pre_the_public group by type,name having count(*) &gt; 1
    )

    不能先select出同一表中的某些值再update这个表(在同一语句中)

解决方案 - 您不能在内部查询中引用该表(但是，你可以在外部使用子查询解决):
    delete from pre_the_public where (type,name) in (
        select a.type,a.name from (select * from pre_the_public) AS a group by a.type,a.name having count(*) &gt; 1) 
    and id not in (
        select min(b.id) from (select * from pre_the_public) AS b group by b.type,b.name having count(*) &gt; 1
    );

    这显然会导致必要的字段被隐式地复制到临时表中，因此是允许的。
摘自:
http://www.cnblogs.com/chy1000/archive/2010/03/02/1676282.html</code></pre>
<h4 id="2021-01-13-SQLSTATE-HY000-General-error-1615-Prepared-statement-needs-to-be-re-prepared"><a href="#2021-01-13-SQLSTATE-HY000-General-error-1615-Prepared-statement-needs-to-be-re-prepared" class="headerlink" title="2021-01-13 SQLSTATE[HY000]: General error: 1615 Prepared statement needs to be re-prepared"></a>2021-01-13 <code>SQLSTATE[HY000]: General error: 1615 Prepared statement needs to be re-prepared</code></h4><p>今天业务监控告警提示：<code>Prepared statement needs to be re-prepared</code>，错误码：<code>1615</code>。同一台 MySQL 的多台服务器均有告警提示，过了一段时候后就没有了（无法复现）。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># MySQL 版本</span></span><br><span class="line">select version();</span><br><span class="line">5.5.3-m3-log</span><br><span class="line"></span><br><span class="line">show GLOBAL status like <span class="string">'open%table%'</span>;</span><br><span class="line">Open_table_definitions	416</span><br><span class="line">Open_tables	614</span><br><span class="line">Opened_table_definitions	41215</span><br><span class="line">Opened_tables	65059</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看服务器默认配置值</span></span><br><span class="line"><span class="comment"># 所有线程打开的表的数量</span></span><br><span class="line">SHOW VARIABLES LIKE <span class="string">'%table_open_cache%'</span>;</span><br><span class="line">table_open_cache	614</span><br><span class="line"><span class="comment"># 可以存储在定义缓存中的表定义的数量</span></span><br><span class="line">SHOW VARIABLES LIKE <span class="string">'%table_definition_cache%'</span>;</span><br><span class="line">table_definition_cache	400</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2021-01-15</span></span><br><span class="line">show GLOBAL status like <span class="string">'open%table%'</span>;</span><br><span class="line">Open_table_definitions	400</span><br><span class="line">Open_tables	614</span><br><span class="line">Opened_table_definitions	41832</span><br><span class="line">Opened_tables	66734</span><br><span class="line"></span><br><span class="line"><span class="comment"># 网上解决方案(未实际操作验证)</span></span><br><span class="line"><span class="built_in">set</span> global table_open_cache=16384;</span><br><span class="line"><span class="built_in">set</span> global table_definition_cache=16384;</span><br></pre></td></tr></tbody></table></figure>

<h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="https://stackoverflow.com/questions/4380813/how-to-get-rid-of-mysql-error-prepared-statement-needs-to-be-re-prepared">https://stackoverflow.com/questions/4380813/how-to-get-rid-of-mysql-error-prepared-statement-needs-to-be-re-prepared</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_table_definition_cache">https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_table_definition_cache</a></li>
</ul>
<h4 id="错误：Waiting-for-table-metadata-lock"><a href="#错误：Waiting-for-table-metadata-lock" class="headerlink" title="错误：Waiting for table metadata lock"></a>错误：Waiting for table metadata lock</h4><ul>
<li><p>长事务运行，阻塞DDL，继而阻塞所有同表的后续操作</p>
<p>可通过 <code>show processlist</code> 命令查看正在进行的操作（包括读，此时alter table语句无法获取到 metadata 独占锁，会进行等待。</p>
</li>
<li><p>未提交事务阻塞DDL，继而引发同表的后续操作</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select * from information_schema.innodb_trx;</span><br></pre></td></tr></tbody></table></figure>

<p>在事务没有完成之前，TableA上的锁不会释放，alter table同样获取不到metadata的独占锁。通过以上命令查询出未提交事务的 <code>THREAD_ID</code>，然后 kill 掉，让其回滚。</p>
</li>
<li><p>通过show processlist看不到TableA上有任何操作，在information_schema.innodb_trx中也没有任何进行中的事务。这很可能是因为在一个显式的事务中，对TableA进行了一个失败的操作（比如查询了一个不存在的字段），这时事务没有开始，但是失败语句获取到的锁依然有效，没有释放。从<strong>performance_schema.events_statements_current</strong>表中可以查到失败的语句。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select * from performance_schema.events_statements_current;</span><br></pre></td></tr></tbody></table></figure>

</li>
</ul>
<h5 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="https://www.cnblogs.com/digdeep/p/4892953.html">MySQL出现Waiting for table metadata lock的原因以及解决方法</a></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL函数concat多个字段模糊查询不匹配问题</title>
    <url>/posts/uncategorized/6e02b605.html</url>
    <content><![CDATA[<p>MySQL函数concat多个字段模糊查询不匹配问题</p>
<a id="more"></a>


<h5 id="表结构"><a href="#表结构" class="headerlink" title="表结构"></a>表结构</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">CREATE TABLE `user_address` (</span><br><span class="line">  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'ID',</span><br><span class="line">  `name` char(12) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '' COMMENT '姓名',</span><br><span class="line">  `phone` char(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '' COMMENT '电话',</span><br><span class="line">  `zip_code` char(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '' COMMENT '邮编',</span><br><span class="line">  `address_district` int DEFAULT '0' COMMENT '地址-区',</span><br><span class="line">  `address_road` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '' COMMENT '地址-街道/路',</span><br><span class="line">  `address_detail` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '' COMMENT '详细地址',</span><br><span class="line">  `user_id` int DEFAULT '0' COMMENT '用户id',</span><br><span class="line">  `create_time` datetime DEFAULT NULL COMMENT '创建时间',</span><br><span class="line">  `update_time` datetime DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '修改时间',</span><br><span class="line">  `status` tinyint DEFAULT '1' COMMENT '状态(1有效,-1删除)',</span><br><span class="line">  PRIMARY KEY (`id`) USING BTREE,</span><br><span class="line">  KEY `idx_name` (`name`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='收货人地址表';</span><br></pre></td></tr></tbody></table></figure>

<h5 id="表数据"><a href="#表数据" class="headerlink" title="表数据"></a>表数据</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">INSERT INTO `publisher`.`user_address`(`id`, `name`, `phone`, `zip_code`, `address_district`, `address_road`, `address_detail`, `user_id`, `create_time`, `update_time`, `status`) VALUES (8, '王林', '13061111111', '261234', 6, '永清路', '173号', 12, NULL, '2022-03-09 17:23:35', 1);</span><br><span class="line">INSERT INTO `publisher`.`user_address`(`id`, `name`, `phone`, `zip_code`, `address_district`, `address_road`, `address_detail`, `user_id`, `create_time`, `update_time`, `status`) VALUES (16, '徐三', '13071111111', NULL, 3, '永清路', NULL, 6, NULL, '2022-03-11 10:28:20', 1);</span><br></pre></td></tr></tbody></table></figure>

<h5 id="查询语句"><a href="#查询语句" class="headerlink" title="查询语句"></a>查询语句</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM user_address WHERE CONCAT(address_road, address_detail) LIKE '%永清路%'\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">              id: 8</span><br><span class="line">            name: 王林</span><br><span class="line">           phone: 13061111111</span><br><span class="line">        zip_code: 261234</span><br><span class="line">address_district: 6</span><br><span class="line">    address_road: 永清路</span><br><span class="line">  address_detail: 173号</span><br><span class="line">         user_id: 12</span><br><span class="line">     create_time: NULL</span><br><span class="line">     update_time: 2022-03-09 17:23:35</span><br><span class="line">          status: 1</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></tbody></table></figure>

<h5 id="具体原因"><a href="#具体原因" class="headerlink" title="具体原因"></a>具体原因</h5><p><a href="https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_concat">MySQL :: Reference Manual :: 12.8 String Functions and Operators</a> </p>
<p><code>CONCAT()</code> returns <strong>NULL</strong> if any argument is <strong>NULL</strong>.</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">mysql&gt; SELECT CONCAT('My', NULL, 'QL')\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">CONCAT('My', NULL, 'QL'): NULL</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></tbody></table></figure>



<h5 id="解决方案一："><a href="#解决方案一：" class="headerlink" title="解决方案一："></a>解决方案一：</h5><p>将 address_detail 字段的默认值由 <code>NULL</code> 改为 <code>Empty String</code>。</p>
<h5 id="解决方案二："><a href="#解决方案二：" class="headerlink" title="解决方案二："></a>解决方案二：</h5><ol>
<li><p>使用 <code>IFNULL</code> 优化查询语句</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">mysql&gt;  SELECT * FROM user_address WHERE CONCAT(address_road, IFNULL(address_detail, "")) LIKE '%永清路%'\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">              id: 8</span><br><span class="line">            name: 王林</span><br><span class="line">           phone: 13061111111</span><br><span class="line">        zip_code: 261234</span><br><span class="line">address_district: 6</span><br><span class="line">    address_road: 永清路</span><br><span class="line">  address_detail: 173号</span><br><span class="line">         user_id: 12</span><br><span class="line">     create_time: NULL</span><br><span class="line">     update_time: 2022-03-09 17:23:35</span><br><span class="line">          status: 1</span><br><span class="line">*************************** 2. row ***************************</span><br><span class="line">              id: 16</span><br><span class="line">            name: 徐三</span><br><span class="line">           phone: 13071111111</span><br><span class="line">        zip_code: NULL</span><br><span class="line">address_district: 3</span><br><span class="line">    address_road: 永清路</span><br><span class="line">  address_detail: NULL</span><br><span class="line">         user_id: 6</span><br><span class="line">     create_time: NULL</span><br><span class="line">     update_time: 2022-03-11 10:28:20</span><br><span class="line">          status: 1</span><br><span class="line">2 rows in set (0.01 sec)</span><br></pre></td></tr></tbody></table></figure>



</li>
</ol>
<ol start="2">
<li><p>将 <code>concat</code> 改为 <code>concat_sw</code></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM user_address WHERE CONCAT_WS('', address_road, address_detail) LIKE '%永清路%'\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">              id: 8</span><br><span class="line">            name: 王林</span><br><span class="line">           phone: 13061111111</span><br><span class="line">        zip_code: 261234</span><br><span class="line">address_district: 6</span><br><span class="line">    address_road: 永清路</span><br><span class="line">  address_detail: 173号</span><br><span class="line">         user_id: 12</span><br><span class="line">     create_time: NULL</span><br><span class="line">     update_time: 2022-03-09 17:23:35</span><br><span class="line">          status: 1</span><br><span class="line">*************************** 2. row ***************************</span><br><span class="line">              id: 16</span><br><span class="line">            name: 徐三</span><br><span class="line">           phone: 13071111111</span><br><span class="line">        zip_code: NULL</span><br><span class="line">address_district: 3</span><br><span class="line">    address_road: 永清路</span><br><span class="line">  address_detail: NULL</span><br><span class="line">         user_id: 6</span><br><span class="line">     create_time: NULL</span><br><span class="line">     update_time: 2022-03-11 10:28:20</span><br><span class="line">          status: 1</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></tbody></table></figure>









</li>
</ol>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">mysql&gt; SELECT USER.*</span><br><span class="line">    -&gt; FROM</span><br><span class="line">    -&gt;     USER left JOIN user_address ON USER.id = user_address.user_id</span><br><span class="line">    -&gt;     left JOIN area ON area.id = user_address.address_district</span><br><span class="line">    -&gt; WHERE</span><br><span class="line">    -&gt;     USER.is_deleted = '0'</span><br><span class="line">    -&gt;     AND ( USER.username LIKE '%徐三%' OR ( user_address.NAME LIKE '%徐三%' AND user_address.STATUS = '1' ) ) \G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               id: 6</span><br><span class="line">         username: test2</span><br><span class="line">         password: null</span><br><span class="line">       avatar_url: fcd57e79f45c488c82bcc52b8b6c6139.png</span><br><span class="line">         nickname: abcdefjhijklmnopqrsquvwxyzabcdefjhijklmnopqrsquvwx</span><br><span class="line">            phone: 1831333221</span><br><span class="line">            email: test@163.com</span><br><span class="line">               ip:</span><br><span class="line">             port: 0</span><br><span class="line">     audit_status: 10</span><br><span class="line">audit_sys_user_id: 2</span><br><span class="line">     audit_reason: 2222</span><br><span class="line">       is_deleted: 0</span><br><span class="line">      create_time: 2022-02-21 10:43:16</span><br><span class="line">      update_time: 2022-03-10 17:06:56</span><br><span class="line">*************************** 2. row ***************************</span><br><span class="line">               id: 22</span><br><span class="line">         username: 徐三</span><br><span class="line">         password:</span><br><span class="line">       avatar_url:</span><br><span class="line">         nickname:</span><br><span class="line">            phone: 1831333222</span><br><span class="line">            email: test@aflaksdjlfasdlfkjasldfjaldjflasdkjflkajdlfjalsdkjflagklah.commm</span><br><span class="line">               ip:</span><br><span class="line">             port: 0</span><br><span class="line">     audit_status: 0</span><br><span class="line">audit_sys_user_id: 0</span><br><span class="line">     audit_reason: NULL</span><br><span class="line">       is_deleted: 0</span><br><span class="line">      create_time: 2022-02-22 11:16:17</span><br><span class="line">      update_time: 2022-02-22 11:16:17</span><br><span class="line">*************************** 3. row ***************************</span><br><span class="line">               id: 22</span><br><span class="line">         username: 徐三</span><br><span class="line">         password:</span><br><span class="line">       avatar_url:</span><br><span class="line">         nickname:</span><br><span class="line">            phone: 1831333222</span><br><span class="line">            email: test@aflaksdjlfasdlfkjasldfjaldjflasdkjflkajdlfjalsdkjflagklah.commm</span><br><span class="line">               ip:</span><br><span class="line">             port: 0</span><br><span class="line">     audit_status: 0</span><br><span class="line">audit_sys_user_id: 0</span><br><span class="line">     audit_reason: NULL</span><br><span class="line">       is_deleted: 0</span><br><span class="line">      create_time: 2022-02-22 11:16:17</span><br><span class="line">      update_time: 2022-02-22 11:16:17</span><br><span class="line">*************************** 4. row ***************************</span><br><span class="line">               id: 22</span><br><span class="line">         username: 徐三</span><br><span class="line">         password:</span><br><span class="line">       avatar_url:</span><br><span class="line">         nickname:</span><br><span class="line">            phone: 1831333222</span><br><span class="line">            email: test@aflaksdjlfasdlfkjasldfjaldjflasdkjflkajdlfjalsdkjflagklah.commm</span><br><span class="line">               ip:</span><br><span class="line">             port: 0</span><br><span class="line">     audit_status: 0</span><br><span class="line">audit_sys_user_id: 0</span><br><span class="line">     audit_reason: NULL</span><br><span class="line">       is_deleted: 0</span><br><span class="line">      create_time: 2022-02-22 11:16:17</span><br><span class="line">      update_time: 2022-02-22 11:16:17</span><br><span class="line">*************************** 5. row ***************************</span><br><span class="line">               id: 22</span><br><span class="line">         username: 徐三</span><br><span class="line">         password:</span><br><span class="line">       avatar_url:</span><br><span class="line">         nickname:</span><br><span class="line">            phone: 1831333222</span><br><span class="line">            email: test@aflaksdjlfasdlfkjasldfjaldjflasdkjflkajdlfjalsdkjflagklah.commm</span><br><span class="line">               ip:</span><br><span class="line">             port: 0</span><br><span class="line">     audit_status: 0</span><br><span class="line">audit_sys_user_id: 0</span><br><span class="line">     audit_reason: NULL</span><br><span class="line">       is_deleted: 0</span><br><span class="line">      create_time: 2022-02-22 11:16:17</span><br><span class="line">      update_time: 2022-02-22 11:16:17</span><br><span class="line">*************************** 6. row ***************************</span><br><span class="line">               id: 22</span><br><span class="line">         username: 徐三</span><br><span class="line">         password:</span><br><span class="line">       avatar_url:</span><br><span class="line">         nickname:</span><br><span class="line">            phone: 1831333222</span><br><span class="line">            email: test@aflaksdjlfasdlfkjasldfjaldjflasdkjflkajdlfjalsdkjflagklah.commm</span><br><span class="line">               ip:</span><br><span class="line">             port: 0</span><br><span class="line">     audit_status: 0</span><br><span class="line">audit_sys_user_id: 0</span><br><span class="line">     audit_reason: NULL</span><br><span class="line">       is_deleted: 0</span><br><span class="line">      create_time: 2022-02-22 11:16:17</span><br><span class="line">      update_time: 2022-02-22 11:16:17</span><br><span class="line">6 rows in set (0.01 sec)</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>canal同步主库MySQL5.6至从库MySQL8.0</title>
    <url>/posts/MySQL/7ca7ee77.html</url>
    <content><![CDATA[<p>canal同步主库MySQL5.6至从库MySQL8.0</p>
<hr>
<a id="more"></a>



<h5 id="利用-docker-拉取对应-mysql-版本的镜像。"><a href="#利用-docker-拉取对应-mysql-版本的镜像。" class="headerlink" title="利用 docker 拉取对应 mysql 版本的镜像。"></a>利用 docker 拉取对应 mysql 版本的镜像。</h5><p><a href="https://c.163.com/hub#/library/repository/info?repoId=2955">网易云 - Docker镜像</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ docker pull hub.c.163.com/library/mysql:5.6</span><br><span class="line">$ docker pull hub.c.163.com/library/mysql:8.0</span><br></pre></td></tr></tbody></table></figure>

<h5 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ docker run --name mysql-5.6 -e MYSQL_ROOT_PASSWORD=1234 -d hub.c.163.com/library/mysql:5.6</span><br><span class="line">$ docker run --name mysql-8.0 -e MYSQL_ROOT_PASSWORD=1234 -d hub.c.163.com/library/mysql:8.0</span><br></pre></td></tr></tbody></table></figure>

<h5 id="查看各容器IP地址"><a href="#查看各容器IP地址" class="headerlink" title="查看各容器IP地址"></a>查看各容器IP地址</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ ip addr</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li>172.17.0.2 mysql-5.6</li>
<li>172.17.0.3 mysql-8.0</li>
</ul>
<h5 id="查看各容器-mysql-对应版本"><a href="#查看各容器-mysql-对应版本" class="headerlink" title="查看各容器 mysql 对应版本"></a>查看各容器 mysql 对应版本</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"># 172.17.0.2</span><br><span class="line">root@7ae2a6435ca1:/# /usr/bin/mysql -V</span><br><span class="line">/usr/bin/mysql  Ver 14.14 Distrib 5.6.36, for Linux (x86_64) using  EditLine wrapper</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 172.17.0.3</span></span><br><span class="line">root@cc51ae9f3098:/<span class="comment"># /usr/bin/mysql -V</span></span><br><span class="line">/usr/bin/mysql  Ver 8.0.1-dmr <span class="keyword">for</span> Linux on x86_64 (MySQL Community Server (GPL))</span><br></pre></td></tr></tbody></table></figure>



<h5 id="安装-vim-工具，用于编辑配置文件"><a href="#安装-vim-工具，用于编辑配置文件" class="headerlink" title="安装 vim 工具，用于编辑配置文件"></a>安装 vim 工具，用于编辑配置文件</h5><p>由于仓库还是官方源，这里改成国内源，此处使用 163 源。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ cat &gt; /etc/apt/sources.list</span><br><span class="line">deb http://mirrors.163.com/debian/ jessie main non-free contrib</span><br><span class="line">deb http://mirrors.163.com/debian-archive/debian/ jessie-backports main non-free contrib</span><br><span class="line">deb-src http://mirrors.163.com/debian/ jessie main non-free contrib</span><br><span class="line">deb-src http://mirrors.163.com/debian-archive/debian/ jessie-backports main non-free contrib</span><br><span class="line">deb http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib</span><br><span class="line"><span class="comment"># ctrl + c</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 由于 jessie 源在 163 上太久没有同步，忽略对文件有效期的校验。</span></span><br><span class="line"><span class="comment"># E: Release file for http://mirrors.163.com/debian-archive/debian/dists/jessie-backports/InRelease is expired (invalid since 632d12h 4min 50s). Updates for this repository will not be applied.</span></span><br><span class="line">$ apt-get -o Acquire::Check-Valid-Until=<span class="literal">false</span> update</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ apt-get update</span><br><span class="line">$ apt-get install -y vim</span><br></pre></td></tr></tbody></table></figure>



<h5 id="主库-172-17-0-2"><a href="#主库-172-17-0-2" class="headerlink" title="主库 172.17.0.2"></a>主库 172.17.0.2</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br><span class="line"># Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">#</span><br><span class="line"># This program is free software; you can redistribute it and/or modify</span><br><span class="line"># it under the terms of the GNU General Public License as published by</span><br><span class="line"># the Free Software Foundation; version 2 of the License.</span><br><span class="line">#</span><br><span class="line"># This program is distributed in the hope that it will be useful,</span><br><span class="line"># but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="line"># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="line"># GNU General Public License for more details.</span><br><span class="line">#</span><br><span class="line"># You should have received a copy of the GNU General Public License</span><br><span class="line"># along with this program; if not, write to the Free Software</span><br><span class="line"># Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># The MySQL  Server configuration file.</span><br><span class="line">#</span><br><span class="line"># For explanations see</span><br><span class="line"># http://dev.mysql.com/doc/mysql/en/server-system-variables.html</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">pid-file	= /var/run/mysqld/mysqld.pid</span><br><span class="line">socket		= /var/run/mysqld/mysqld.sock</span><br><span class="line">datadir		= /var/lib/mysql</span><br><span class="line">log-error	= /var/log/mysql/error.log</span><br><span class="line"># Disabling symbolic-links is recommended to prevent assorted security risks</span><br><span class="line">symbolic-links=0</span><br><span class="line"></span><br><span class="line">server_id = 1</span><br><span class="line">log-bin = mysql-bin</span><br><span class="line">binlog-do-db = db</span><br><span class="line">log-slave-updates</span><br><span class="line">sync_binlog = 1</span><br><span class="line">#auto_increment_offset = 1</span><br><span class="line">#auto_increment_increment = 1</span><br><span class="line">#expire_logs_days = 7  </span><br><span class="line">#log_bin_trust_function_creators = 1</span><br></pre></td></tr></tbody></table></figure>

<p>重启主库 <code>mysqld</code> 服务，进入 <code>mysql</code> 命令行模式。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"># 查看主库当前binary log文件名和位置（position）</span><br><span class="line">mysql&gt; show master status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">             File: mysql-bin.000001</span><br><span class="line">         Position: 1152</span><br><span class="line">     Binlog_Do_DB: db</span><br><span class="line"> Binlog_Ignore_DB:</span><br><span class="line">Executed_Gtid_Set:</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></tbody></table></figure>

<h5 id="从库-172-17-0-3"><a href="#从库-172-17-0-3" class="headerlink" title="从库 172.17.0.3"></a>从库 172.17.0.3</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">vim /etc/mysql/conf.d/docker.cnf</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">skip-host-cache</span><br><span class="line">skip-name-resolve</span><br><span class="line"></span><br><span class="line">server_id = 2</span><br><span class="line">log-bin = mysql-bin</span><br><span class="line">log-slave-updates</span><br><span class="line">sync_binlog = 0</span><br><span class="line">innodb_flush_log_at_trx_commit = 0        </span><br><span class="line">replicate-do-db = db         </span><br><span class="line">slave-net-timeout = 60                    </span><br><span class="line">log_bin_trust_function_creators = 1</span><br></pre></td></tr></tbody></table></figure>

<p>重启从库 <code>mysqld</code> 服务，进入 <code>mysql</code> 命令行模式。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 设置主节点参数</span></span><br><span class="line">mysql&gt; change master to master_host=<span class="string">'172.17.0.2'</span>,master_user=<span class="string">'root'</span>,master_password=<span class="string">'1234'</span>,master_log_file=<span class="string">'mysql-bin.000001'</span>,master_log_pos=120;</span><br><span class="line"><span class="comment"># 开启主从同步</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"><span class="comment"># 查看主从同步状态</span></span><br><span class="line">mysql&gt; show slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 172.17.0.2</span><br><span class="line">                  Master_User: root</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000001</span><br><span class="line">          Read_Master_Log_Pos: 120</span><br><span class="line">               Relay_Log_File: cc51ae9f3098-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 317</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: db</span><br><span class="line">          Replicate_Ignore_DB:</span><br><span class="line">           Replicate_Do_Table:</span><br><span class="line">       Replicate_Ignore_Table:</span><br><span class="line">      Replicate_Wild_Do_Table:</span><br><span class="line">  Replicate_Wild_Ignore_Table:</span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error:</span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 120</span><br><span class="line">              Relay_Log_Space: 531</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File:</span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File:</span><br><span class="line">           Master_SSL_CA_Path:</span><br><span class="line">              Master_SSL_Cert:</span><br><span class="line">            Master_SSL_Cipher:</span><br><span class="line">               Master_SSL_Key:</span><br><span class="line">        Seconds_Behind_Master: 0</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error:</span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error:</span><br><span class="line">  Replicate_Ignore_Server_Ids:</span><br><span class="line">             Master_Server_Id: 1</span><br><span class="line">                  Master_UUID: a514dd91-2587-11eb-a23f-0242ac110002</span><br><span class="line">             Master_Info_File: /var/lib/mysql/master.info</span><br><span class="line">                    SQL_Delay: 0</span><br><span class="line">          SQL_Remaining_Delay: NULL</span><br><span class="line">      Slave_SQL_Running_State: Slave has <span class="built_in">read</span> all relay <span class="built_in">log</span>; waiting <span class="keyword">for</span> more updates</span><br><span class="line">           Master_Retry_Count: 86400</span><br><span class="line">                  Master_Bind:</span><br><span class="line">      Last_IO_Error_Timestamp:</span><br><span class="line">     Last_SQL_Error_Timestamp:</span><br><span class="line">               Master_SSL_Crl:</span><br><span class="line">           Master_SSL_Crlpath:</span><br><span class="line">           Retrieved_Gtid_Set:</span><br><span class="line">            Executed_Gtid_Set:</span><br><span class="line">                Auto_Position: 0</span><br><span class="line">         Replicate_Rewrite_DB:</span><br><span class="line">                 Channel_Name:</span><br><span class="line">           Master_TLS_Version:</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></tbody></table></figure>



<h5 id="主从库数据同步测试"><a href="#主从库数据同步测试" class="headerlink" title="主从库数据同步测试"></a>主从库数据同步测试</h5><h6 id="主库"><a href="#主库" class="headerlink" title="主库"></a>主库</h6><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line">mysql&gt; CREATE TABLE `<span class="built_in">test</span>` (</span><br><span class="line">  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `name` char(255) CHARACTER SET utf8mb4 DEFAULT <span class="string">''</span>,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;</span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line">mysql&gt; insert into <span class="built_in">test</span>(`name`) values(<span class="string">"codezm"</span>), (<span class="string">"codezmm"</span>);</span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line">mysql&gt; update <span class="built_in">test</span> <span class="built_in">set</span> name = <span class="string">"codezm1"</span> <span class="built_in">where</span> id = 1;</span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line">mysql&gt; delete from <span class="built_in">test</span> <span class="built_in">where</span> id = 2;</span><br><span class="line"><span class="comment"># 5</span></span><br><span class="line">mysql&gt; select version();</span><br><span class="line">+------------+</span><br><span class="line">| version()  |</span><br><span class="line">+------------+</span><br><span class="line">| 5.6.36-log |</span><br><span class="line">+------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></tbody></table></figure>

<h6 id="从库"><a href="#从库" class="headerlink" title="从库"></a>从库</h6><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"># 1</span><br><span class="line">mysql&gt; show create table test;</span><br><span class="line">+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Table | Create Table                                                                                                                                                          |</span><br><span class="line">+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| test  | CREATE TABLE `test` (</span><br><span class="line">  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `name` char(255) DEFAULT '',</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 |</span><br><span class="line">+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"># 2</span><br><span class="line">mysql&gt; select * from test;</span><br><span class="line">+----+---------+</span><br><span class="line">| id | name    |</span><br><span class="line">+----+---------+</span><br><span class="line">|  1 | codezm1 |</span><br><span class="line">|  2 | codezmm |</span><br><span class="line">+----+---------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"># 3</span><br><span class="line">mysql&gt; select * from test;</span><br><span class="line">+----+---------+</span><br><span class="line">| id | name    |</span><br><span class="line">+----+---------+</span><br><span class="line">|  1 | codezm1 |</span><br><span class="line">|  2 | codezmm |</span><br><span class="line">+----+---------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"># 4</span><br><span class="line">mysql&gt; select * from test;</span><br><span class="line">+----+---------+</span><br><span class="line">| id | name    |</span><br><span class="line">+----+---------+</span><br><span class="line">|  1 | codezm1 |</span><br><span class="line">+----+---------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"># 5</span><br><span class="line">mysql&gt; select version();</span><br><span class="line">+---------------+</span><br><span class="line">| version()     |</span><br><span class="line">+---------------+</span><br><span class="line">| 8.0.1-dmr-log |</span><br><span class="line">+---------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></tbody></table></figure>





<h4 id="canal-中间件"><a href="#canal-中间件" class="headerlink" title="canal 中间件"></a>canal 中间件</h4><h5 id="canal-server-配置"><a href="#canal-server-配置" class="headerlink" title="canal-server 配置"></a>canal-server 配置</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">docker pull canal/canal-server:v1.1.4</span><br><span class="line">docker run --name canal-server -d -p 11110-11112:11110-11112 -p 9100:9100 canal/canal-server:v1.1.4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 无法指定 --ip 参数，待解决。。。</span></span><br><span class="line">docker run --name canal-server-50.83 \</span><br><span class="line">					 -e canal.instance.master.address=10.10.50.83:3306 \</span><br><span class="line">					 -e canal.admin.manager=host.docker.internal:8089 \</span><br><span class="line">					 -e canal.admin.register.auto=<span class="literal">true</span> \</span><br><span class="line">					 -d --network lnmp_backend canal/canal-server:v1.1.4</span><br><span class="line">					 </span><br><span class="line">					 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置主库信息</span></span><br><span class="line">vi ./canal-server/conf/example/instance.properties</span><br></pre></td></tr></tbody></table></figure>

<h5 id="canal-admin-配置"><a href="#canal-admin-配置" class="headerlink" title="canal-admin 配置"></a>canal-admin 配置</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">docker pull canal/canal-admin:v1.1.4</span><br><span class="line">docker run --name canal-admin -p 8089:8089 -d canal/canal-admin:v1.1.4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run --name canal-admin -p 8089:8089 -d --network lnmp_backend canal/canal-admin:v1.1.4</span><br><span class="line"></span><br><span class="line">vi canal-admin/conf/application.yml</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">create database canal;</span><br><span class="line"></span><br><span class="line">CREATE TABLE `user` (</span><br><span class="line">  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `name` char(255) DEFAULT '',</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=MYISAM DEFAULT CHARSET=utf8mb4;</span><br><span class="line"></span><br><span class="line">use user;</span><br><span class="line">insert into user(`name`) values("codezm"), ("codejm");</span><br><span class="line">update user set name = "codezm1" where id = 1;</span><br><span class="line">delete from user where id = 2;</span><br></pre></td></tr></tbody></table></figure>

<h5 id="主库-1"><a href="#主库-1" class="headerlink" title="主库"></a>主库</h5><hr>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">docker run --name mysql-5.6 -p 3307:3306 -d -e MYSQL_ROOT_PASSWORD=1234  hub.c.163.com/library/mysql:5.6</span><br><span class="line"></span><br><span class="line">vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br><span class="line"><span class="comment"># Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This program is free software; you can redistribute it and/or modify</span></span><br><span class="line"><span class="comment"># it under the terms of the GNU General Public License as published by</span></span><br><span class="line"><span class="comment"># the Free Software Foundation; version 2 of the License.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This program is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment"># but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment"># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></span><br><span class="line"><span class="comment"># GNU General Public License for more details.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You should have received a copy of the GNU General Public License</span></span><br><span class="line"><span class="comment"># along with this program; if not, write to the Free Software</span></span><br><span class="line"><span class="comment"># Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The MySQL  Server configuration file.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For explanations see</span></span><br><span class="line"><span class="comment"># http://dev.mysql.com/doc/mysql/en/server-system-variables.html</span></span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">pid-file        = /var/run/mysqld/mysqld.pid</span><br><span class="line">socket          = /var/run/mysqld/mysqld.sock</span><br><span class="line">datadir         = /var/lib/mysql</span><br><span class="line">log-error       = /var/<span class="built_in">log</span>/mysql/error.log</span><br><span class="line"><span class="comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line">symbolic-links=0</span><br><span class="line"></span><br><span class="line">server_id = 1</span><br><span class="line">log-bin = mysql-bin</span><br><span class="line"><span class="comment">#binlog-format=ROW</span></span><br><span class="line">binlog-format=mixed</span><br></pre></td></tr></tbody></table></figure>

<h5 id="从库-1"><a href="#从库-1" class="headerlink" title="从库"></a>从库</h5><hr>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">docker run --name mysql-8.0 -p 3308:3306 -e MYSQL_ROOT_PASSWORD=1234 -d hub.c.163.com/library/mysql:8.0</span><br></pre></td></tr></tbody></table></figure>



<h5 id="canal"><a href="#canal" class="headerlink" title="canal"></a>canal</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">2020-11-17 17:55:34.093 [destination = example , address = /192.168.65.2:3307 , EventParser] WARN  c.a.o.c.p.inbound.mysql.rds.RdsBinlogEventParserProxy - ---&gt; begin to find start position, it will be long time <span class="keyword">for</span> reset or first position</span><br><span class="line">2020-11-17 17:55:34.093 [destination = example , address = /192.168.65.2:3307 , EventParser] WARN  c.a.o.c.p.inbound.mysql.rds.RdsBinlogEventParserProxy - prepare to find start position by switch ::1605598704000</span><br><span class="line">2020-11-17 17:55:34.109 [destination = example , address = /192.168.65.2:3307 , EventParser] WARN  c.a.o.c.p.inbound.mysql.rds.RdsBinlogEventParserProxy - Didn<span class="string">'t find the corresponding binlog files from mysql-bin.000001 to mysql-bin.000001</span></span><br><span class="line"><span class="string">2020-11-17 17:55:34.109 [destination = example , address = /192.168.65.2:3307 , EventParser] ERROR c.a.o.c.p.inbound.mysql.rds.RdsBinlogEventParserProxy - dump address /192.168.65.2:3307 has an error, retrying. caused by</span></span><br><span class="line"><span class="string">com.alibaba.otter.canal.parse.exception.PositionNotFoundException: can'</span>t find start position <span class="keyword">for</span> example</span><br><span class="line">2020-11-17 17:55:34.110 [destination = example , address = /192.168.65.2:3307 , EventParser] ERROR com.alibaba.otter.canal.common.alarm.LogAlarmHandler - destination:example[com.alibaba.otter.canal.parse.exception.PositionNotFoundException: can<span class="string">'t find start position for exampl</span></span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p> 原因：meta.dat 中保存的位点信息和数据库的位点信息不一致；导致canal抓取不到数据库的动作；</p>
</blockquote>
<h6 id="解决方案：删除-meta-dat-文件，再重启-canal-server。"><a href="#解决方案：删除-meta-dat-文件，再重启-canal-server。" class="headerlink" title="解决方案：删除 meta.dat 文件，再重启 canal-server。"></a>解决方案：删除 meta.dat 文件，再重启 canal-server。</h6><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">rm -f ./canal-server/conf/example/meta.dat</span><br></pre></td></tr></tbody></table></figure>





<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><h5 id="10-10-50-83-news"><a href="#10-10-50-83-news" class="headerlink" title="10.10.50.83 news"></a>10.10.50.83 news</h5><p>配置 mysql</p>
<hr>
<p> vi /data/mysql/my.cnf</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">server_id = 1</span><br><span class="line">log-bin = mysql-bin</span><br><span class="line">binlog-format=mixed</span><br></pre></td></tr></tbody></table></figure>



<p>重启 mysql</p>
<hr>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭 mysql</span></span><br><span class="line">/data/mysql/bin/mysqladmin -u root -p shutdown</span><br><span class="line"><span class="comment"># 启动 mysql</span></span><br><span class="line">/bin/sh /data/mysql/bin/mysqld_safe --defaults-file=/data/mysql/my.cnf &amp;</span><br></pre></td></tr></tbody></table></figure>

<p>由于我先开启了 binlog，但生成的 binlog 没法使用。</p>
<blockquote>
<p>历史数据没有 binlog。</p>
</blockquote>
<p>重置binlog</p>
<hr>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">show master status \G;</span><br><span class="line"># 重置binlog，重置前需停止从库同步：slave stop</span><br><span class="line">reset master;</span><br><span class="line"># 确认重置</span><br><span class="line">show master status \G;</span><br></pre></td></tr></tbody></table></figure>



<p>测试数据库SQL</p>
<hr>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">/data/mysql/bin/mysqldump -uroot -p news &gt; /tmp/news.sql;</span><br></pre></td></tr></tbody></table></figure>

<p>开启 canal dump 10.10.50.83 instance。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">create database news;</span><br><span class="line">use news;</span><br><span class="line"><span class="built_in">source</span> /tmp/news.sql;</span><br></pre></td></tr></tbody></table></figure>

<p>启动客户端订阅并消费。</p>
<h4 id="历史产生的-binlog-不消费"><a href="#历史产生的-binlog-不消费" class="headerlink" title="历史产生的 binlog 不消费"></a>历史产生的 binlog 不消费</h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">show binary logs;</span><br></pre></td></tr></tbody></table></figure>

<p><img data-src="7ca7ee77/image-20201119145217478.png" alt="image-20201119145217478"></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"></span><br><span class="line">show binlog events in 'mysql-bin.000001' limit 2 \G;</span><br></pre></td></tr></tbody></table></figure>

<p><img data-src="7ca7ee77/image-20201119145145118.png" alt="image-20201119145145118"></p>
<p><code>vi canal-server/conf/10.10.50.83/meta.dat</code></p>
<p><img data-src="7ca7ee77/image-20201119145418590.png" alt="image-20201119145418590"></p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>canal</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx-gzip压缩</title>
    <url>/posts/nginx/12a91006.html</url>
    <content><![CDATA[<p>Nginx-gzip压缩</p>
<ul>
<li><p><a href="http://nginx.org/en/docs/http/ngx_http_gzip_module.html">ngx_http_gzip_module</a></p>
</li>
<li><p><a href="http://nginx.org/en/docs/http/ngx_http_gzip_static_module.html">ngx_http_gzip_static_module</a></p>
</li>
<li><p><a href="http://nginx.org/en/docs/http/ngx_http_gunzip_module.html">ngx_http_gunzip_module</a></p>
<a id="more"></a>

</li>
</ul>
<h4 id="nginx-推荐配置"><a href="#nginx-推荐配置" class="headerlink" title="nginx 推荐配置"></a>nginx 推荐配置</h4><figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">gzip</span>  <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">gzip_min_length</span>   <span class="number">1k</span>;</span><br><span class="line"><span class="attribute">gzip_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line"><span class="attribute">gzip_types</span> text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;</span><br><span class="line"><span class="attribute">gzip_disable</span> <span class="string">"MSIE [1-6]\."</span>;</span><br><span class="line"><span class="attribute">gzip_comp_level</span>   <span class="number">2</span>;</span><br><span class="line"><span class="attribute">gzip_vary</span> <span class="literal">on</span>;</span><br><span class="line"><span class="comment">#gzip_static on;</span></span><br><span class="line"><span class="comment">#gunzip on</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="ngx-http-gzip-module"><a href="#ngx-http-gzip-module" class="headerlink" title="ngx_http_gzip_module"></a>ngx_http_gzip_module</h4><blockquote>
<p>默认已编译，可通过 <code>--without-http_gzip_module</code> 禁用模块。</p>
</blockquote>
<p>我们可通过 <code>ngx_http_gzip_module</code> 模块，使用 <code>gzip on;</code> 指令开启 gzip 压缩，实时压缩 http 包体，提升网络传输效率。</p>
<blockquote>
<p>Syntax: gzip on | off;</p>
<p>Default: gzip off;</p>
<p>Context: http,server,location, if in location</p>
</blockquote>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">gzip</span> <span class="literal">on</span>;</span><br></pre></td></tr></tbody></table></figure>



<p>指定压缩文件类型，图片类文件本身就自带压缩，再进行压缩提升并不明显。</p>
<blockquote>
<p>Syntax: gzip_types mime-type …;</p>
<p>Default: gzip_types text/html;</p>
<p>Context: http,server,location</p>
</blockquote>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">gzip_types</span> text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;</span><br></pre></td></tr></tbody></table></figure>



<p>指定压缩文件的最小字节数，当小于此字节数时不进行压缩。</p>
<blockquote>
<p>Syntax:    gzip_min_length length;<br>Default:    gzip_min_length 20;<br>Context:    http, server, location</p>
</blockquote>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">gzip_min_length</span> <span class="number">1k</span>;</span><br></pre></td></tr></tbody></table></figure>



<p>通过设置正则规则，表明哪些 <code>User-Agent</code> 头不使用 gzip 压缩。</p>
<blockquote>
<p>Syntax:    gzip_disable regex …;<br>Default:    —<br>Context:    http, server, location</p>
</blockquote>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 禁用IE 1-6 gzip</span></span><br><span class="line"><span class="attribute">gzip_disable</span> <span class="string">"MSIE [1-6]\."</span>;</span><br></pre></td></tr></tbody></table></figure>



<p>指定压缩的  http 版本，默认：http_version: 1.1 才启用压缩处理。</p>
<blockquote>
<p>Syntax:    gzip_http_version 1.0 | 1.1;<br>Default:    gzip_http_version 1.1;<br>Context:    http, server, location</p>
</blockquote>
<p>是否压缩上游的响应</p>
<blockquote>
<p>Syntax:    gzip_proxied off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any …;<br>Default:    gzip_proxied off;<br>Context:    http, server, location</p>
</blockquote>
<ul>
<li>off<ul>
<li>不压缩来自上游的响应</li>
</ul>
</li>
<li>expired<ul>
<li>如果上游响应中含有 Expires 头部，且其值中的时间与系统时间比较后确定不会缓存，则压缩响应</li>
</ul>
</li>
<li>no-cache<ul>
<li>如果上游响应中含有 <code>Cache-Control</code> 头部，且其值含有 <code>no-cache</code> 值，则压缩响应。</li>
</ul>
</li>
<li>private<ul>
<li>如果上游响应中含有 <code>Cache-Control</code> 头部，且其值含有 <code>private</code> 值，则压缩响应</li>
</ul>
</li>
<li>no_last_modified<ul>
<li>如果上游响应中没有 <code>Last-Modified</code> 头部，则压缩响应</li>
</ul>
</li>
<li>no_etag<ul>
<li>如果上游响应中没有 <code>ETag</code> 头部，则压缩响应</li>
</ul>
</li>
<li>auth<ul>
<li>如果客户端请求中含有 <code>Authorization</code> 头部，则压缩响应</li>
</ul>
</li>
<li>any<ul>
<li>压缩所有来自上游的响应</li>
</ul>
</li>
</ul>
<p>配置缓冲区大小</p>
<blockquote>
<p>Syntax:    gzip_buffers number size;<br>Default:    gzip_buffers 32 4k|16 8k;<br>Context:    http, server, location</p>
</blockquote>
<p>压缩率等级，1-9，1：压缩速度最快，压缩率最低。</p>
<blockquote>
<p>Syntax:    gzip_comp_level level;<br>Default:    gzip_comp_level 1;<br>Context:    http, server, location</p>
</blockquote>
<p>是否在响应中返回 <code>Vary: Accept-Encoding</code>。</p>
<blockquote>
<p>Syntax:    gzip_vary on | off;<br>Default:    gzip_vary off;<br>Context:    http, server, location</p>
</blockquote>
<p>变量</p>
<ul>
<li>压缩率 <code>$gzip_ratio</code> </li>
</ul>
<h5 id="如何确定是否成功开启？"><a href="#如何确定是否成功开启？" class="headerlink" title="如何确定是否成功开启？"></a>如何确定是否成功开启？</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[root@codezm ~]<span class="comment"># curl -I "http://127.0.0.1/src/js/jquery.min.js"</span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.18.0</span><br><span class="line">Date: Mon, 28 Dec 2020 08:07:43 GMT</span><br><span class="line">Content-Type: application/javascript</span><br><span class="line">Content-Length: 89476</span><br><span class="line">Last-Modified: Mon, 28 Dec 2020 06:39:59 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">ETag: <span class="string">"5fe97dbf-15d84"</span></span><br><span class="line">Accept-Ranges: bytes</span><br></pre></td></tr></tbody></table></figure>

<p>响应头中有 <code>Vary</code> 参数，证明已开启 <code>gzip</code> 压缩。</p>
<h4 id="ngx-http-gzip-static-module"><a href="#ngx-http-gzip-static-module" class="headerlink" title="ngx_http_gzip_static_module"></a>ngx_http_gzip_static_module</h4><blockquote>
<p>默认未编译，需在 <code>configure</code> 时增加 <code>--with-http_gzip_static_module</code> 参数。</p>
</blockquote>
<p>在启用 <code>gzip</code> 压缩后，因需要对 <code>body</code> 做压缩处理所以无法使用 sendfile 零拷贝技术。可通过 <code>ngx_http_gzip_static_module</code> 模块，它将检索请求文件相对路径下有没有同名 <code>.gz</code> 文件，有时将直接响应此文件。</p>
<blockquote>
<p>Syntax:    gzip_static on | off | always;<br>Default:    gzip_static off;<br>Context:    http, server, location</p>
</blockquote>
<p>配置文件中增加 <code>gzip_static on;</code> 指令，开启此模块，还需要在访问文件相对目录下创建同名 <code>.gz</code> 压缩文件。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[root@codezm js]<span class="comment"># tar -zcvf jquery.min.js.gz jquery.min.js</span></span><br><span class="line">-rwxr-xr-x. 1 apache apache 89476 12月 28 14:39 jquery.min.js</span><br><span class="line">-rw-r--r--. 1 root   root   30939 12月 28 15:36 jquery.min.js.gz</span><br></pre></td></tr></tbody></table></figure>



<h5 id="如何确定是否成功开启？-1"><a href="#如何确定是否成功开启？-1" class="headerlink" title="如何确定是否成功开启？"></a>如何确定是否成功开启？</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[root@codezm ~]<span class="comment"># curl -I -H "Accept-Encoding: gzip, deflate" "http://127.0.0.1/src/js/jquery.min.js"</span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.18.0</span><br><span class="line">Date: Mon, 28 Dec 2020 08:12:12 GMT</span><br><span class="line">Content-Type: application/javascript</span><br><span class="line">Content-Length: 30939</span><br><span class="line">Last-Modified: Mon, 28 Dec 2020 07:36:38 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">ETag: <span class="string">"5fe98b06-78db"</span></span><br><span class="line">Content-Encoding: gzip</span><br></pre></td></tr></tbody></table></figure>

<p>响应头中 <code>Content-Length: 30939</code> 大小与文件压缩后大小一致。</p>
<p>在使用 <code>tar -zcvf</code> 压缩文件后，发现浏览器并不能对压缩后文件正常解压并解析。而使用 <code>gzip</code> 命令压缩后则正常，文件也更小了。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[root@codezm js]<span class="comment"># gzip jquery.min.js</span></span><br><span class="line">[root@codezm js]<span class="comment"># ls -la</span></span><br><span class="line">-rwxr-xr-x. 1 apache apache 30842 12月 29 14:27 jquery.min.js.gz</span><br></pre></td></tr></tbody></table></figure>

<h4 id="ngx-http-gunzip-module"><a href="#ngx-http-gunzip-module" class="headerlink" title="ngx_http_gunzip_module"></a>ngx_http_gunzip_module</h4><blockquote>
<p>默认未编译，需在 <code>configure</code> 时增加 <code>with-http_gunzip_module</code> 参数。</p>
</blockquote>
<p>若服务器上仅存在 <code>*.gz</code> 压缩文件，没有源文件，且客户端不支持 <code>gzip</code> 压缩，可在配置文件中添加 <code>gunzip on;</code> 指令开启此模块。</p>
<ul>
<li>当客户端不支持 <code>gzip</code> 压缩时，将在解压后再返回响应。</li>
<li>若客户端支持 <code>gzip</code> 压缩，则直接输出 <code>.gz</code> 文件。</li>
</ul>
<blockquote>
<p>Syntax:    gunzip on | off;<br>Default:    gunzip off;<br>Context:    http, server, location</p>
</blockquote>
<blockquote>
<p>Syntax:    gunzip_buffers number size;<br>Default:    gunzip_buffers 32 4k|16 8k;<br>Context:    http, server, location</p>
</blockquote>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://www.cnblogs.com/yangjianbo/articles/8439764.html">https://www.cnblogs.com/yangjianbo/articles/8439764.html</a></li>
</ul>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx-https优化</title>
    <url>/posts/Nginx/7c15ca34.html</url>
    <content><![CDATA[<p>Nginx-https优化</p>
<a id="more"></a>

<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 不同 worker 绑定到不同核上，提高 CPU 缓存命中率，auto 根据 worker 数量自动绑定 CPU。</span></span><br><span class="line"><span class="attribute">worker_cpu_affinity</span> auto;</span><br><span class="line"></span><br><span class="line"><span class="attribute">sendfile</span>           <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">tcp_nopush</span>         <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">tcp_nodelay</span>        <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">keepalive_timeout</span>  <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">ssl_session_tickets</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">ssl_session_ticket_key</span> ticket.key;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有 worker 进程之间共享的缓存大小，1兆大约可以存储 4000 个会话，此处可存储 40000 个会话。</span></span><br><span class="line"><span class="attribute">ssl_session_cache</span>   shared:SSL:<span class="number">10m</span>;</span><br><span class="line"><span class="comment"># 会话超时时间</span></span><br><span class="line"><span class="attribute">ssl_session_timeout</span> <span class="number">10m</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">listen</span> <span class="number">80</span> reuseport backlog=<span class="number">8192</span>; <span class="comment"># reuseport linux &gt; 3.9 CentOS &gt;= 7.0</span></span><br></pre></td></tr></tbody></table></figure>



<p>用于加密和解密TLS会话票据的密钥设置，生成 ticket 文件，必须含有80或48个字节的随机数据。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">openssl rand 80&gt; ticket.key</span><br></pre></td></tr></tbody></table></figure>



<h4 id="certbot-自动化脚本生成-Let’s-Encrypt-免费证书。"><a href="#certbot-自动化脚本生成-Let’s-Encrypt-免费证书。" class="headerlink" title="certbot 自动化脚本生成 Let’s Encrypt 免费证书。"></a>certbot 自动化脚本生成 Let’s Encrypt 免费证书。</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">yum install python2-certbot-nginx</span><br><span class="line"></span><br><span class="line">certbot --nginx --nginx-server-root=/usr/<span class="built_in">local</span>/nginx/conf/ -d test.codezm.com</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>域名 <code>test.codezm.com</code> 必须可访问。CA机构才能颁发证书。<a href="https://certbot.eff.org/docs/install.html">https://certbot.eff.org/docs/install.html</a></p>
</blockquote>
<h4 id="Tcp-优化"><a href="#Tcp-优化" class="headerlink" title="Tcp 优化"></a>Tcp 优化</h4><h5 id="SYN-RCVD-状态"><a href="#SYN-RCVD-状态" class="headerlink" title="SYN_RCVD 状态"></a>SYN_RCVD 状态</h5><ul>
<li>SYN - <code>SYN_RECEIVED QUEUE</code><ul>
<li><code>net.ipv4.tcp_max_syn_backlog=262144</code> 接收 <code>SYN</code> 最大数量，半链接个数。<code>SYN</code><ul>
<li>查看：<code>cat /proc/sys/net/ipv4/tcp_max_syn_backlog</code></li>
</ul>
</li>
<li><code>net.ipv4.tcp_synack_retries</code> 被动建立连接时，发送 SYN/ACK 的重试次数。<code>SYN+ACK</code><ul>
<li>查看：<code>cat /proc/sys/net/ipv4/tcp_synack_retries</code></li>
</ul>
</li>
</ul>
</li>
<li><code>ACCEPT</code> - <code>ESTABLISHED QUEUE</code><ul>
<li><code>net.core.somaxconn</code> 系统级最大 backlog 队列长度。</li>
<li>nginx 端口限制 backlog 队列长度<ul>
<li><code>listen 80 backlog=8192;</code></li>
</ul>
</li>
<li>如何查看 Accept queue 溢出？<ul>
<li><code>netstat -s | grep LISTEN</code> ，返回 <code>SYNS to LISTEN sockets ignored</code> 时。</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>防止 <code>SYN</code> 攻击，开启 <code>net.ipv4.tcp_syncookies=1</code> ，在 SYN 队列满时，启用 cookie。</p>
<h4 id="一切皆文件：句柄数的上限"><a href="#一切皆文件：句柄数的上限" class="headerlink" title="一切皆文件：句柄数的上限"></a>一切皆文件：句柄数的上限</h4><h5 id="操作系统全局"><a href="#操作系统全局" class="headerlink" title="操作系统全局"></a>操作系统全局</h5><ul>
<li><p>fs.file-max 操作系统可使用的最大句柄数</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sysctl -a | grep file-max</span><br></pre></td></tr></tbody></table></figure>



</li>
</ul>
<pre><code>- fs.file-nr 查看当前已分配(正使用)、待重新分配、上限</code></pre>
<h5 id="限制用户"><a href="#限制用户" class="headerlink" title="限制用户"></a>限制用户</h5><ul>
<li><p>/etc/security/limits.conf</p>
<ul>
<li>root soft nofile 65535</li>
<li>root hard nofile 65535</li>
</ul>
<p>限制 <code>root</code> 用户，软、硬链接个数。</p>
<p><code>hard</code> 强制的、真实的链接，<code>soft</code> 软的限制，进程在运行时自动的修改软限制、但无法修改硬的，<code>soft</code> 一定要小于 <code>hard</code>。</p>
</li>
</ul>
<p>  <code>* - noproc 11000</code></p>
<ul>
<li><p><code>*</code> 代表针对所有用户</p>
</li>
<li><p><code>-</code> 的意思为 <code>soft</code> 和 <code>hard</code> 全部限制。</p>
</li>
<li><p>nofile 代表最大文件打开数</p>
</li>
<li><p>noproc 代表最大进程数</p>
</li>
</ul>
<h5 id="限制进程"><a href="#限制进程" class="headerlink" title="限制进程"></a>限制进程</h5><blockquote>
<p>Syntax: worker_rlimit_nofile number;</p>
<p>Default: -</p>
<p>Context: main</p>
</blockquote>
<p>限制一个 worker 进程最大能打开的文件句柄数。</p>
<h5 id="活动连接数查看"><a href="#活动连接数查看" class="headerlink" title="活动连接数查看"></a>活动连接数查看</h5><ul>
<li><code>ss -n | grep ESTAB | wc -l</code></li>
<li></li>
</ul>
<h5 id="Tcp-Fast-Open-TFO"><a href="#Tcp-Fast-Open-TFO" class="headerlink" title="Tcp Fast Open - TFO"></a>Tcp Fast Open - TFO</h5><p><img data-src="7c15ca34/image-20201230172342579.png" alt="image-20201230172342579"></p>
<p><code>net.ipv4_tcp_fastopen</code> 需 Client、Server 两端均支持 TFO。</p>
<ul>
<li>0：关闭</li>
<li>1：作为客户端时可以使用TFO</li>
<li>2：作为服务端时可以使用TFO</li>
<li>3：无论作为客户端还是服务端，都可以使用TFO</li>
</ul>
<blockquote>
<p>Syntax: listen address[:port] [fastopen=number];</p>
<p>Default: listen *:80 | *:8000;</p>
<p>Context: server</p>
</blockquote>
<p><code>fastopen=number</code> 为防止带数据的 SYN 攻击，限制最大长度，指定 TFO 连接队列的最大长度。</p>
<h4 id="worker-进程最大连接数量"><a href="#worker-进程最大连接数量" class="headerlink" title="worker 进程最大连接数量"></a>worker 进程最大连接数量</h4><p>包括 Nginx 与上游、下游间的连接。</p>
<blockquote>
<p>Syntax: worker_connections numbers;</p>
<p>Default: worker_connections 512;</p>
<p>Context: events</p>
</blockquote>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://www.cnblogs.com/lyq863987322/p/8424253.html#_label7_11">https://www.cnblogs.com/lyq863987322/p/8424253.html#_label7_11</a></li>
<li><a href="https://imququ.com/post/my-nginx-conf-for-wpo.html">https://imququ.com/post/my-nginx-conf-for-wpo.html</a></li>
<li><a href="https://mp.weixin.qq.com/s/gsoESy5viCgX0wXqUi4QPw">漫画：一台 Linux 服务器最多能支撑多少个 TCP 连接</a></li>
<li><a href="https://wiki.swoole.com/#/other/sysctl">swoole - 内核参数调整</a></li>
</ul>
]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx+GeoIP拦截国外请求</title>
    <url>/posts/nginx/fc312eb7.html</url>
    <content><![CDATA[<h1 id="Nginx-GeoIP拦截国外请求"><a href="#Nginx-GeoIP拦截国外请求" class="headerlink" title="Nginx+GeoIP拦截国外请求"></a>Nginx+GeoIP拦截国外请求</h1><a id="more"></a>

<h2 id="下载-GeoIP-bat-文件"><a href="#下载-GeoIP-bat-文件" class="headerlink" title="下载 GeoIP bat 文件"></a>下载 GeoIP bat 文件</h2><p><a href="https://www.miyuru.lk/geoiplegacy">https://www.miyuru.lk/geoiplegacy</a></p>
<ul>
<li>Country</li>
<li>City</li>
</ul>
<h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><h4 id="1-安装-GeoIP-libarary"><a href="#1-安装-GeoIP-libarary" class="headerlink" title="1. 安装 GeoIP libarary"></a>1. 安装 GeoIP libarary</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ apt-cache search geoip</span><br><span class="line">...</span><br><span class="line">libgeoip-dev - Development files <span class="keyword">for</span> the GeoIP library</span><br><span class="line">...</span><br><span class="line">$ apt-get install libgeoip-dev</span><br></pre></td></tr></tbody></table></figure>

<h4 id="2-编译-amp-安装-nginx"><a href="#2-编译-amp-安装-nginx" class="headerlink" title="2. 编译&amp;安装 nginx"></a>2. 编译&amp;安装 nginx</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /data/nginx-1.20.1</span><br><span class="line">$ ./configure --user=apache --group=apache --prefix=/data/nginx2 --with-http_ssl_module --with-http_gzip_static_module --with-http_gunzip_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_geoip_module</span><br><span class="line">$ make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>

<h4 id="3-下载-GeoIP-dat-文件"><a href="#3-下载-GeoIP-dat-文件" class="headerlink" title="3. 下载 GeoIP dat 文件"></a>3. 下载 GeoIP dat 文件</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /data/nginx2</span><br><span class="line">$ wget --no-check-certificate -c https://dl.miyuru.lk/geoip/maxmind/city/maxmind.dat.gz</span><br><span class="line">$ gzip -d maxmind.dat.gz</span><br><span class="line">$ mv maxmind.dat maxmind-city.dat</span><br><span class="line">$ wget --no-check-certificate -c https://dl.miyuru.lk/geoip/maxmind/country/maxmind.dat.gz</span><br><span class="line">$ gzip -d maxmind.dat.gz</span><br><span class="line">$ mv maxmind.dat maxmind-country.dat</span><br></pre></td></tr></tbody></table></figure>

<h4 id="4-修改-nginx-配置"><a href="#4-修改-nginx-配置" class="headerlink" title="4. 修改 nginx 配置"></a>4. 修改 nginx 配置</h4><figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="section">http</span> {</span><br><span class="line">    <span class="attribute">geoip_country</span> /data/nginx2/maxmind-country.dat;</span><br><span class="line">    <span class="attribute">geoip_city</span> /data/nginx2/maxmind-city.dat;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>" "<span class="variable">$geoip_country_code</span>" "<span class="variable">$geoip_country_code3</span>" "<span class="variable">$geoip_country_name</span>" "<span class="variable">$geoip_city_country_code</span>" "<span class="variable">$geoip_city_country_code3</span>" "<span class="variable">$geoip_city_country_name</span>"'</span></span><br><span class="line">                      <span class="string">'- "<span class="variable">$geoip_region</span>" "<span class="variable">$geoip_city</span>" "<span class="variable">$geoip_postal_code</span>" "<span class="variable">$geoip_city_continent_code</span>" "<span class="variable">$geoip_latitude</span>" "<span class="variable">$geoip_longitude</span>"'</span>;</span><br><span class="line">  	...</span><br><span class="line">	 <span class="section">server</span> {</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">40000</span>;</span><br><span class="line">        <span class="attribute">location</span> / {</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">            <span class="attribute">if</span> ( <span class="variable">$geoip_country_code</span> != <span class="string">'CN'</span>) {</span><br><span class="line">                <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">                <span class="comment"># return 502 "非中国地区，禁止访问~";</span></span><br><span class="line">                <span class="comment"># deny all;</span></span><br><span class="line">            }</span><br><span class="line">      </span><br><span class="line">					 	<span class="comment"># 反向代理</span></span><br><span class="line">           	<span class="attribute">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class="line">        }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h4 id="5-重新加载nginx配置文件"><a href="#5-重新加载nginx配置文件" class="headerlink" title="5. 重新加载nginx配置文件"></a>5. 重新加载nginx配置文件</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ /data/nginx2/sbin/nginx -s reload</span><br></pre></td></tr></tbody></table></figure>



<h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><ul>
<li>下载 geoip2 库：<a href="https://github.com/Dreamacro/maxmind-geoip">https://github.com/Dreamacro/maxmind-geoip</a></li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://www.ywbj.cc/?p=787">https://www.ywbj.cc/?p=787</a></li>
<li><a href="https://wxnacy.com/2018/04/01/nginx-geoip/">https://wxnacy.com/2018/04/01/nginx-geoip/</a></li>
</ul>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx动态管理upstream</title>
    <url>/posts/Nginx/be99a20a.html</url>
    <content><![CDATA[<p>Nginx动态管理upstream</p>
<hr>
<a id="more"></a>

<h4 id="编译-nginx-ngx-dynamic-upstream"><a href="#编译-nginx-ngx-dynamic-upstream" class="headerlink" title="编译 nginx + ngx_dynamic_upstream"></a>编译 nginx + ngx_dynamic_upstream</h4><p><a href="https://github.com/cubicdaiya/ngx_dynamic_upstream">https://github.com/cubicdaiya/ngx_dynamic_upstream</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">curl -fSL https://github.com/cubicdaiya/ngx_dynamic_upstream/archive/refs/tags/v0.1.6.tar.gz -o ngx_dynamic_upstream.tar.gz</span><br><span class="line">curl -fSL http://nginx.org/download/nginx-1.22.0.tar.gz -o nginx.tar.gz</span><br><span class="line">tar zxf nginx.tar.gz</span><br><span class="line">tar zxf ngx_dynamic_upstream.tar.gz</span><br><span class="line"></span><br><span class="line">yum install -y pcre2-dev openssl-devel</span><br><span class="line"><span class="built_in">cd</span> nginx-1.22.0</span><br><span class="line">./configure \</span><br><span class="line">    --prefix=/data/nginx \</span><br><span class="line">    --user=apache \</span><br><span class="line">    --group=apache \</span><br><span class="line">    --with-http_realip_module \</span><br><span class="line">    --with-http_addition_module \</span><br><span class="line">    --with-http_sub_module \</span><br><span class="line">    --with-http_gunzip_module \</span><br><span class="line">    --with-http_gzip_static_module \</span><br><span class="line">    --with-threads \</span><br><span class="line">    --with-stream \</span><br><span class="line">    --with-stream_realip_module \</span><br><span class="line">    --with-compat \</span><br><span class="line">    --with-file-aio \</span><br><span class="line">    --with-http_v2_module \</span><br><span class="line">    --add-module=/root/ngx_dynamic_upstream-0.1.6</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">./configure \</span><br><span class="line">    --prefix=/data/nginx \</span><br><span class="line">    --user=apache \</span><br><span class="line">    --group=apache \</span><br><span class="line">    --with-http_realip_module \</span><br><span class="line">    --with-http_addition_module \</span><br><span class="line">    --with-http_sub_module \</span><br><span class="line">    --with-http_gunzip_module \</span><br><span class="line">    --with-http_gzip_static_module \</span><br><span class="line">    --with-threads \</span><br><span class="line">    --with-stream \</span><br><span class="line">    --with-stream_realip_module \</span><br><span class="line">    --with-compat \</span><br><span class="line">    --with-file-aio \</span><br><span class="line">    --with-openssl=/usr \</span><br><span class="line">    --with-http_v2_module \</span><br><span class="line">    --add-module=/root/ngx_dynamic_upstream-0.1.6</span><br></pre></td></tr></tbody></table></figure>



<h5 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[root@jre5167 nginx-1.22.0]<span class="comment"># make</span></span><br><span class="line">make -f objs/Makefile</span><br><span class="line">make[1]: 进入目录“/root/nginx-1.22.0”</span><br><span class="line"><span class="built_in">cd</span> /usr/lib64 \</span><br><span class="line">&amp;&amp; <span class="keyword">if</span> [ -f Makefile ]; <span class="keyword">then</span> make clean; <span class="keyword">fi</span> \</span><br><span class="line">&amp;&amp; ./config --prefix=/usr/lib64/.openssl no-shared no-threads  \</span><br><span class="line">&amp;&amp; make \</span><br><span class="line">&amp;&amp; make install_sw LIBDIR=lib</span><br><span class="line">/bin/sh:行2: ./config: 没有那个文件或目录</span><br><span class="line">make[1]: *** [/usr/lib64/.openssl/include/openssl/ssl.h] 错误 127</span><br><span class="line">make[1]: 离开目录“/root/nginx-1.22.0”</span><br><span class="line">make: *** [build] 错误 2</span><br></pre></td></tr></tbody></table></figure>

<p>打开nginx源文件下的 <code>/root/nginx-1.22.0auto/lib/openssl/conf</code> 文件：</p>
<p>找到这么一段代码：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">CORE_INCS="$CORE_INCS $OPENSSL/.openssl/include"</span><br><span class="line">CORE_DEPS="$CORE_DEPS $OPENSSL/.openssl/include/openssl/ssl.h"</span><br><span class="line">CORE_LIBS="$CORE_LIBS $OPENSSL/.openssl/lib/libssl.a"</span><br><span class="line">CORE_LIBS="$CORE_LIBS $OPENSSL/.openssl/lib/libcrypto.a"</span><br><span class="line">CORE_LIBS="$CORE_LIBS $NGX_LIBDL"</span><br></pre></td></tr></tbody></table></figure>


<p>修改成以下代码：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">CORE_INCS=<span class="string">"<span class="variable">$CORE_INCS</span> <span class="variable">$OPENSSL</span>/.openssl/include"</span></span><br><span class="line">CORE_DEPS=<span class="string">"<span class="variable">$CORE_DEPS</span> <span class="variable">$OPENSSL</span>/include/openssl/ssl.h"</span></span><br><span class="line">CORE_LIBS=<span class="string">"<span class="variable">$CORE_LIBS</span> <span class="variable">$OPENSSL</span>/lib/libssl.a"</span></span><br><span class="line">CORE_LIBS=<span class="string">"<span class="variable">$CORE_LIBS</span> <span class="variable">$OPENSSL</span>/lib/libcrypto.a"</span></span><br><span class="line">CORE_LIBS=<span class="string">"<span class="variable">$CORE_LIBS</span> <span class="variable">$NGX_LIBDL</span>"</span></span><br></pre></td></tr></tbody></table></figure>

<p>然后再进行Nginx的编译安装即可</p>
<h4 id="openssl-源码编译安装"><a href="#openssl-源码编译安装" class="headerlink" title="openssl 源码编译安装"></a>openssl 源码编译安装</h4><ul>
<li>官网下载：wget <a href="https://www.openssl.org/source/openssl-1.1.1q.tar.gz">https://www.openssl.org/source/openssl-1.1.1q.tar.gz</a></li>
<li>腾讯云提供的镜像：<a href="https://mirrors.cloud.tencent.com/openssl/source/openssl-1.1.1q.tar.gz">https://mirrors.cloud.tencent.com/openssl/source/openssl-1.1.1q.tar.gz</a></li>
</ul>
<h4 id="nginx-配置文件"><a href="#nginx-配置文件" class="headerlink" title="nginx 配置文件"></a>nginx 配置文件</h4><figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">load_module</span> /usr/lib/nginx/modules/ngx_dynamic_upstream_module.so;</span><br><span class="line"></span><br><span class="line"><span class="section">events</span> {</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> {</span><br><span class="line">  <span class="attribute">upstream</span> news-service {</span><br><span class="line">      <span class="attribute">zone</span> zone_for_backends <span class="number">1m</span>;</span><br><span class="line">      <span class="attribute">server</span> <span class="number">127.0.0.1:8081</span>;</span><br><span class="line">      <span class="attribute">server</span> <span class="number">127.0.0.1:8082</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="section">server</span> {</span><br><span class="line">		<span class="attribute">listen</span> <span class="number">8082</span>;</span><br><span class="line">		<span class="attribute">return</span> <span class="number">200</span> <span class="string">"hi! I'm 8082\n"</span>;</span><br><span class="line">	}</span><br><span class="line">  <span class="section">server</span> {</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">8081</span>;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">200</span> <span class="string">"hi! I'm 8081\n"</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="section">server</span> {</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line">    <span class="attribute">location</span> /dynamic {</span><br><span class="line">      <span class="attribute">allow</span> <span class="number">127.0.0.1</span>;</span><br><span class="line">      <span class="attribute">deny</span> all;</span><br><span class="line">      dynamic_upstream;</span><br><span class="line">    }</span><br><span class="line">    <span class="attribute">location</span> / {</span><br><span class="line">      <span class="attribute">proxy_pass</span> http://news-service;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">curl 127.0.0.1</span><br><span class="line">curl 127.0.0.1/dynamic?upstream=zone_for_backends</span><br><span class="line">curl <span class="string">"127.0.0.1/dynamic?upstream=zone_for_backends&amp;verbose="</span></span><br><span class="line"></span><br><span class="line">curl <span class="string">"http://127.0.0.1/dynamic?upstream=zone_for_backends&amp;server=127.0.0.1:8081&amp;down="</span></span><br><span class="line">curl <span class="string">"http://127.0.0.1/dynamic?upstream=zone_for_backends&amp;server=127.0.0.1:8081&amp;up="</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">curl <span class="string">"http://127.0.0.1/dynamic?upstream=backend-service&amp;server=:8080&amp;down="</span></span><br><span class="line">curl <span class="string">"127.0.0.1/dynamic?upstream=backend-service&amp;verbose="</span></span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">curl "http://127.0.0.1:8080/dynamic?upstream=news-service&amp;server=news-service-1&amp;down="</span><br><span class="line"></span><br><span class="line"># nginx 日志</span><br><span class="line">172.31.20.1 - - [02/Sep/2022:14:00:16 +0800] "GET /dynamic?upstream=news-service&amp;server=news-service-1&amp;down= HTTP/1.1" 400 157 "-" "curl/7.29.0" "-"</span><br><span class="line">2022/09/02 14:00:16 [error] 9#9: *3 server news-service-1 is not found. ngx_dynamic_upstream_op_update_param:428, client: 172.31.20.1, server: localhost, request: "GET /dynamic?upstream=news-service&amp;server=news-service-1&amp;down= HTTP/1.1", host: "127.0.0.1:8080"</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">docker inspect -f <span class="string">'{{(index .NetworkSettings.Networks "news_default").IPAddress}}'</span> news-service-1</span><br><span class="line">172.31.20.6</span><br><span class="line">docker inspect -f <span class="string">'{{(index .NetworkSettings.Networks "news_default").IPAddress}}'</span> news-service-2</span><br><span class="line">172.31.20.5</span><br><span class="line"></span><br><span class="line"><span class="comment"># upstream服务状态</span></span><br><span class="line">curl <span class="string">"127.0.0.1:8080/dynamic?upstream=news-service&amp;verbose="</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># news-service-1</span></span><br><span class="line">curl <span class="string">"127.0.0.1:8080/dynamic?upstream=news-service&amp;server=172.31.20.5:80&amp;up="</span></span><br><span class="line">curl <span class="string">"127.0.0.1:8080/dynamic?upstream=news-service&amp;server=172.31.20.5:80&amp;down="</span></span><br></pre></td></tr></tbody></table></figure>





<h4 id="nginx-的docker-hub-官方维护仓库"><a href="#nginx-的docker-hub-官方维护仓库" class="headerlink" title="nginx 的docker hub 官方维护仓库"></a>nginx 的docker hub 官方维护仓库</h4><p><a href="https://github.com/nginxinc/docker-nginx">https://github.com/nginxinc/docker-nginx</a></p>
]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx日志</title>
    <url>/posts/Nginx/4d35cb45.html</url>
    <content><![CDATA[<p>Nginx日志级别分析</p>
<a id="more"></a>



<h3 id="禁用日志记录"><a href="#禁用日志记录" class="headerlink" title="禁用日志记录"></a>禁用日志记录</h3><p>下面两个指令配置时候的适用范围：main, http, mail, stream, server, location</p>
<h4 id="禁用访问日志-access-log"><a href="#禁用访问日志-access-log" class="headerlink" title="禁用访问日志 access_log"></a>禁用访问日志 access_log</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">access_log off;</span><br></pre></td></tr></tbody></table></figure>

<h4 id="禁用错误日志-error-log"><a href="#禁用错误日志-error-log" class="headerlink" title="禁用错误日志 error_log"></a>禁用错误日志 error_log</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">error_log /dev/null;</span><br></pre></td></tr></tbody></table></figure>



<h4 id="日志级别分析"><a href="#日志级别分析" class="headerlink" title="日志级别分析"></a>日志级别分析</h4><p>默认有效的第一级别日志是”stderr”，”emerg”，”alert”，”crit”，”error”，”warn”，”notice”，”info”，”debug”。</p>
<p>而Ngx_log.h内列出的其他debug第二级别日志：”debug_core”，”debug_alloc”，”debug_mutex”，”debug_event”，”debug_http”，”debug_mail”，”debug_mysql”等则需要在配置Nginx时启动调试日志功能才能使用，并且用户可以通过修改Ngx_log.h及Ngx_log.c源码来更新debug第二级别。<br><a href="http://100continue.iteye.com/blog/1821893">http://100continue.iteye.com/blog/1821893</a></p>
]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>http升级https</title>
    <url>/posts/HTTPS/41d04e92.html</url>
    <content><![CDATA[<p>在大数据时代，http被劫持已经成为常态了，近期公司决定对全站做https升级。</p>
<p>要实现https升级需要以下步骤：</p>
<ol>
<li>将http请求强制转换成https。</li>
<li>受同源策略的影响，源网页中所有的资源也需要改成https请求，不然http资源文件将无法被加载。</li>
</ol>
<p>第一步骤实现起来简单，做下强制跳转即可，但要想实现第二步骤确很麻烦，业务中有很多老项目。</p>
<p>为了实现第二步骤，采用的方案是源代码中继续使用http，通过在服务端响应 <code>Upgrade-Insecure-Requests: 1</code> 头，</p>
<ol>
<li>服务端设置响应</li>
</ol>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">header(<span class="string">"Content-Security-Policy: upgrade-insecure-requests"</span>);</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="comment">// header('Upgrade-Insecure-Requests: 1');</span></span><br></pre></td></tr></tbody></table></figure>

<ol start="2">
<li>HTML中配置</li>
</ol>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Security-Policy"</span> <span class="attr">content</span>=<span class="string">"upgrade-insecure-requests"</span> /&gt;</span></span><br></pre></td></tr></tbody></table></figure>





<h4 id="1-添加-Content-Security-Policy-后，导致页面中的-Ajax-请求丢失-X-Requested-With-XMLHttpRequest-头信息："><a href="#1-添加-Content-Security-Policy-后，导致页面中的-Ajax-请求丢失-X-Requested-With-XMLHttpRequest-头信息：" class="headerlink" title="1. 添加 Content-Security-Policy 后，导致页面中的 Ajax 请求丢失 X-Requested-With: XMLHttpRequest 头信息："></a>1. 添加 <code>Content-Security-Policy</code> 后，导致页面中的 Ajax 请求丢失 <code>X-Requested-With: XMLHttpRequest</code> 头信息：</h4><blockquote>
<p>注意：此问题只出现在服务端做 isAjax 请求的处理逻辑中，如下面基于 Yaf 框架示例的代码。</p>
</blockquote>
<ul>
<li><p>PHP 代码：</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> <span class="keyword">extends</span> \<span class="title">Yaf</span>\<span class="title">Controller_Abstract</span> </span>{</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">indexAction</span>(<span class="params"></span>) </span>{</span><br><span class="line">    $name = <span class="string">'codezm'</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// isAjax</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;getRequest()-&gt;isXmlHttpRequest()){</span><br><span class="line">      $name = <span class="keyword">$this</span>-&gt;getRequest()-&gt;getPost(<span class="string">'name'</span>, <span class="string">'nothing'</span>);</span><br><span class="line">      <span class="keyword">echo</span> $name;</span><br><span class="line">      <span class="keyword">exit</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">		header(<span class="string">"Content-Security-Policy: upgrade-insecure-requests"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">$this</span>-&gt;_view-&gt;assign(<span class="string">'name'</span>, $name);</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>HTML 代码：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests"&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    {{ name }}</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="javascript">    $.ajax({</span></span><br><span class="line"><span class="javascript">        type: <span class="string">"POST"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="comment">// headers: {'X-Requested-With': 'XMLHttpRequest'},</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// crossDomain: false,</span></span></span><br><span class="line"><span class="javascript">        url: <span class="string">"https://yaf.codezm.com:8081/demo/index"</span>,</span></span><br><span class="line"><span class="handlebars"><span class="xml">        data: {'name': "</span><span class="template-variable">{{ <span class="name">name</span> }}</span><span class="xml">"},</span></span></span><br><span class="line"><span class="javascript">        dataType: <span class="string">"json"</span></span></span><br><span class="line"><span class="javascript">    }).done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>{</span></span><br><span class="line">    </span><br><span class="line"><span class="javascript">    }).fail(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span></span><br><span class="line">    </span><br><span class="line">    })</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>



</li>
</ul>
<p>在浏览器中访问 <code>https://yaf.codezm.com:8081/demo/index</code> 地址：</p>
<ol>
<li>将HTML代码中ajax的url值改成 <code>https://yaf.codezm.com:8081/demo/index</code> 时，<code>Requset Headers</code> 中携带了 <code>X-Requested-With: XMLHttpRequest</code> 头。</li>
</ol>
<p><img data-src="41d04e92/image-20210831152311079.png" alt="image-20210831152311079"></p>
<ol start="2">
<li>HTML中添加CSP <code>&lt;meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests"&gt;</code>，将ajax的url值改成 <code>http://yaf.codezm.com:8081/demo/index</code> 时，<code>Requset Headers</code> 中并未携带 <code>X-Requested-With: XMLHttpRequest</code> 头，服务端也就没有办法确定是否是 ajax 请求了。</li>
</ol>
<p><img data-src="41d04e92/image-20210831152731652.png" alt="image-20210831152731652"></p>
<p>分析 Ajax ：</p>
<p><code>crossDomain</code> 的值是 <code>false</code> 时，才会增加 <code>X-Requested-With: XMLHttpRequest</code> 头信息。</p>
<p><img data-src="41d04e92/image-20210831161820012.png" alt="image-20210831161820012"></p>
<p>那为什么 crossDomain 为 true 了呢？<a href="https://github.com/jquery/jquery/blob/main/src/ajax.js#L555">https://github.com/jquery/jquery/blob/main/src/ajax.js#L555</a></p>
<p><img data-src="41d04e92/image-20210831161728378.png" alt="image-20210831161728378"></p>
<p>解决方案：</p>
<ol>
<li>手动添加 <code>X-Requested-With: XMLHttpRequest</code> 头信息。</li>
<li>配置 <code>crossDomain: false</code> ，使其同源。</li>
</ol>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line">$.ajax({</span><br><span class="line">    type: <span class="string">"POST"</span>,</span><br><span class="line">    <span class="comment">//headers: {'X-Requested-With': 'XMLHttpRequest'},</span></span><br><span class="line">    crossDomain: <span class="literal">false</span>,</span><br><span class="line">    url: <span class="string">"http://yaf.codezm.com:8081/demo/index"</span>,</span><br><span class="line">    data: {<span class="string">'name'</span>: <span class="string">"{{ userName }}"</span>},</span><br><span class="line">    dataType: <span class="string">"json"</span></span><br><span class="line">}).done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>{</span><br><span class="line"></span><br><span class="line">}).fail(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line"></span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure>



<p><code>ThinkPHP</code> 中的 <code>isAjax</code> 代码：</p>
<p><img data-src="41d04e92/image-20210831143210228.png" alt="image-20210831143210228"></p>
<h4 id="2-Referer-丢失。"><a href="#2-Referer-丢失。" class="headerlink" title="2. Referer 丢失。"></a>2. Referer 丢失。</h4><p>因为 <code>upgrade-insecure-requests</code> 会将站点的所有非导航不安全 URL (HTTP) 自动升级（第一方 和第三方请求）。</p>
<blockquote>
<p>非导航不安全 URL是指：<code>&lt;a&gt;</code> 标签不会升级，即还是原来的 <code>&lt;a href="http://not-example.com/"&gt;Home&lt;/a&gt;</code>。</p>
</blockquote>
<ul>
<li>no-referrer</li>
<li>no-referrer-when-downgrade</li>
<li>same-origin</li>
<li>origin</li>
<li>strict-origin</li>
<li>strict-origin-when-cross-origin</li>
<li>unsafe-url</li>
</ul>
<blockquote>
<p> 自 Chrome 85 版本之后，已将原来的 referer策略（policy）：由 <code>no-referrer-when-downgrade</code>，变更为 <code>strict-origin-when-cross-origin</code>。</p>
</blockquote>
<h5 id="strict-origin-when-cross-origin"><a href="#strict-origin-when-cross-origin" class="headerlink" title="strict-origin-when-cross-origin"></a><code>strict-origin-when-cross-origin</code></h5><p>同源时，发送完整的 <code>Referer</code> 字段。跨域时，https跳转https 仅发送源信息（协议+域名+端口）、https跳http不发送任何referer数据。http跳转跨域仅发送源信息。</p>
<blockquote>
<p>同源：协议+域名+端口 都相同。</p>
<p>跨域：协议、域名、端口 任一不同。</p>
</blockquote>
<table>
<thead>
<tr>
<th>页面地址</th>
<th>跳转地址</th>
<th>referer值</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://yaf.codezm.com/demo/index">https://yaf.codezm.com/demo/index</a></td>
<td><a href="https://yaf.codezm.com/demo/r">https://yaf.codezm.com/demo/r</a></td>
<td><a href="https://yaf.codezm.com/demo/r">https://yaf.codezm.com/demo/r</a></td>
</tr>
<tr>
<td><a href="https://yaf.codezm.com/demo/index">https://yaf.codezm.com/demo/index</a></td>
<td><a href="http://yaf.codezm.com/demo/r">http://yaf.codezm.com/demo/r</a></td>
<td></td>
</tr>
<tr>
<td><a href="https://yaf.codezm.com/demo/index">https://yaf.codezm.com/demo/index</a></td>
<td><a href="https://api.codezm.com/">https://api.codezm.com/</a></td>
<td><a href="https://yaf.codezm.com/">https://yaf.codezm.com/</a></td>
</tr>
<tr>
<td><a href="https://yaf.codezm.com/demo/index">https://yaf.codezm.com/demo/index</a></td>
<td><a href="http://api.codezm.com/">http://api.codezm.com/</a></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="http://yaf.codezm.com/demo/index">http://yaf.codezm.com/demo/index</a></td>
<td><a href="http://yaf.codezm.com/demo/r">http://yaf.codezm.com/demo/r</a></td>
<td><a href="http://yaf.codezm.com/demo/index">http://yaf.codezm.com/demo/index</a></td>
</tr>
<tr>
<td><a href="http://yaf.codezm.com/demo/index">http://yaf.codezm.com/demo/index</a></td>
<td><a href="https://yaf.codezm.com/demo/r">https://yaf.codezm.com/demo/r</a></td>
<td><a href="http://yaf.codezm.com/">http://yaf.codezm.com/</a></td>
</tr>
<tr>
<td><a href="http://yaf.codezm.com/demo/index">http://yaf.codezm.com/demo/index</a></td>
<td><a href="https://api.codezm.com/">https://api.codezm.com/</a></td>
<td><a href="http://yaf.codezm.com/">http://yaf.codezm.com/</a></td>
</tr>
<tr>
<td><a href="http://yaf.codezm.com/demo/index">http://yaf.codezm.com/demo/index</a></td>
<td><a href="http://api.codezm.com/">http://api.codezm.com/</a></td>
<td><a href="http://yaf.codezm.com/">http://yaf.codezm.com/</a></td>
</tr>
</tbody></table>
<h5 id="no-referrer-when-downgrade"><a href="#no-referrer-when-downgrade" class="headerlink" title="no-referrer-when-downgrade"></a><code>no-referrer-when-downgrade</code></h5><p>从 HTTPS 网址链接到 HTTP 网址，不发送<code>Referer</code>字段，其他情况发送。</p>
<table>
<thead>
<tr>
<th>页面地址</th>
<th>跳转地址</th>
<th>referer值</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://yaf.codezm.com/demo/index?id=1#10">https://yaf.codezm.com/demo/index?id=1#10</a></td>
<td><a href="https://yaf.codezm.com/demo/r">https://yaf.codezm.com/demo/r</a></td>
<td><a href="https://yaf.codezm.com/demo/index?id=1">https://yaf.codezm.com/demo/index?id=1</a></td>
</tr>
<tr>
<td><a href="https://yaf.codezm.com/demo/index?id=1#10">https://yaf.codezm.com/demo/index?id=1#10</a></td>
<td><a href="http://yaf.codezm.com/demo/r">http://yaf.codezm.com/demo/r</a></td>
<td></td>
</tr>
<tr>
<td><a href="https://yaf.codezm.com/demo/index?id=1#10">https://yaf.codezm.com/demo/index?id=1#10</a></td>
<td><a href="https://api.codezm.com/">https://api.codezm.com/</a></td>
<td><a href="https://yaf.codezm.com/demo/index?id=1">https://yaf.codezm.com/demo/index?id=1</a></td>
</tr>
<tr>
<td><a href="https://yaf.codezm.com/demo/index?id=1#10">https://yaf.codezm.com/demo/index?id=1#10</a></td>
<td><a href="http://api.codezm.com/">http://api.codezm.com/</a></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="http://yaf.codezm.com/demo/index?id=1#10">http://yaf.codezm.com/demo/index?id=1#10</a></td>
<td><a href="http://yaf.codezm.com/demo/r">http://yaf.codezm.com/demo/r</a></td>
<td><a href="http://yaf.codezm.com/demo/index?id=1">http://yaf.codezm.com/demo/index?id=1</a></td>
</tr>
<tr>
<td><a href="http://yaf.codezm.com/demo/index?id=1#10">http://yaf.codezm.com/demo/index?id=1#10</a></td>
<td><a href="https://yaf.codezm.com/demo/r">https://yaf.codezm.com/demo/r</a></td>
<td><a href="http://yaf.codezm.com/demo/index?id=1">http://yaf.codezm.com/demo/index?id=1</a></td>
</tr>
<tr>
<td><a href="http://yaf.codezm.com/demo/index?id=1#10">http://yaf.codezm.com/demo/index?id=1#10</a></td>
<td><a href="https://api.codezm.com/">https://api.codezm.com/</a></td>
<td><a href="http://yaf.codezm.com/demo/index?id=1">http://yaf.codezm.com/demo/index?id=1</a></td>
</tr>
<tr>
<td><a href="http://yaf.codezm.com/demo/index?id=1#10">http://yaf.codezm.com/demo/index?id=1#10</a></td>
<td><a href="http://api.codezm.com/">http://api.codezm.com/</a></td>
<td><a href="http://yaf.codezm.com/demo/index?id=1">http://yaf.codezm.com/demo/index?id=1</a></td>
</tr>
</tbody></table>
<h4 id="升级https，Yaf-框架类调整："><a href="#升级https，Yaf-框架类调整：" class="headerlink" title="升级https，Yaf 框架类调整："></a>升级https，Yaf 框架类调整：</h4><h5 id="1-调整页面-url-渲染"><a href="#1-调整页面-url-渲染" class="headerlink" title="1. 调整页面 url 渲染"></a>1. 调整页面 url 渲染</h5><blockquote>
<p>示例：<code>&lt;a href="{{ url('members/index') }}"&gt;用户列表&lt;/a&gt;</code></p>
</blockquote>
<p>文件路径：webservice/application/plugins/Twig.php</p>
<p>要修改的代码：</p>
  <figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">$twig-&gt;twig-&gt;addFunction(<span class="string">"url"</span>, <span class="keyword">new</span> Twig_Function_Function(<span class="string">"Tools_help::url"</span>));</span><br></pre></td></tr></tbody></table></figure>

<p> PHP&gt;=5.4更改后：</p>
  <figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">$twig-&gt;twig-&gt;addFunction(<span class="string">"url"</span>, <span class="keyword">new</span> Twig_Function_Function(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> str_replace([<span class="string">'http:'</span>, <span class="string">'https:'</span>], <span class="string">''</span>, call_user_func_array(<span class="string">"Tools_help::url"</span>, func_get_args()));</span><br><span class="line">}));</span><br></pre></td></tr></tbody></table></figure>

<p>PHP5.3更改后:</p>
  <figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">$twig-&gt;twig-&gt;addFunction(<span class="string">"url"</span>, <span class="keyword">new</span> Twig_Function_Function(<span class="keyword">array</span>(<span class="keyword">$this</span>, <span class="string">'url'</span>)));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在当前文件中新增 url() 方法。</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">url</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> str_replace(<span class="keyword">array</span>(<span class="string">'http:'</span>, <span class="string">'https:'</span>), <span class="string">''</span>, call_user_func_array(<span class="string">"Tools_help::url"</span>, func_get_args()));</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h5 id="2-调整页面静态资源引用路径"><a href="#2-调整页面静态资源引用路径" class="headerlink" title="2. 调整页面静态资源引用路径"></a>2. 调整页面静态资源引用路径</h5><blockquote>
<p>示例：<code>&lt;link rel="stylesheet" href="{{config['application']['site']['assetsUri']}}admin/css/bootstrap.min.css" /&gt;</code></p>
</blockquote>
<p>更改配置文件：</p>
<p><code>application.site.assetsUri = 'http://yaf.codezm.com/assets/'</code> </p>
<p>调整为 <code>application.site.assetsUri = '//yaf.codezm.com/assets/'</code> </p>
<p>或者在同域名下的 <code>application.site.assetsUri = '/assets/</code>。</p>
<h4 id="升级https后注意事项："><a href="#升级https后注意事项：" class="headerlink" title="升级https后注意事项："></a>升级https后注意事项：</h4><ol>
<li><p><code>Twig::url</code> 模板渲染路径去除 <code>http:</code> 及 <code>https:</code> 协议前缀，浏览器中可通过 <code>location.protocol='https:'</code> 来获取当前URL使用的协议值。</p>
</li>
<li><p>API: 是 <code>http</code> 强制跳转 <code>https</code> 协议，则云服务（七牛云、阿里云、gitee.com）回调地址必须是 <code>https</code> 协议地址，若还保持 <code>http</code> 会造成 <code>301</code> 等响应码及错误响应数据。</p>
</li>
<li><p>微信相关业务: <code>特约商户</code> 回调地址需改成 <code>https</code> 协议，否则会报：<code>页面地址：xxx 未注册</code>。</p>
</li>
<li><p>Chrome.93.0.4577.63: http协议设置的cookie、domain为 <code>.codezm.com</code> ，然而 ajax 在跨域请求 https 协议地址时无法携带 cookie 值。若改为https协议设置cookie即可。</p>
<blockquote>
<p>Set-Cookie: API_PHPSESSID=613ac2738d9ee2.02197130; expires=Thu, 06-Jun-2024 02:26:59 GMT; path=/; domain=.codezm.com</p>
</blockquote>
</li>
</ol>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://juejin.cn/post/6844904101826789389">混合内容 &amp; https 升级攻略</a></li>
</ul>
]]></content>
      <categories>
        <category>HTTPS</category>
      </categories>
      <tags>
        <tag>HTTPS</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx-https优化</title>
    <url>/posts/Nginx/7c15ca34.html</url>
    <content><![CDATA[<p>Nginx-https优化</p>
<a id="more"></a>

<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 不同 worker 绑定到不同核上，提高 CPU 缓存命中率，auto 根据 worker 数量自动绑定 CPU。</span></span><br><span class="line"><span class="attribute">worker_cpu_affinity</span> auto;</span><br><span class="line"></span><br><span class="line"><span class="attribute">sendfile</span>           <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">tcp_nopush</span>         <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">tcp_nodelay</span>        <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">keepalive_timeout</span>  <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">ssl_session_tickets</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">ssl_session_ticket_key</span> ticket.key;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有 worker 进程之间共享的缓存大小，1兆大约可以存储 4000 个会话，此处可存储 40000 个会话。</span></span><br><span class="line"><span class="attribute">ssl_session_cache</span>   shared:SSL:<span class="number">10m</span>;</span><br><span class="line"><span class="comment"># 会话超时时间</span></span><br><span class="line"><span class="attribute">ssl_session_timeout</span> <span class="number">10m</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">listen</span> <span class="number">80</span> reuseport backlog=<span class="number">8192</span>; <span class="comment"># reuseport linux &gt; 3.9 CentOS &gt;= 7.0</span></span><br></pre></td></tr></tbody></table></figure>



<p>用于加密和解密TLS会话票据的密钥设置，生成 ticket 文件，必须含有80或48个字节的随机数据。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">openssl rand 80&gt; ticket.key</span><br></pre></td></tr></tbody></table></figure>



<h4 id="certbot-自动化脚本生成-Let’s-Encrypt-免费证书。"><a href="#certbot-自动化脚本生成-Let’s-Encrypt-免费证书。" class="headerlink" title="certbot 自动化脚本生成 Let’s Encrypt 免费证书。"></a>certbot 自动化脚本生成 Let’s Encrypt 免费证书。</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">yum install python2-certbot-nginx</span><br><span class="line"></span><br><span class="line">certbot --nginx --nginx-server-root=/usr/<span class="built_in">local</span>/nginx/conf/ -d test.codezm.com</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>域名 <code>test.codezm.com</code> 必须可访问。CA机构才能颁发证书。<a href="https://certbot.eff.org/docs/install.html">https://certbot.eff.org/docs/install.html</a></p>
</blockquote>
<h4 id="Tcp-优化"><a href="#Tcp-优化" class="headerlink" title="Tcp 优化"></a>Tcp 优化</h4><h5 id="SYN-RCVD-状态"><a href="#SYN-RCVD-状态" class="headerlink" title="SYN_RCVD 状态"></a>SYN_RCVD 状态</h5><ul>
<li>SYN - <code>SYN_RECEIVED QUEUE</code><ul>
<li><code>net.ipv4.tcp_max_syn_backlog=262144</code> 接收 <code>SYN</code> 最大数量，半链接个数。<code>SYN</code><ul>
<li>查看：<code>cat /proc/sys/net/ipv4/tcp_max_syn_backlog</code></li>
</ul>
</li>
<li><code>net.ipv4.tcp_synack_retries</code> 被动建立连接时，发送 SYN/ACK 的重试次数。<code>SYN+ACK</code><ul>
<li>查看：<code>cat /proc/sys/net/ipv4/tcp_synack_retries</code></li>
</ul>
</li>
</ul>
</li>
<li><code>ACCEPT</code> - <code>ESTABLISHED QUEUE</code><ul>
<li><code>net.core.somaxconn</code> 系统级最大 backlog 队列长度。</li>
<li>nginx 端口限制 backlog 队列长度<ul>
<li><code>listen 80 backlog=8192;</code></li>
</ul>
</li>
<li>如何查看 Accept queue 溢出？<ul>
<li><code>netstat -s | grep LISTEN</code> ，返回 <code>SYNS to LISTEN sockets ignored</code> 时。</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>防止 <code>SYN</code> 攻击，开启 <code>net.ipv4.tcp_syncookies=1</code> ，在 SYN 队列满时，启用 cookie。</p>
<h4 id="一切皆文件：句柄数的上限"><a href="#一切皆文件：句柄数的上限" class="headerlink" title="一切皆文件：句柄数的上限"></a>一切皆文件：句柄数的上限</h4><h5 id="操作系统全局"><a href="#操作系统全局" class="headerlink" title="操作系统全局"></a>操作系统全局</h5><ul>
<li><p>fs.file-max 操作系统可使用的最大句柄数</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sysctl -a | grep file-max</span><br></pre></td></tr></tbody></table></figure>



</li>
</ul>
<pre><code>- fs.file-nr 查看当前已分配(正使用)、待重新分配、上限</code></pre>
<h5 id="限制用户"><a href="#限制用户" class="headerlink" title="限制用户"></a>限制用户</h5><ul>
<li><p>/etc/security/limits.conf</p>
<ul>
<li>root soft nofile 65535</li>
<li>root hard nofile 65535</li>
</ul>
<p>限制 <code>root</code> 用户，软、硬链接个数。</p>
<p><code>hard</code> 强制的、真实的链接，<code>soft</code> 软的限制，进程在运行时自动的修改软限制、但无法修改硬的，<code>soft</code> 一定要小于 <code>hard</code>。</p>
</li>
</ul>
<p>  <code>* - noproc 11000</code></p>
<ul>
<li><p><code>*</code> 代表针对所有用户</p>
</li>
<li><p><code>-</code> 的意思为 <code>soft</code> 和 <code>hard</code> 全部限制。</p>
</li>
<li><p>nofile 代表最大文件打开数</p>
</li>
<li><p>noproc 代表最大进程数</p>
</li>
</ul>
<h5 id="限制进程"><a href="#限制进程" class="headerlink" title="限制进程"></a>限制进程</h5><blockquote>
<p>Syntax: worker_rlimit_nofile number;</p>
<p>Default: -</p>
<p>Context: main</p>
</blockquote>
<p>限制一个 worker 进程最大能打开的文件句柄数。</p>
<h5 id="活动连接数查看"><a href="#活动连接数查看" class="headerlink" title="活动连接数查看"></a>活动连接数查看</h5><ul>
<li><code>ss -n | grep ESTAB | wc -l</code></li>
<li></li>
</ul>
<h5 id="Tcp-Fast-Open-TFO"><a href="#Tcp-Fast-Open-TFO" class="headerlink" title="Tcp Fast Open - TFO"></a>Tcp Fast Open - TFO</h5><p><img data-src="7c15ca34/image-20201230172342579.png" alt="image-20201230172342579"></p>
<p><code>net.ipv4_tcp_fastopen</code> 需 Client、Server 两端均支持 TFO。</p>
<ul>
<li>0：关闭</li>
<li>1：作为客户端时可以使用TFO</li>
<li>2：作为服务端时可以使用TFO</li>
<li>3：无论作为客户端还是服务端，都可以使用TFO</li>
</ul>
<blockquote>
<p>Syntax: listen address[:port] [fastopen=number];</p>
<p>Default: listen *:80 | *:8000;</p>
<p>Context: server</p>
</blockquote>
<p><code>fastopen=number</code> 为防止带数据的 SYN 攻击，限制最大长度，指定 TFO 连接队列的最大长度。</p>
<h4 id="worker-进程最大连接数量"><a href="#worker-进程最大连接数量" class="headerlink" title="worker 进程最大连接数量"></a>worker 进程最大连接数量</h4><p>包括 Nginx 与上游、下游间的连接。</p>
<blockquote>
<p>Syntax: worker_connections numbers;</p>
<p>Default: worker_connections 512;</p>
<p>Context: events</p>
</blockquote>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://www.cnblogs.com/lyq863987322/p/8424253.html#_label7_11">https://www.cnblogs.com/lyq863987322/p/8424253.html#_label7_11</a></li>
<li><a href="https://imququ.com/post/my-nginx-conf-for-wpo.html">https://imququ.com/post/my-nginx-conf-for-wpo.html</a></li>
<li><a href="https://mp.weixin.qq.com/s/gsoESy5viCgX0wXqUi4QPw">漫画：一台 Linux 服务器最多能支撑多少个 TCP 连接</a></li>
<li><a href="https://wiki.swoole.com/#/other/sysctl">swoole - 内核参数调整</a></li>
</ul>
]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Crontab加入Git版本控制</title>
    <url>/posts/Crontab/55111a8b.html</url>
    <content><![CDATA[<p>将 Crontab 计划任务加入到 Git 版本控制。通过 Git 来控制 Crontab 计划任务的自动启停。</p>
<a id="more"></a>



<h1 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h1><ul>
<li>将 crontab 放到 Git 后有哪些优点？<ul>
<li>可以避免线上服务器突然崩溃，crontab 无法找回。</li>
</ul>
</li>
<li>crontab 自动更新计划任务<ul>
<li>在新增 crontab 任务时，可自动部署，使计划任务即时生效。</li>
<li>弥补仅使用 Git 做备份的不足，增加计划任务入口单一，避免遗忘。</li>
<li>使计划任务可在指定服务器或多台服务器上执行。</li>
</ul>
</li>
<li>不足？ 仍然需要先在服务器上运行下计划任务脚本，在保证正常执行后，再将其添加至 <code>crontab</code> 文件。</li>
</ul>
<h1 id="项目部署流程"><a href="#项目部署流程" class="headerlink" title="项目部署流程"></a>项目部署流程</h1><ol>
<li><p>在项目的根目录下创建 <code>crontab</code> 文件。</p>
</li>
<li><p>在 <code>crontab</code> 文件中，编写 <code>crontab</code> 命令。</p>
</li>
<li><p>将 <code>crontab</code> 文件，通过 <code>git push</code> 提交。</p>
</li>
<li><p>Git webhook 自动触发 <code>jenkins</code> 构建完成代码上传。</p>
</li>
<li><p>在每台服务器上执行以下命令。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">grep <span class="string">"PROJECT_PATH"</span> /etc/environment || \</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"export PROJECT_PATH=`grep -E '\broot\b' /data/nginx/conf/nginx.conf | head -n 1 | awk '{print <span class="variable">$2</span>}' | grep -Eo '\/data\/htdocs\/[[:alpha:]]*'`"</span> &gt;&gt; /etc/environment &amp;&amp; \</span><br><span class="line">    <span class="built_in">source</span> /etc/environment; \</span><br><span class="line">crontab <span class="variable">$PROJECT_PATH</span>/crontab</span><br></pre></td></tr></tbody></table></figure>



</li>
</ol>
<h2 id="Crontab-文件内容示例"><a href="#Crontab-文件内容示例" class="headerlink" title="Crontab 文件内容示例"></a>Crontab 文件内容示例</h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"># 注意：为避免新增、更新计划任务异常，导致后续计划任务无法正常运行。请在新增、更新计划任务时，在本文件末尾处追加。</span><br><span class="line">########################### 公共计划任务 S ################################</span><br><span class="line"># 系统时间</span><br><span class="line">* */1 * *  * /sbin/ntpdate pool.ntp.org &gt; /dev/null 2&gt;&amp;1</span><br><span class="line"># 自动检测 crontab</span><br><span class="line">* * * * * [ `stat -c \%Y $PROJECT_PATH/crontab` -gt `stat -c \%Y /var/spool/cron/root` ] &amp;&amp; crontab $PROJECT_PATH/crontab &amp;&amp; echo "Crontab auto-update at $(date '+\%Y-\%m-\%d \%H:\%M:\%S')" &gt;&gt; /tmp/crontab-auto-update.log</span><br><span class="line">########################### 公共计划任务 E ################################</span><br><span class="line"></span><br><span class="line">########################### 51.96 计划任务 S ################################</span><br><span class="line">* * * * * [ `hostname -s` = "web96" ] &amp;&amp; /usr/bin/php $PROJECT_PATH/public/cli.php request_uri="/test/updateUser"  &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">0 */8 * * * [ `hostname -s` = "web96" ] &amp;&amp; flock -xn /tmp/updateUserName.lock /usr/bin/php $PROJECT_PATH/public/cli.php request_uri="/test/updateUserName" &gt; /dev/null 2&gt;&amp;1</span><br><span class="line"># test crontab</span><br><span class="line">#* * * * * echo "系统当前时间：$(date) " &gt;&gt; /tmp/crontab-test.log</span><br><span class="line">########################### 51.96 计划任务 E ################################</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li>公共计划任务可根据此处复制粘贴，也可追加计划任务，比如：<code>nginx</code> 的 log 文件处理脚本等。</li>
<li>下面的 <code>51.96</code> 计划任务 是为了只在 <code>51.96</code> 服务器上执行计划任务，若不加<code> [ ``hostname -s`` = "web96" ]</code> &amp;&amp; 代码，则将在所有生效的服务器上执行计划任务。项目都会有多台 web 服务器，而计划任务通常只需要在其中一台上执行。若不知项目要部署到那台服务器上，可在服务器上执行 <code>hostname -s</code>，将结果值替换示例中的 <code>web96</code>。</li>
<li>环境变量 <code>$PROJECT_PATH</code> 是项目的根目录路径。</li>
</ul>
<h2 id="Gist-for-github"><a href="#Gist-for-github" class="headerlink" title="Gist for github"></a>Gist for github</h2><p><a href="https://gist.github.com/codezm/4e0266d30891bd7de076442a797a1e0a">https://gist.github.com/codezm/4e0266d30891bd7de076442a797a1e0a</a></p>
]]></content>
      <categories>
        <category>Crontab</category>
      </categories>
      <tags>
        <tag>Crontab</tag>
      </tags>
  </entry>
  <entry>
    <title>FTP文件传输协议</title>
    <url>/posts/FTP/d43d9b38.html</url>
    <content><![CDATA[<p><code>FTP</code> 即 File Transfer Protocol 文件传输协议。</p>
<p>客户端与服务端建立会话，双方启动控制进程，用到TCP的21端口，利用此端口控制文件是上传还是下载，删除或是复制等操作命令，真正的数据传输走的是另外的端口。</p>
<a id="more"></a>

<h2 id="主动模式"><a href="#主动模式" class="headerlink" title="主动模式"></a>主动模式</h2><p>当会话建立完成后，客户端就开启某个端口比如6666，然后告诉服务器自己用的是6666端口侦听，FTP服务器会主动访问客户端6666端口，服务器这边的端口为20。</p>
<blockquote>
<p>注意：使用主动模式，防火墙需要打开21和20端口。</p>
</blockquote>
<h2 id="被动模式"><a href="#被动模式" class="headerlink" title="被动模式"></a>被动模式</h2><p>当会话建立完成后，服务器告诉客户端自己打开了某个端口，比如8888这样一个端口来侦听，然后等待客户端访问，这就是被动模式。</p>
<blockquote>
<p>注意：如果只打开21和20端口，被动模式不能下载数据，访问ftp不成功很大可能就是模式不对</p>
</blockquote>
<h2 id="Windows-7-更改默认-被动模式-PASV-为-主动模式-PORT"><a href="#Windows-7-更改默认-被动模式-PASV-为-主动模式-PORT" class="headerlink" title="Windows 7 更改默认 被动模式 - PASV 为 主动模式 - PORT"></a>Windows 7 更改默认 <code>被动模式 - PASV</code> 为 <code>主动模式 - PORT</code></h2><ol>
<li>右击桌面右下角 <code>网络 -&gt; 打开网络和共享中心</code> 。  </li>
<li><code>Internet 选项 -&gt; 高级</code>。</li>
<li>取消勾选 <code>使用被动 FTP（用于防火墙和 DSL 调制解调器的兼容）</code>。</li>
<li><code>应用 -&gt; 确定</code> 使配置生效。</li>
</ol>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://blog.csdn.net/weixin_43616178/article/details/89969224">Win10搭建ftp服务器，了解ftp的被动模式与主动模式</a></li>
</ul>
]]></content>
      <categories>
        <category>FTP</category>
      </categories>
      <tags>
        <tag>FTP</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux-Cgroups</title>
    <url>/posts/Linux/923e2ad4.html</url>
    <content><![CDATA[<p>Linux控制组（cgroups）是一个内核功能，用于限制，记录和隔离一个或多个进程对CPU，内存，磁盘I/O，以及网络的使用量及访问。</p>
<a id="more"></a>

<h4 id="CPU-限制"><a href="#CPU-限制" class="headerlink" title="CPU 限制"></a>CPU 限制</h4><ul>
<li>cpu.cfs_quota_us</li>
<li>cpu.cfs_period_us</li>
</ul>
<p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/sec-cpu">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/sec-cpu</a></p>
<p><a href="https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/9/html/monitoring_and_managing_system_status_and_performance/setting-limits-for-applications_monitoring-and-managing-system-status-and-performance">https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/9/html/monitoring_and_managing_system_status_and_performance/setting-limits-for-applications_monitoring-and-managing-system-status-and-performance</a></p>
<h4 id="查看每个进程资源占用情况"><a href="#查看每个进程资源占用情况" class="headerlink" title="查看每个进程资源占用情况"></a>查看每个进程资源占用情况</h4><p>systemd-cgtop</p>
<h4 id="判断当前系统使用的是-Cgroup-还是-Cgroup2-？"><a href="#判断当前系统使用的是-Cgroup-还是-Cgroup2-？" class="headerlink" title="判断当前系统使用的是 Cgroup 还是 Cgroup2 ？"></a>判断当前系统使用的是 Cgroup 还是 Cgroup2 ？</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">mount</span><br><span class="line"></span><br><span class="line"><span class="comment"># Cgroup</span></span><br><span class="line">...</span><br><span class="line">cgroup on /sys/fs/cgroup/rdma <span class="built_in">type</span> cgroup (rw,nosuid,nodev,noexec,relatime,rdma)</span><br><span class="line">cgroup on /sys/fs/cgroup/cpuset <span class="built_in">type</span> cgroup (rw,nosuid,nodev,noexec,relatime,cpuset)</span><br><span class="line">cgroup on /sys/fs/cgroup/perf_event <span class="built_in">type</span> cgroup (rw,nosuid,nodev,noexec,relatime,perf_event)</span><br><span class="line">cgroup on /sys/fs/cgroup/memory <span class="built_in">type</span> cgroup (rw,nosuid,nodev,noexec,relatime,memory)</span><br><span class="line">cgroup on /sys/fs/cgroup/net_cls,net_prio <span class="built_in">type</span> cgroup (rw,nosuid,nodev,noexec,relatime,net_cls,net_prio)</span><br><span class="line">cgroup on /sys/fs/cgroup/cpu,cpuacct <span class="built_in">type</span> cgroup (rw,nosuid,nodev,noexec,relatime,cpu,cpuacct)</span><br><span class="line">cgroup on /sys/fs/cgroup/freezer <span class="built_in">type</span> cgroup (rw,nosuid,nodev,noexec,relatime,freezer)</span><br><span class="line">cgroup on /sys/fs/cgroup/pids <span class="built_in">type</span> cgroup (rw,nosuid,nodev,noexec,relatime,pids)</span><br><span class="line">cgroup on /sys/fs/cgroup/hugetlb <span class="built_in">type</span> cgroup (rw,nosuid,nodev,noexec,relatime,hugetlb)</span><br><span class="line">cgroup on /sys/fs/cgroup/blkio <span class="built_in">type</span> cgroup (rw,nosuid,nodev,noexec,relatime,blkio)</span><br><span class="line">cgroup on /sys/fs/cgroup/devices <span class="built_in">type</span> cgroup (rw,nosuid,nodev,noexec,relatime,devices)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># Cgroup2</span></span><br><span class="line">cgroup2 on /sys/fs/cgroup <span class="built_in">type</span> cgroup2 (rw,nosuid,nodev,noexec,relatime,nsdelegate)</span><br></pre></td></tr></tbody></table></figure>







<h4 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h4><ul>
<li><a href="https://zorrozou.github.io/docs/%E8%AF%A6%E8%A7%A3Cgroup%20V2.html">详解Cgroup V2</a></li>
<li></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Cgroups</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 常用命令</title>
    <url>/posts/Linux/dc3ac5b2.html</url>
    <content><![CDATA[<p>linux 常用命令</p>
<a id="more"></a>

<h4 id="查看进程物理内存占用"><a href="#查看进程物理内存占用" class="headerlink" title="查看进程物理内存占用"></a>查看进程物理内存占用</h4><p>smem 工具官方地址：<a href="https://www.selenic.com/smem/">https://www.selenic.com/smem/</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">smem -M php | grep USS</span><br></pre></td></tr></tbody></table></figure>



<h4 id="解决-ls-目录文件太多卡住"><a href="#解决-ls-目录文件太多卡住" class="headerlink" title="解决 ls 目录文件太多卡住"></a>解决 ls 目录文件太多卡住</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ ls -1 -f</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>默认 <code>ls</code> 命令将进行文件排序，在内存中存储目录中所有的文件，这将卡住 <code>ls</code> 命令。而 <code>ls -1 -f</code> 命令将不进行排序直接列出文件。</p>
</blockquote>
<h4 id="批量查看文件"><a href="#批量查看文件" class="headerlink" title="批量查看文件"></a>批量查看文件</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ find . -<span class="built_in">type</span> f -<span class="built_in">print</span> -<span class="built_in">exec</span> cat {} \; | grep -v <span class="string">'.git'</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="进程、线程监控"><a href="#进程、线程监控" class="headerlink" title="进程、线程监控"></a>进程、线程监控</h4><h5 id="查看某进程的所有线程"><a href="#查看某进程的所有线程" class="headerlink" title="查看某进程的所有线程"></a>查看某进程的所有线程</h5><p>top -H -p <pid></pid></p>
<blockquote>
<p>top -H -p 2464<br>top -H -c -p 2464</p>
</blockquote>
<p>ps -T -p <pid></pid></p>
<blockquote>
<p>ps -T -p 2464<br>ps -Tf -p 2464</p>
</blockquote>
<h5 id="获取-hostname-中的英文字母"><a href="#获取-hostname-中的英文字母" class="headerlink" title="获取 hostname 中的英文字母"></a>获取 hostname 中的英文字母</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">hostname -s | grep -Eo "[[:alpha:]]*"</span><br></pre></td></tr></tbody></table></figure>



<h4 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 在当前目录下递归搜索 phonenumber 关键字，但排除 ./ruoyi-ui 和 ./ruoyi-common 目录。</span></span><br><span class="line">grep -rl <span class="string">"phonenumber"</span> --exclude-dir={ruoyi-ui,ruoyi-common} ./</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">grep -rl --exclude=<span class="string">"*.js"</span> <span class="string">"phonenumber"</span> ./</span><br></pre></td></tr></tbody></table></figure>



<h4 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"></span><br><span class="line">$ ls -l /etc/yum.repos.d/</span><br><span class="line">-rw-r--r--. 1 root root 1664 4月  29 2018 CentOS-Base.repo</span><br><span class="line">-rw-r--r--. 1 root root 1309 4月  29 2018 CentOS-CR.repo</span><br><span class="line">-rw-r--r--. 1 root root  649 4月  29 2018 CentOS-Debuginfo.repo</span><br><span class="line">-rw-r--r--. 1 root root  314 4月  29 2018 CentOS-fasttrack.repo</span><br><span class="line">-rw-r--r--. 1 root root  630 4月  29 2018 CentOS-Media.repo</span><br><span class="line">-rw-r--r--. 1 root root 1331 4月  29 2018 CentOS-Sources.repo</span><br><span class="line">-rw-r--r--. 1 root root 4768 4月  29 2018 CentOS-Vault.repo</span><br></pre></td></tr></tbody></table></figure>



<h5 id="只显示文件名"><a href="#只显示文件名" class="headerlink" title="只显示文件名"></a>只显示文件名</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ ls -1 /etc/yum.repos.d/</span><br><span class="line">CentOS-Base.repo</span><br><span class="line">CentOS-CR.repo</span><br><span class="line">CentOS-Debuginfo.repo</span><br><span class="line">CentOS-fasttrack.repo</span><br><span class="line">CentOS-Media.repo</span><br><span class="line">CentOS-Sources.repo</span><br><span class="line">CentOS-Vault.repo</span><br><span class="line">$ ls -l -F nginx</span><br><span class="line">client_body_temp/</span><br><span class="line">conf/</span><br><span class="line">fastcgi_temp/</span><br><span class="line">html/</span><br><span class="line">logs/</span><br><span class="line">lua/</span><br><span class="line">proxy_temp/</span><br><span class="line">sbin/</span><br><span class="line">scgi_temp/</span><br><span class="line">uwsgi_temp/</span><br></pre></td></tr></tbody></table></figure>

<p><code>-1</code> 这里是数字1，不是字母l。作用是单列输出。</p>
<p><code>-F</code> 根据文件、目录等信息在文件名或目录名最后给予附加数据结构</p>
<pre><code>- `*` 代表可执行文件
- `/` 代表目录
- `=` 代表socket文件
- `|` 代表FIFO文件
- `@`代表连接文件</code></pre>
<h6 id="仅列出文件夹中的文件名"><a href="#仅列出文件夹中的文件名" class="headerlink" title="仅列出文件夹中的文件名"></a>仅列出文件夹中的文件名</h6><blockquote>
<p>当要列出的文件夹包含既有目录还有文件时，可以通过以下命令仅列出其中的文件。</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 方法一</span></span><br><span class="line">$ ls -1 -F | grep -v [/$]</span><br><span class="line"><span class="comment"># 方法二</span></span><br><span class="line">$ ls -l | grep ^[^d] | grep -v <span class="string">"总"</span> | awk <span class="string">'{print $NF}'</span></span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>释义：</p>
<ul>
<li><p><code>[/$]</code> 是正则表达式，意思是匹配所有以 <code>$</code> 结尾的值</p>
</li>
<li><p><code>[^d]</code> 是正则表达式，意思是匹配所有以 <code>d</code> 开头的值。而 <code>^[^d]</code> 是取反，意思是所有不以 <code>d</code> 开头的值。</p>
<ul>
<li><code>-v</code> 参数是非的意思</li>
</ul>
</li>
</ul>
</blockquote>
<h6 id="仅列出文件夹中的目录"><a href="#仅列出文件夹中的目录" class="headerlink" title="仅列出文件夹中的目录"></a>仅列出文件夹中的目录</h6><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 方法一</span></span><br><span class="line">$ ls -F | grep [/$]</span><br><span class="line"><span class="comment"># 方法二</span></span><br><span class="line">$ ls -d */ | sed <span class="string">'s/\///g'</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="watch"><a href="#watch" class="headerlink" title="watch"></a>watch</h4><p>定期执行命令或程序，并实时将结果显示在屏幕上输出。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">watch free -m</span><br></pre></td></tr></tbody></table></figure>

<ol>
<li><code>-b</code> -创建蜂鸣声，如果命令的退出是非零。</li>
<li><code>-c</code> -解释ANSI颜色序列。</li>
<li><code>-d</code> -突出在命令输出的变化。</li>
<li><code>-n</code> -命令执行的时间间隔，默认 1 秒执行一次。</li>
<li><code>-t</code> -标题显示正在执行的命令和当前时间的信息。</li>
</ol>
<h5 id="示例：查看拷贝数据的进度"><a href="#示例：查看拷贝数据的进度" class="headerlink" title="示例：查看拷贝数据的进度"></a>示例：查看拷贝数据的进度</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">cp Xcode_11.xip /home/codezm/ &amp; watch -n 0.1 du -s /home/codezm/Xcode_11.xip</span><br></pre></td></tr></tbody></table></figure>



<h4 id="Top"><a href="#Top" class="headerlink" title="Top"></a>Top</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ top -bn 1 -i -c</span><br><span class="line">top - 16:59:46 up 16 days, 20:09,  2 users,  load average: 0.00, 0.00, 0.00</span><br><span class="line">Tasks:  94 total,   2 running,  92 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  2.4 us,  0.0 sy,  0.0 ni, 35.7 id, 61.9 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">MiB Mem :    818.8 total,    120.2 free,    129.6 used,    569.0 buff/cache</span><br><span class="line">MiB Swap:   2048.0 total,   1941.7 free,    106.2 used.    552.0 avail Mem</span><br><span class="line"></span><br><span class="line">    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><p>%us：表示用户空间程序的cpu使用率（没有通过nice调度）</p>
</li>
<li><p>%sy：表示系统空间的cpu使用率，主要是内核程序。</p>
</li>
<li><p>%ni：表示用户空间且通过nice调度过的程序的cpu使用率。</p>
</li>
<li><p>%id：空闲cpu</p>
</li>
<li><p>%wa：cpu运行时在等待io的时间</p>
</li>
<li><p>%hi：cpu处理硬中断的数量</p>
</li>
<li><p>%si：cpu处理软中断的数量</p>
</li>
<li><p>%st：被虚拟机偷走的cpu</p>
</li>
</ul>
<h4 id="vmstat"><a href="#vmstat" class="headerlink" title="vmstat"></a>vmstat</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ vmstat 2 3</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy id wa st</span><br><span class="line"> 1  0 108032 188512   1112 500408    1    1     4     4   16   26  0  0 100  0  0</span><br><span class="line"> 0  0 108032 188452   1112 500424    0    0     0     0   44   83  0  0 100  0  0</span><br><span class="line"> 0  0 108032 188452   1112 500424    0    0     0     0   47   84  0  0 100  0  0</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>每间隔 2 秒采集一次，总共采集 3 次。</p>
</blockquote>
<h4 id="sar"><a href="#sar" class="headerlink" title="sar"></a>sar</h4><p><strong>前提：需要先安装 <code>sysstat</code> 包。</strong></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ sar -P 0 -u 1 2</span><br><span class="line">Linux 4.18.0-193.14.2.el8_2.x86_64 (codezm.com) 	2021年01月08日 	_x86_64_	(1 CPU)</span><br><span class="line"></span><br><span class="line">17时09分08秒     CPU     %user     %nice   %system   %iowait    %steal     %idle</span><br><span class="line">17时09分09秒       0      0.00      0.00      0.00      0.00      0.00    100.00</span><br><span class="line">17时09分10秒       0      0.00      0.00      0.00      0.00      0.00    100.00</span><br><span class="line">平均时间:       0      0.00      0.00      0.00      0.00      0.00    100.00</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>CPU使用率：监控第 0 颗CPU，每间隔 1 秒采集一次，总共采集 2 次。</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ sar -q 1 2</span><br><span class="line">Linux 4.18.0-193.14.2.el8_2.x86_64 (codezm.com) 	2021年01月08日 	_x86_64_	(1 CPU)</span><br><span class="line"></span><br><span class="line">17时09分24秒   runq-sz  plist-sz   ldavg-1   ldavg-5  ldavg-15   blocked</span><br><span class="line">17时09分25秒         0       112      0.00      0.04      0.02         0</span><br><span class="line">17时09分26秒         0       112      0.00      0.04      0.02         0</span><br><span class="line">平均时间:         0       112      0.00      0.04      0.02         0</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>进程队列长度和平均负载状态</p>
<ul>
<li><p>runq-sz：运行队列的长度（等待运行的进程数）</p>
</li>
<li><p>plist-sz：进程列表中进程（processes）和线程（threads）的数量</p>
</li>
<li><p>ldavg-1：最后1分钟的系统平均负载（System load average）</p>
</li>
<li><p>ldavg-5：过去5分钟的系统平均负载</p>
</li>
<li><p>ldavg-15：过去15分钟的系统平均负载</p>
</li>
</ul>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ sar -w 1 2</span><br><span class="line">Linux 4.18.0-193.14.2.el8_2.x86_64 (codezm.com) 	2021年01月08日 	_x86_64_	(1 CPU)</span><br><span class="line"></span><br><span class="line">17时10分57秒    proc/s   cswch/s</span><br><span class="line">17时10分58秒      0.00     87.00</span><br><span class="line">17时10分59秒      0.00     88.00</span><br><span class="line">平均时间:      0.00     87.50</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>进程创建的平均值和上下文切换的次数</p>
</blockquote>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://www.howtoing.com/run-repeat-linux-command-every-x-seconds">https://www.howtoing.com/run-repeat-linux-command-every-x-seconds</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>watch</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux操作</title>
    <url>/posts/Linux/7a00f2af.html</url>
    <content><![CDATA[<h2 id="Linux-操作"><a href="#Linux-操作" class="headerlink" title="Linux 操作"></a>Linux 操作</h2><a id="more"></a>

<h2 id="Systemd"><a href="#Systemd" class="headerlink" title="Systemd"></a>Systemd</h2><h4 id="systemd-的存放路径"><a href="#systemd-的存放路径" class="headerlink" title="systemd 的存放路径"></a>systemd 的存放路径</h4><p>默认 systemd 的配置文件存在于三个文件夹中</p>
<ul>
<li><code>/etc/systemd/system</code></li>
<li><code>/run/systemd/system</code></li>
<li><code>/usr/lib/systemd/system</code></li>
</ul>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://blog.csdn.net/shangxiaqiusuo1/article/details/124437676">https://blog.csdn.net/shangxiaqiusuo1/article/details/124437676</a></li>
</ul>
<h1 id="top-命令"><a href="#top-命令" class="headerlink" title="top 命令"></a>top 命令</h1><p>第一行，任务队列信息，同 uptime 命令的执行结果，具体参数说明情况如下：<br>    14:06:23 — 当前系统时间<br>    up 70 days, 16:44 — 系统已经运行了70天16小时44分钟（在这期间系统没有重启过的吆！）<br>    2 users — 当前有2个用户登录系统<br>    load average: 1.15, 1.42, 1.44 — load average后面的三个数分别是1分钟、5分钟、15分钟的负载情况。<br>    load average数据是每隔5秒钟检查一次活跃的进程数，然后按特定算法计算出的数值。如果这个数除以逻辑CPU的数量，结果高于5的时候就表明系统在超负荷运转了。<br>第二行，Tasks — 任务（进程），具体信息说明如下：<br>    系统现在共有206个进程，其中处于运行中的有1个，205个在休眠（sleep），stoped状态的有0个，zombie状态（僵尸）的有0个。<br>第三行，cpu状态信息，具体属性说明如下：<br>    5.9%us — 用户空间占用CPU的百分比。<br>    3.4% sy — 内核空间占用CPU的百分比。<br>    0.0% ni — 改变过优先级的进程占用CPU的百分比<br>    90.4% id — 空闲CPU百分比<br>    0.0% wa — IO等待占用CPU的百分比<br>    0.0% hi — 硬中断（Hardware IRQ）占用CPU的百分比<br>    0.2% si — 软中断（Software Interrupts）占用CPU的百分比<br>第四行,内存状态，具体信息如下：<br>    32949016k total — 物理内存总量（32GB）<br>    14411180k used — 使用中的内存总量（14GB）<br>    18537836k free — 空闲内存总量（18GB）<br>    169884k buffers — 缓存的内存量 （169M）<br>    第五行，swap交换分区信息，具体信息说明如下：<br>    32764556k total — 交换区总量（32GB）<br>    0k used — 使用的交换区总量（0K）<br>    32764556k free — 空闲交换区总量（32GB）<br>    3612636k cached — 缓冲的交换区总量（3.6GB）</p>
<ol>
<li>多U多核CPU监控<br>在top基本视图中，按键盘数字“1”，可监控每个逻辑CPU的状况</li>
<li>高亮显示当前运行进程<br>敲击键盘“b”（打开/关闭加亮效果）</li>
<li>进程字段排序<br>默认进入top时，各进程是按照CPU的占用量来排序的,敲击键盘“x”（打开/关闭排序列的加亮效果）</li>
<li>通过”shift + &gt;”或”shift + &lt;”可以向右或左改变排序列</li>
<li>显示完整命令, 敲击键盘“c”</li>
</ol>
<p>在top 命令执行过程中可以使用的一些交互命令。这些命令都是单字母的，如果在命令行中使用了s 选项， 其中一些命令可能会被屏蔽。<br>    h 显示帮助画面，给出一些简短的命令总结说明<br>    k 终止一个进程。<br>    i 忽略闲置和僵死进程。这是一个开关式命令。<br>    q 退出程序<br>    r 重新安排一个进程的优先级别<br>    S 切换到累计模式<br>    s 改变两次刷新之间的延迟时间（单位为s），如果有小数，就换算成m s。输入0值则系统将不断刷新，默认值是5 s<br>    f或者F 从当前显示中添加或者删除项目<br>    o或者O 改变显示项目的顺序<br>    l 切换显示平均负载和启动时间信息<br>    m 切换显示内存信息<br>    t 切换显示进程和CPU状态信息<br>    c 切换显示命令名称和完整命令行<br>    M 根据驻留内存大小进行排序<br>    P 根据CPU使用百分比大小进行排序<br>    T 根据时间/累计时间进行排序<br>    W 将当前设置写入~/.toprc文件中 </p>
<h1 id="查看内核版本命令"><a href="#查看内核版本命令" class="headerlink" title="查看内核版本命令"></a>查看内核版本命令</h1><ol>
<li><p>cat /proc/version<br>/ # cat /proc/version<br>Linux version 4.9.49-moby (root@11fbdc1f630f) (gcc version 6.2.1 20160822 (Alpine 6.2.1) ) #1 SMP Wed Sep 27 23:17:17 UTC 2017<br>[root@in50147 cat]# cat /proc/version<br>Linux version 2.6.18-348.el5 (<a href="mailto:mockbuild@builder17.centos.org">mockbuild@builder17.centos.org</a>) (gcc version 4.1.2 20080704 (Red Hat 4.1.2-54)) #1 SMP Tue Jan 8 17:57:28 EST 2013</p>
</li>
<li><p>cat uname -r<br>/ # uname -r</p>
</li>
<li><p>9.49-moby<br>[root@in50147 cat]#  uname -r</p>
</li>
<li><p>6.18-348.el5</p>
</li>
<li><p>cat uname -a<br>/ # uname -a<br>Linux nginx 4.9.49-moby #1 SMP Wed Sep 27 23:17:17 UTC 2017 x86_64 Linux<br>[root@50147 cat]# uname -a<br>Linux 50147 2.6.18-348.el5 #1 SMP Tue Jan 8 17:57:28 EST 2013 i686 i686 i386 GNU/Linux</p>
</li>
</ol>
<h1 id="查看linux版本"><a href="#查看linux版本" class="headerlink" title="查看linux版本"></a>查看linux版本</h1><ol>
<li>lsb_release -a<br>[root@in50147 cat]# lsb_release -a<br>LSB Version:    :core-4.0-ia32:core-4.0-noarch:graphics-4.0-ia32:graphics-4.0-noarch:printing-4.0-ia32:printing-4.0-noarch<br>Distributor ID:    CentOS<br>Description:    CentOS release 5.9 (Final)<br>Release:    5.9<br>Codename:    Final</li>
<li>cat /etc/issue<br>[root@in50147 cat]# cat /etc/issue<br>CentOS release 5.9 (Final)<br>Kernel \r on an \m</li>
<li>cat /etc/redhat-release</li>
<li>rpm -q redhat-release</li>
<li>file /bin/bash</li>
<li>file /bin/cat</li>
</ol>
<h3 id="sshd"><a href="#sshd" class="headerlink" title="sshd"></a>sshd</h3><p>vi /etc/ssh/sshd_config<br>PermitRootLogin yes<br>RSAAuthentication yes<br>PubkeyAuthentication yes</p>
<p>systemctl start sshd.service<br>开启自动启动ssh服务<br>systemctl enable sshd.service</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ssh使用自定义证书免密登录</title>
    <url>/posts/ssh/427cc714.html</url>
    <content><![CDATA[<p>N1 系统安装完成后，为了使外网登录更加安全，本篇将介绍如何把 <code>ssh 密码</code> 登录方式改为 <code>ssh 证书</code> 免密登录。</p>
<a id="more"></a>

<h3 id="证书登录实现步骤"><a href="#证书登录实现步骤" class="headerlink" title="证书登录实现步骤"></a>证书登录实现步骤</h3><ol>
<li>生成证书：私钥和公钥，私钥存放在客户端，必要时可为私钥加密；</li>
<li>服务器添加信任公钥：把生成的公钥，上传到ssh服务器，添加到指定的文件中（默认是：<code>.ssh/authorized_keys</code> 文件）；</li>
<li>配置开启允许证书登录，客户端就能通过私钥ssh登录服务器了。</li>
</ol>
<h4 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h4><h5 id="生成私钥和公钥"><a href="#生成私钥和公钥" class="headerlink" title="生成私钥和公钥"></a>生成私钥和公钥</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -f ~/.ssh/n1_ca -C n1_ca</span><br></pre></td></tr></tbody></table></figure>

<p>执行过程中会提示输入两次密码，当然如果不想在使用公钥的时候输入密码，直接回车即可。</p>
<ul>
<li><code>-t rsa</code>：指定密钥算法 RSA。</li>
<li><code>-b 4096</code>：指定密钥的位数是4096位。安全性要求不高的场合，这个值可以小一点，但是不应小于1024。</li>
<li><code>-f ~/.ssh/n1_ca</code>：指定生成密钥的位置和文件名。</li>
<li><code>-C n1_ca</code>：指定密钥的识别字符串，相当于注释，可以随意设置。</li>
</ul>
<h5 id="将公钥拷贝到服务器上"><a href="#将公钥拷贝到服务器上" class="headerlink" title="将公钥拷贝到服务器上"></a>将公钥拷贝到服务器上</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/n1_ca.pub root@192.168.50.3</span><br></pre></td></tr></tbody></table></figure>

<p>登录服务器，确认公钥已配置正确。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">cat ~/.ssh/authorized_keys</span><br></pre></td></tr></tbody></table></figure>

<h5 id="服务端配置：sshd-config"><a href="#服务端配置：sshd-config" class="headerlink" title="服务端配置：sshd_config"></a>服务端配置：sshd_config</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 允许 root 账户登录，默认：yes。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 若为了更安全考虑，建议设置成 no。但记得在使配置生效前，确保有其他账号可以通过证书登录。</span></span><br><span class="line">PermitRootLogin yes</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置公钥文件 - 保持默认配置即可</span></span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys .ssh/authorized_keys2</span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁止密码登录方式</span></span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></tbody></table></figure>

<p>完成配置后，需要重启 <code>sshd</code> 服务使配置生效。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ systemctl restart sshd</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>注意：服务端 sshd 服务重启后不要立刻结束当前终端，新建一个终端测试登录，在登录成功且没有问题，后再结束当前终端，以避免配置错误导致无法登录服务器。</p>
</blockquote>
<h5 id="测试通过证书登录服务器"><a href="#测试通过证书登录服务器" class="headerlink" title="测试通过证书登录服务器"></a>测试通过证书登录服务器</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ssh -i ~/.ssh/n1_ca root@192.168.50.3</span><br></pre></td></tr></tbody></table></figure>

<p>通过指定证书文件免密登录服务器，但这样每次登录都需要指定证书文件，可通过客户端配置 <code>ssh_config</code> 文件，追加私钥证书文件，免去每次登录时需指定证书文件的麻烦。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo vim /etc/ssh/ssh_config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 若有多个私钥文件，可追加。</span></span><br><span class="line">IdentityFile ~/.ssh/n1_ca</span><br><span class="line"><span class="comment"># virtualbox 私钥文件</span></span><br><span class="line">IdentityFile ~/.ssh/virtualbox_ca</span><br></pre></td></tr></tbody></table></figure>

<p>保存，今后就可以直接通过 <code>ssh root@192.168.50.3</code> 命令登入 <code>N1</code> 系统啦。</p>
<blockquote>
<p>默认：ssh 命令使用的密钥文件是 <code>~/.ssh/id_rsa</code>。</p>
</blockquote>
]]></content>
      <categories>
        <category>ssh</category>
      </categories>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>操作系统下载地址汇总</title>
    <url>/posts/%E4%B8%8B%E8%BD%BD/1d66a6f6.html</url>
    <content><![CDATA[<h1 id="操作系统下载"><a href="#操作系统下载" class="headerlink" title="操作系统下载"></a>操作系统下载</h1><ul>
<li>Debian：<a href="https://cdimage.debian.org/cdimage/archive/">https://cdimage.debian.org/cdimage/archive/</a></li>
<li>微软相关：<a href="https://msdn.itellyou.cn/%E3%80%81[https://next.itellyou.cn](https://next.itellyou.cn/Original/Index)">https://msdn.itellyou.cn/、[https://next.itellyou.cn](https://next.itellyou.cn/Original/Index)</a></li>
</ul>
]]></content>
      <categories>
        <category>下载</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenSSL命令使用记录</title>
    <url>/posts/OpenSSL/77704e92.html</url>
    <content><![CDATA[<p>OpenSSL命令使用记录</p>
<a id="more"></a>

<h4 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ openssl version</span><br><span class="line">LibreSSL 2.8.3</span><br></pre></td></tr></tbody></table></figure>



<h4 id="查看支持的加密套件"><a href="#查看支持的加密套件" class="headerlink" title="查看支持的加密套件"></a>查看支持的加密套件</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ openssl ciphers -v</span><br><span class="line">ECDHE-RSA-AES256-GCM-SHA384 TLSv1.2 Kx=ECDH     Au=RSA  Enc=AESGCM(256) Mac=AEAD</span><br><span class="line">ECDHE-ECDSA-AES256-GCM-SHA384 TLSv1.2 Kx=ECDH     Au=ECDSA Enc=AESGCM(256) Mac=AEAD</span><br><span class="line">ECDHE-RSA-AES256-SHA384 TLSv1.2 Kx=ECDH     Au=RSA  Enc=AES(256)  Mac=SHA384</span><br><span class="line">ECDHE-ECDSA-AES256-SHA384 TLSv1.2 Kx=ECDH     Au=ECDSA Enc=AES(256)  Mac=SHA384</span><br><span class="line">ECDHE-RSA-AES256-SHA    SSLv3 Kx=ECDH     Au=RSA  Enc=AES(256)  Mac=SHA1</span><br><span class="line">ECDHE-ECDSA-AES256-SHA  SSLv3 Kx=ECDH     Au=ECDSA Enc=AES(256)  Mac=SHA1</span><br><span class="line">DHE-RSA-AES256-GCM-SHA384 TLSv1.2 Kx=DH       Au=RSA  Enc=AESGCM(256) Mac=AEAD</span><br><span class="line">DHE-RSA-AES256-SHA256   TLSv1.2 Kx=DH       Au=RSA  Enc=AES(256)  Mac=SHA256</span><br><span class="line">DHE-RSA-AES256-SHA      SSLv3 Kx=DH       Au=RSA  Enc=AES(256)  Mac=SHA1</span><br><span class="line">ECDHE-ECDSA-CHACHA20-POLY1305 TLSv1.2 Kx=ECDH     Au=ECDSA Enc=ChaCha20-Poly1305 Mac=AEAD</span><br><span class="line">ECDHE-RSA-CHACHA20-POLY1305 TLSv1.2 Kx=ECDH     Au=RSA  Enc=ChaCha20-Poly1305 Mac=AEAD</span><br><span class="line">DHE-RSA-CHACHA20-POLY1305 TLSv1.2 Kx=DH       Au=RSA  Enc=ChaCha20-Poly1305 Mac=AEAD</span><br><span class="line">GOST2012256-GOST89-GOST89 SSLv3 Kx=GOST     Au=GOST01 Enc=GOST-28178-89-CNT Mac=GOST89IMIT</span><br><span class="line">DHE-RSA-CAMELLIA256-SHA256 TLSv1.2 Kx=DH       Au=RSA  Enc=Camellia(256) Mac=SHA256</span><br><span class="line">DHE-RSA-CAMELLIA256-SHA SSLv3 Kx=DH       Au=RSA  Enc=Camellia(256) Mac=SHA1</span><br><span class="line">GOST2001-GOST89-GOST89  SSLv3 Kx=GOST     Au=GOST01 Enc=GOST-28178-89-CNT Mac=GOST89IMIT</span><br><span class="line">AES256-GCM-SHA384       TLSv1.2 Kx=RSA      Au=RSA  Enc=AESGCM(256) Mac=AEAD</span><br><span class="line">AES256-SHA256           TLSv1.2 Kx=RSA      Au=RSA  Enc=AES(256)  Mac=SHA256</span><br><span class="line">AES256-SHA              SSLv3 Kx=RSA      Au=RSA  Enc=AES(256)  Mac=SHA1</span><br><span class="line">CAMELLIA256-SHA256      TLSv1.2 Kx=RSA      Au=RSA  Enc=Camellia(256) Mac=SHA256</span><br><span class="line">CAMELLIA256-SHA         SSLv3 Kx=RSA      Au=RSA  Enc=Camellia(256) Mac=SHA1</span><br><span class="line">ECDHE-RSA-AES128-GCM-SHA256 TLSv1.2 Kx=ECDH     Au=RSA  Enc=AESGCM(128) Mac=AEAD</span><br><span class="line">ECDHE-ECDSA-AES128-GCM-SHA256 TLSv1.2 Kx=ECDH     Au=ECDSA Enc=AESGCM(128) Mac=AEAD</span><br><span class="line">ECDHE-RSA-AES128-SHA256 TLSv1.2 Kx=ECDH     Au=RSA  Enc=AES(128)  Mac=SHA256</span><br><span class="line">ECDHE-ECDSA-AES128-SHA256 TLSv1.2 Kx=ECDH     Au=ECDSA Enc=AES(128)  Mac=SHA256</span><br><span class="line">ECDHE-RSA-AES128-SHA    SSLv3 Kx=ECDH     Au=RSA  Enc=AES(128)  Mac=SHA1</span><br><span class="line">ECDHE-ECDSA-AES128-SHA  SSLv3 Kx=ECDH     Au=ECDSA Enc=AES(128)  Mac=SHA1</span><br><span class="line">DHE-RSA-AES128-GCM-SHA256 TLSv1.2 Kx=DH       Au=RSA  Enc=AESGCM(128) Mac=AEAD</span><br><span class="line">DHE-RSA-AES128-SHA256   TLSv1.2 Kx=DH       Au=RSA  Enc=AES(128)  Mac=SHA256</span><br><span class="line">DHE-RSA-AES128-SHA      SSLv3 Kx=DH       Au=RSA  Enc=AES(128)  Mac=SHA1</span><br><span class="line">DHE-RSA-CAMELLIA128-SHA256 TLSv1.2 Kx=DH       Au=RSA  Enc=Camellia(128) Mac=SHA256</span><br><span class="line">DHE-RSA-CAMELLIA128-SHA SSLv3 Kx=DH       Au=RSA  Enc=Camellia(128) Mac=SHA1</span><br><span class="line">AES128-GCM-SHA256       TLSv1.2 Kx=RSA      Au=RSA  Enc=AESGCM(128) Mac=AEAD</span><br><span class="line">AES128-SHA256           TLSv1.2 Kx=RSA      Au=RSA  Enc=AES(128)  Mac=SHA256</span><br><span class="line">AES128-SHA              SSLv3 Kx=RSA      Au=RSA  Enc=AES(128)  Mac=SHA1</span><br><span class="line">CAMELLIA128-SHA256      TLSv1.2 Kx=RSA      Au=RSA  Enc=Camellia(128) Mac=SHA256</span><br><span class="line">CAMELLIA128-SHA         SSLv3 Kx=RSA      Au=RSA  Enc=Camellia(128) Mac=SHA1</span><br><span class="line">ECDHE-RSA-RC4-SHA       SSLv3 Kx=ECDH     Au=RSA  Enc=RC4(128)  Mac=SHA1</span><br><span class="line">ECDHE-ECDSA-RC4-SHA     SSLv3 Kx=ECDH     Au=ECDSA Enc=RC4(128)  Mac=SHA1</span><br><span class="line">RC4-SHA                 SSLv3 Kx=RSA      Au=RSA  Enc=RC4(128)  Mac=SHA1</span><br><span class="line">RC4-MD5                 SSLv3 Kx=RSA      Au=RSA  Enc=RC4(128)  Mac=MD5</span><br><span class="line">ECDHE-RSA-DES-CBC3-SHA  SSLv3 Kx=ECDH     Au=RSA  Enc=3DES(168) Mac=SHA1</span><br><span class="line">ECDHE-ECDSA-DES-CBC3-SHA SSLv3 Kx=ECDH     Au=ECDSA Enc=3DES(168) Mac=SHA1</span><br><span class="line">EDH-RSA-DES-CBC3-SHA    SSLv3 Kx=DH       Au=RSA  Enc=3DES(168) Mac=SHA1</span><br><span class="line">DES-CBC3-SHA            SSLv3 Kx=RSA      Au=RSA  Enc=3DES(168) Mac=SHA1</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>OpenSSL</category>
      </categories>
      <tags>
        <tag>OpenSSL</tag>
      </tags>
  </entry>
  <entry>
    <title>大屏抽奖项目总结</title>
    <url>/posts/Project/7b8a2e1a.html</url>
    <content><![CDATA[<p>本次大屏抽奖项目采用纯前端技术实现。</p>
<a id="more"></a>

<h2 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h2><ol>
<li>一等奖与其他奖项的抽奖人员名单不同。</li>
<li>三等奖需抽取两次。</li>
<li>抽奖人员名单在抽奖当日提供 Excel 文件。</li>
<li>大屏展示抽奖页面，共有三种状态切换：<ol>
<li>等待抽奖：抽奖未开始时展示效果。</li>
<li>开始抽奖：动画展示抽奖人员名单。</li>
<li>停止抽奖：展示中奖人员名单。</li>
</ol>
</li>
</ol>
<h2 id="项目实现方案"><a href="#项目实现方案" class="headerlink" title="项目实现方案"></a>项目实现方案</h2><p>设计页面介绍：</p>
<ol>
<li>抽奖页：此页面将投放至大屏展示。</li>
<li>抽奖操控页：此页面由抽奖人根据主持人指示操作开始、结束抽奖。</li>
<li>Excel 文件数据提取页：用于将甲方提供的中奖人员名单转换成 <code>json</code> 数据格式保存至 <code>localStorage</code> 中。</li>
<li>恢复页：用于恢复抽奖页状态。<ol>
<li>各奖项抽奖中、各奖项中奖人员名单。</li>
<li>等待抽奖。</li>
<li>导出中奖人员名单：将中奖人员的 <code>json</code> 数据导出至 Excel 文件中。</li>
</ol>
</li>
</ol>
<p>项目采用 <code>localStorage</code> 来进行页面间的消息存储。</p>
<ul>
<li><p>抽奖页通过 <code>setIntval</code> 定时器监听 <code>localStorage</code> 中<code>操作项</code>值的变化，来进行页面中元素展现。</p>
</li>
<li><p>抽奖操控页实现奖品的抽取及操作项状态的变更。</p>
</li>
</ul>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol>
<li><p>页面设计的尺寸在大屏上展示的效果不理想：可以试试 <code>ctrl -</code> 、<code>ctrl +</code> 缩放下页面。</p>
<blockquote>
<p>大屏也只是个屏幕而已，电脑连接上后，选择扩展屏幕，将抽奖页拖动到大屏屏幕，然后全屏展示即可：</p>
<ul>
<li><p>Windows：<code>F11</code> 全屏。</p>
</li>
<li><p>MacOS：<code>Command</code> + <code>Ctrl</code> +  <code>F</code> Chrome窗口最大化（隐藏菜单栏及Docker栏），<code>Command</code> + <code>Shift</code> + <code>F</code> Chrome全屏（隐藏Chrome 的 tab 标签栏及地址栏）。</p>
</li>
</ul>
</blockquote>
</li>
<li><p>注意原数据格式问题：因甲方提供的是 Excel 文件，其中的人员名单保存到 json 中时要特别注意人名中有可能存在 <code>\n</code>，<code>\t</code> 等特殊字符，这些特殊字符需提前处理掉，不然在中奖名单中就会像这样展示：<code>王\t五</code>。</p>
</li>
<li><p>注意中奖人员姓名拼接问题：甲方提供的人员名单中 <code>姓</code> 与 <code>名</code> 是拆开的。在对其进行合并时要注意中文姓名中间不能加空格，英文姓名则需要加空格。</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isAllChinese</span>(<span class="params">str</span>) </span>{</span><br><span class="line">  <span class="keyword">const</span> reg = <span class="regexp">/[^\u4e00-\u9fa5]/</span>;</span><br><span class="line">  <span class="keyword">return</span> !reg.test(str);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>注意抽奖端操控便利性问题：鼠标点击不如键位便捷准确，在进行奖品选项选择时可通过监听键盘：数字1、数字2、数字3 来对应奖品：一等奖、二等奖、三等奖。绑定 <code>Enter</code> 键代替鼠标点击 <code>开始抽奖</code>、<code>停止抽奖</code>、<code>返回</code> 按钮。</p>
<blockquote>
<ol>
<li>你不知道场控方提供的电脑是否带外接鼠标，场地是否有足够的空间来操作鼠标。警惕：<strong>触摸板</strong>。</li>
<li>第二个为什么要用键盘来代替鼠标的理由：你看看中控台就知道了，全是实体键位操控。</li>
</ol>
</blockquote>
</li>
<li><p>注意采集卡传输分辨率。</p>
<p>如果采集卡传输分辨率是1920*1080，而屏显分辨率是 2048*768。则页面设计的时候最好做两版。因为你不知道场控方是否可以调整采集卡分辨率，调整后是否有背景图失真情况。</p>
<blockquote>
<p>在彩排时发现图片及文字在最终屏幕上有变形，经与场控方沟通后才得知采集卡分辨率是1920*1080，而我们是按照屏显 2048*768做的。在配合场控方调整外屏分辨率时，虽然文字及图片显示正常了，但是图片失真很严重。在调回原始分辨率后图片也失真，无法还原到初始状态了。更换到另一个采集卡</p>
</blockquote>
</li>
</ol>
<h2 id="项目收尾"><a href="#项目收尾" class="headerlink" title="项目收尾"></a>项目收尾</h2><p>因程序是放在场控方提供的电脑上运行，应甲方数据保密要求需处理好善后工作。</p>
<ol>
<li><p>清除 <code>localStroage</code> 中的全部数据。</p>
</li>
<li><p>删除抽奖程序：<code>shift</code> + <code>delete</code> 键删除。</p>
<blockquote>
<p>这里有个小插曲哈，第一次删除的时候没按 <code>shift</code> 键，文件进到回收站了，而回收站又打不开：</p>
<p><code>Win + R</code> 打开 <code>cmd</code> 命令行。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">rd /s /q C:<span class="variable">$Recycle</span>.Bin</span><br></pre></td></tr></tbody></table></figure>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>Project</tag>
      </tags>
  </entry>
  <entry>
    <title>用Flex编译as成swf文件</title>
    <url>/posts/%E5%85%B6%E4%BB%96/5cda1e24.html</url>
    <content><![CDATA[<p>本来想重新编译下 SWFUpload.swf 文件，但不料失败，原因是我对 flex 的<code>mxmlc</code>还不够了解, 有知道的大神请指教一二, 小弟在此先行谢过了…<br>本文简单介绍一下如何编译一个简单的 as 文件。</p>
<a id="more"></a>

<p>vim test.as, 创建一个测试 as 文件，并将以下添加内容:</p>
<figure class="highlight as"><table><tbody><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">package</span> {</span></span><br><span class="line">	<span class="meta"><span class="meta-keyword">import</span> flash.display.Sprite;</span></span><br><span class="line">	<span class="meta"><span class="meta-keyword">import</span> flash.text.TextField;</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ate</span> <span class="keyword">extends</span> <span class="title">Sprite</span> </span>{</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> container:Sprite;</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">var</span> text:TextField;</span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ate</span><span class="params">()</span>:void </span>{</span><br><span class="line">			container = <span class="keyword">new</span> Sprite();</span><br><span class="line">			text = <span class="keyword">new</span> TextField();</span><br><span class="line">			text.text = <span class="string">'Hello ActionScript!'</span>;</span><br><span class="line">			addChild(container);</span><br><span class="line">			container.addChild(text);</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h3 id="下载-amp-amp-安装工具"><a href="#下载-amp-amp-安装工具" class="headerlink" title="下载 &amp;&amp; 安装工具"></a>下载 &amp;&amp; 安装工具</h3><p>下载 <a href="http://flex.apache.org/download-source.html">apache-flex-sdk</a>, 我使用的版本是 4.16.0 for Mac.</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">tar zxf ~/Downloads/apache-flex-sdk-4.16.0-bin.tar.gz</span><br><span class="line">cd apache-flex-sdk-4.16.0-bin/bin</span><br></pre></td></tr></tbody></table></figure>

<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p>./mxmlc path/to/test.as</p>
<p>编译成功后将生成 path/to/test.swf 文件</p>
<h4 id="所遇错误及解决方案"><a href="#所遇错误及解决方案" class="headerlink" title="所遇错误及解决方案:"></a>所遇错误及解决方案:</h4><p>若提示以下信息:<br><img data-src="5cda1e24/flex_error_1.png" alt="flex_error_1"><br>首先, 打开<code>flex-config.xml</code>文件，查看<code>swf-version</code>版本，我的是<code>14</code> 对应<code>playerglobal.swc</code>版本是<code>11.1</code>(其他的比如: 15 就对应 11.2)。</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">vim /Users/codezm/Downloads/apache-flex-sdk-4.16.0-bin/frameworks/flex-config.xml</span><br></pre></td></tr></tbody></table></figure>
<p>打开 <a href="https://helpx.adobe.com/flash-player/kb/archived-flash-player-versions.html">此网页</a> 下载对应版本<code>playerglobal.swc</code></p>
<p>并将<code>{playerglobalHome}</code>替换成你下载的PATH, 配置文件中有两处位置需要替换。</p>
<h4 id="后期"><a href="#后期" class="headerlink" title="后期"></a>后期</h4><p>以后有时间再来试试重新编译 SWFUpload.as 文件(目前不知道如何在编译的时候再引入其他编译包如: FileItem.as)吧~</p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>Svn 使用记录</title>
    <url>/posts/svn/aa49ebb1.html</url>
    <content><![CDATA[<h1 id="Svn-使用记录"><a href="#Svn-使用记录" class="headerlink" title="Svn 使用记录"></a>Svn 使用记录</h1><a id="more"></a>

<h1 id="changelist-分组"><a href="#changelist-分组" class="headerlink" title="changelist 分组"></a>changelist 分组</h1><p><a href="http://www.letuknowit.com/archives/usage-of-svn-changelist/">http://www.letuknowit.com/archives/usage-of-svn-changelist/</a></p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">svn cl dept a.txt</span><br><span class="line">svn commit --changelist issue1729 -m "Fixing Issue 1729."</span><br><span class="line">svn commit application/admin/view/system/user application/admin/view/system/dept "部门"</span><br><span class="line">svn commit --changelist dept -m "部门"</span><br></pre></td></tr></tbody></table></figure>

<h2 id="恢复指定版本文件"><a href="#恢复指定版本文件" class="headerlink" title="恢复指定版本文件"></a>恢复指定版本文件</h2><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">svn revert -R 971 public/assets/js/backend/system/role.js</span><br></pre></td></tr></tbody></table></figure>

<h2 id="一次向svn中增加所有新增文件"><a href="#一次向svn中增加所有新增文件" class="headerlink" title="一次向svn中增加所有新增文件"></a>一次向svn中增加所有新增文件</h2><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">svn st | awk '{if ( $1 == "?") { print $2}}' | xargs svn add </span><br><span class="line">svn st | grep '^\?' | tr '^\?' ' ' | sed 's/[ ]*//' | sed 's/[ ]/\\ /g' | xargs svn add</span><br></pre></td></tr></tbody></table></figure>

<h2 id="回退版本"><a href="#回退版本" class="headerlink" title="回退版本"></a>回退版本</h2><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">svn merge -r 971:970 ./</span><br></pre></td></tr></tbody></table></figure>

<h2 id="只查看前5条log版本"><a href="#只查看前5条log版本" class="headerlink" title="只查看前5条log版本:"></a>只查看前5条log版本:</h2><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">svn log -l 5</span><br></pre></td></tr></tbody></table></figure>

<h2 id="查看-971-版本提交详情"><a href="#查看-971-版本提交详情" class="headerlink" title="查看 971 版本提交详情:"></a>查看 971 版本提交详情:</h2><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">svn log -r 971 -v</span><br></pre></td></tr></tbody></table></figure>
<pre><code>------------------------------------------------------------------------
r971 | xiaozhu | 2018-03-14 20:56:40 +0800 (三, 14  3 2018) | 1 line
Changed paths:
   M /php/application/admin/controller/Dept.php
   M /php/application/admin/controller/Role.php
   M /php/application/admin/controller/system/Role.php
   M /php/application/admin/view/dept/add.html
   M /php/application/admin/view/role/add.html
   M /php/application/admin/view/role/edit.html
   M /php/application/admin/view/role/index.html
   D /php/application/admin/view/system/menu/parentNodes.html
   M /php/application/admin/view/system/role/index.html
   M /php/application/database.php
   M /php/public/assets/js/backend/role.js
   M /php/public/assets/js/backend/system/role.js

rm file.
------------------------------------------------------------------------</code></pre>
<h2 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h2><p>貌似仅适用于忽略未加入版本控制的文件<br>vim ~/.subversion/config<br>[miscellany]<br>global-ignores = .DS_Store</p>
]]></content>
      <categories>
        <category>svn</category>
      </categories>
      <tags>
        <tag>svn</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox CentOS-8 虚拟机搭建</title>
    <url>/posts/VirtualBox/ff2b433e.html</url>
    <content><![CDATA[<p>本文主要记录在 <a href="http://virtualbox.org/"><code>VirtualBox</code></a> 中安装 <code>CentOS-8</code> 虚拟操作系统(即：虚拟机)的流程。</p>
<a id="more"></a>

<h4 id="VirtualBox-创建虚拟机"><a href="#VirtualBox-创建虚拟机" class="headerlink" title="VirtualBox 创建虚拟机"></a>VirtualBox 创建虚拟机</h4><h5 id="1-新建虚拟操作系统"><a href="#1-新建虚拟操作系统" class="headerlink" title="1. 新建虚拟操作系统"></a>1. 新建虚拟操作系统</h5><pre><code> 安装 `VirtualBox` 后，在 `Oracle VM VirtualBox 管理器` 对话框中，点击 "新建" 按钮新建虚拟镜像。</code></pre>
<h5 id="2-设置：虚拟电脑名称和系统类型"><a href="#2-设置：虚拟电脑名称和系统类型" class="headerlink" title="2. 设置：虚拟电脑名称和系统类型"></a>2. 设置：虚拟电脑名称和系统类型</h5><p>名称中填入 <code>CentOS8-Base</code>，点击 <code>创建</code> 按钮。</p>
<p><img data-src="ff2b433e/image-20200908203824880.png" alt="image-20200908203824880"></p>
<h5 id="3-设置文件大小"><a href="#3-设置文件大小" class="headerlink" title="3. 设置文件大小"></a>3. 设置文件大小</h5><p>​    将文件大小：由 8GB 改为 20GB，点击 <code>创建</code> 按钮。</p>
<p><img data-src="ff2b433e/image-20200908203914660.png" alt="image-20200908203914660"></p>
<h5 id="4-下载-CentOS-系统镜像ISO文件"><a href="#4-下载-CentOS-系统镜像ISO文件" class="headerlink" title="4. 下载 CentOS 系统镜像ISO文件"></a>4. 下载 CentOS 系统镜像ISO文件</h5><p>​    在此推荐使用国内 <a href="https://mirrors.aliyun.com/centos/">阿里云</a> 镜像库下载，<a href="https://mirrors.aliyun.com/centos/8.1.1911/isos/x86_64/CentOS-8.1.1911-x86_64-boot.iso">点击即可下载 <code>CentOS-8.1.1911-x86_84</code> 版本 ISO 文件</a> （提示：伴随最新版 iso 文件发布，阿里云将终止旧版 iso 文件下载）。</p>
<h5 id="5-装载系统镜像文件"><a href="#5-装载系统镜像文件" class="headerlink" title="5. 装载系统镜像文件"></a>5. 装载系统镜像文件</h5><p>​    在 <code>第二IDE控制器主通道</code> 文本后，点击 <code>[光驱] 没有盘片</code> 选择刚下载的系统ISO文件，点击 <code>启动</code> 按钮，启动虚拟机，接下来进入系统安装操作。</p>
<p><img data-src="ff2b433e/image-20200908205425177.png" alt="image-20200908205425177"></p>
<h4 id="CentOS-8-系统安装"><a href="#CentOS-8-系统安装" class="headerlink" title="CentOS - 8 系统安装"></a>CentOS - 8 系统安装</h4><h5 id="1-选择启动事项：Install-CentOS-Linux-8"><a href="#1-选择启动事项：Install-CentOS-Linux-8" class="headerlink" title="1. 选择启动事项：Install CentOS Linux 8"></a>1. 选择启动事项：<code>Install CentOS Linux 8</code></h5><p>​    鼠标点击新启动的虚拟机对话框内部，将光标及键盘操作定位于虚拟机对话框，在系统启动界面选择第一项 <code>Install CentOS Linux 8</code> 按下 <code>Enter</code> 键，稍等片刻即进入系统安装界面。</p>
<blockquote>
<p>注意：1. 此处默认第二项是选中的，按下键盘的上方向键即可。</p>
<p>​            2. 按下 <code>⌘ </code> 键，即可将鼠标焦点移出虚拟机对话框。</p>
</blockquote>
<p><img data-src="ff2b433e/image-20200908210347651.png" alt="image-20200908210347651"></p>
<h5 id="2-配置安装过程使用语言：中文"><a href="#2-配置安装过程使用语言：中文" class="headerlink" title="2. 配置安装过程使用语言：中文"></a>2. 配置安装过程使用语言：中文</h5><p>​    安装过程中选择 <code>中文</code> 语言，点击 <code>继续</code> 按钮。</p>
<p><img data-src="ff2b433e/image-20200908210902402.png" alt="image-20200908210902402"></p>
<h5 id="3-安装信息摘要：配置初始"><a href="#3-安装信息摘要：配置初始" class="headerlink" title="3. 安装信息摘要：配置初始"></a>3. 安装信息摘要：配置初始</h5><p>​    在 <code>安装信息摘要</code> 窗口中，首先进行 <code>网络和主机名</code> 配置。</p>
<p><img data-src="ff2b433e/image-20200908211736233.png" alt="image-20200908211736233"></p>
<h5 id="4-网络和主机名"><a href="#4-网络和主机名" class="headerlink" title="4. 网络和主机名"></a>4. 网络和主机名</h5><p>​    点击 <code>网络和主机名</code> 文本，打开 <code>网络和主机名</code> 窗口。在 <code>网络和主机名</code> 窗口中，设置主机名，并点击 <code>应用</code> 按钮，将 <code>以太网（enp0s3）</code> 开关打开，点击左上角 <code>完成</code> 按钮，完成本项配置。回到主窗口后会发现 <code>安装源</code> 正在下载元数据，下载完成后，该选项也有灰色不可点击状态变成可点击状态了。</p>
<p><img data-src="ff2b433e/image-20200908212153813.png" alt="image-20200908212153813"></p>
<h5 id="5-语言支持"><a href="#5-语言支持" class="headerlink" title="5. 语言支持"></a>5. 语言支持</h5><p>设置 <code>语言支持</code>，点击 <code>语言支持</code> 文本，打开 <code>语言支持</code> 窗口，在 <code>选择要安装的其他语言支持</code> 列表中，增加 <code>English</code> 中的 <code>English(United States)</code> 语言，点击 <code>完成</code> 按钮，完成本项配置。</p>
<blockquote>
<p>提示：若无需增设语言支持，可忽略此项设置，使用默认语言支持即可，非安装前必须配置项。</p>
</blockquote>
<p><img data-src="ff2b433e/image-20200908214748730.png" alt="image-20200908214748730"></p>
<h5 id="6-时间和日期"><a href="#6-时间和日期" class="headerlink" title="6. 时间和日期"></a>6. 时间和日期</h5><p>设置 <code>时间和日期</code> ，默认是 <code>美洲/纽约</code> 时区，若不进行设置安装完成后将会发现时间差 <code>8</code> 小时。点击 <code>时间和日期</code>，进入 <code>时间和日期窗口</code>，设置地区为 <code>亚洲</code>，城市为 <code>上海</code> 。点击 <code>完成</code> 按钮，完成本项配置。</p>
<blockquote>
<p>提示：鼠标点击地图操作会更快捷。</p>
</blockquote>
<p><img data-src="ff2b433e/image-20200908212833234.png" alt="image-20200908212833234"></p>
<h5 id="7-软件选择"><a href="#7-软件选择" class="headerlink" title="7. 软件选择"></a>7. 软件选择</h5><p>设置 <code>软件选择</code> ，点击 <code>软件选择</code> 文本，打开 <code>软件安装</code> 窗口。在基础环境中选择 <code>最小安装</code>，保持默认 <code>已选环境的额外软件</code> 列表中未选中任何附加软件包。点击 <code>完成</code> 按钮，完成本项配置。</p>
<blockquote>
<p>注：此处需根据自身需求，选择安装基础环境、软件。</p>
</blockquote>
<p><img data-src="ff2b433e/image-20200908213437875.png" alt="image-20200908213437875"></p>
<h5 id="8-安装目的地"><a href="#8-安装目的地" class="headerlink" title="8. 安装目的地"></a>8. 安装目的地</h5><p>设置 <code>安装目的地</code>，点击 <code>安装目的地</code> 文本，打开 <code>安装目标位置</code> 对话框。点击两次 <code>本地标准磁盘</code>，点击 <code>完成</code> 按钮，完成本项配置。</p>
<blockquote>
<p>注：此处主要是确认机制，即：确认选择默认安装目的地。</p>
</blockquote>
<p><img data-src="ff2b433e/image-20200908213905844.png" alt="image-20200908213905844">完成本项操作后，右下角的 <code>开始安装</code> 按钮即变成可点击操作了，说明已完成所有安装前配置事项。</p>
<h5 id="9-安装信息摘要：配置完结"><a href="#9-安装信息摘要：配置完结" class="headerlink" title="9. 安装信息摘要：配置完结"></a>9. 安装信息摘要：配置完结</h5><p>安装配置如下图所示：</p>
<blockquote>
<p>注：还可按需设置：<code>键盘</code>、<code>安装源</code>、<code>KDUMP</code>、<code>安全策略</code>。</p>
</blockquote>
<p><img data-src="ff2b433e/image-20200908214956213.png" alt="image-20200908214956213"></p>
<h5 id="10-根密码"><a href="#10-根密码" class="headerlink" title="10. 根密码"></a>10. 根密码</h5><p>设置 <code>根密码</code> 即：root 账号密码，点击 <code>根密码</code> 文本，打开 <code>ROOT 密码</code> 窗口。可以设置个简单易记的密码如：<code>root</code>，后期可再更改为强口令密码，提升账号安全等级。密码太短需点击两次 <code>完成</code> 按钮，完成本项配置。</p>
<blockquote>
<p>注：一定要记住所设置的密码，安装完成后需要使用此密码来登录操作系统。执行 <code>root</code> 相关命令权限。</p>
</blockquote>
<p><img data-src="ff2b433e/image-20200908215417828.png" alt="image-20200908215417828"></p>
<h5 id="11-创建用户"><a href="#11-创建用户" class="headerlink" title="11. 创建用户"></a>11. 创建用户</h5><p>设置 <code>创建用户</code>，点击 <code>创建用户</code> ，打开 <code>创建用户</code> 窗口。配置如图所示，点击 <code>完成</code> 按钮，完成本项配置。</p>
<blockquote>
<p>提示：此项非必须设置项，无此需求者可略过。</p>
</blockquote>
<p><img data-src="ff2b433e/image-20200908215516654.png" alt="image-20200908215516654"></p>
<h5 id="12-移除虚拟盘、重启"><a href="#12-移除虚拟盘、重启" class="headerlink" title="12. 移除虚拟盘、重启"></a>12. 移除虚拟盘、重启</h5><p>等待系统安装完毕后，返回 <code>Oracle VM VirtualBox 管理器</code> 窗口，在 <code>第二IDE控制器主通道</code>点击刚挂载的虚拟光驱，选择 <code>移除虚拟盘</code> 选项，在 <code>虚拟机</code> 窗口中，点击 <code>重启</code> 按钮，重新启动虚拟机。</p>
<p><img data-src="ff2b433e/image-20200908220527015.png" alt="image-20200908220527015"></p>
<h4 id="系统登录"><a href="#系统登录" class="headerlink" title="系统登录"></a>系统登录</h4><p>重新启动后，输入登录账号及密码，即可登录操作系统。</p>
<blockquote>
<p>提示：在输入密码时，密码将不展示，输入完毕后按 <code>Enter</code> 键即可成功登录系统。使用 <code>su</code> 命令可切换其他账号，下图操作先使用 <code>codezm</code> 账号成功登录系统后，再使用 <code>su root</code> 名称成功切换成 <code>root</code> 账号。</p>
</blockquote>
<p><img data-src="ff2b433e/image-20200908221222026.png" alt="image-20200908221222026"></p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://zhuanlan.zhihu.com/p/85807189">CentOS 8 图形化界面安装图解</a></li>
</ul>
]]></content>
      <categories>
        <category>VirtualBox</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>VirtualBox</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox CentOS-8 虚拟机配置</title>
    <url>/posts/CentOS/a51399a8.html</url>
    <content><![CDATA[<p>为了后续能重复使用虚拟机，下面将进行简单配置。</p>
<a id="more"></a>

<h4 id="无界面方式启动虚拟机"><a href="#无界面方式启动虚拟机" class="headerlink" title="无界面方式启动虚拟机"></a>无界面方式启动虚拟机</h4><p>可通过使用 <code>VBoxManage</code> 命令行工具，使无界面方式启动 <code>CentOS8-base</code> 虚拟机，也可至 <code>Oracle VM VirtualBox 管理器</code> 图像界面，在 <code>启动</code> 下拉框中，选择 <code>无界面启动</code> 方式启动虚拟机。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">VBoxManage startvm --type headless CentOS8-base</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>提示：<code>CentOS8-base</code> 是虚拟机名称，可更改。</p>
</blockquote>
<h4 id="切换登录账号"><a href="#切换登录账号" class="headerlink" title="切换登录账号"></a>切换登录账号</h4><p>因大部分配置需要 <code>ROOT </code> 权限，若登录时非 <code>ROOT</code> 账号，需切换至 <code>ROOT</code> 账号，操作命令如下：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[codezm@codezm ~]$ su root</span><br><span class="line">密码：</span><br><span class="line">[root@codezm codezm]<span class="comment">#</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h4><h5 id="使用端口转发功能，使-Host-主机可访问-Guest-虚拟机"><a href="#使用端口转发功能，使-Host-主机可访问-Guest-虚拟机" class="headerlink" title="使用端口转发功能，使 Host 主机可访问 Guest 虚拟机"></a>使用端口转发功能，使 Host 主机可访问 Guest 虚拟机</h5><ol>
<li><p>右击 <code>CenOS8-Base</code> 虚拟机选择 <code>设置</code> 选项。</p>
</li>
<li><p>选择 <code>网络</code> 配置项，默认网络连接方式是 <code>网络地址转换(NAT)</code>。</p>
<p>在无界面方式启动虚拟机的情况下 <code>Host</code> 主机无法直接操作 <code>Guest</code> 虚拟机。可通过 <code>端口转发</code> 功能，使主机通过 <code>ssh</code> 命令登录虚拟机。这样就可以在主机上更方便的操作虚拟机了。</p>
<blockquote>
<p>注：</p>
<ol>
<li>此处也可将连接方式调整为 <code>桥接网卡</code>，就不需要配置端口转发了。</li>
<li>连接方式 <code>网络地址转换(NAT)</code> 与 <code>NAT 网络</code> 区别是前者具有 <code>端口转发</code> 功能，而后者则没有。</li>
<li><code>NAT 协议</code> 通过具有 <code>公网IP</code> 的 <code>Host</code> 主机作为代理，以使无 <code>公网IP</code> 的 <code>Guest</code> 虚拟机具有互联网访问的需求。</li>
</ol>
</blockquote>
</li>
</ol>
<p><img data-src="a51399a8/image-20200908225249484.png" alt="image-20200908225249484"></p>
<ol start="3">
<li>点击 <code>端口转发</code> 按钮，添加 <code>主机端口</code>、<code>子系统端口</code>，点击 <code>OK</code> 按钮，完成配置。</li>
</ol>
<p><img data-src="a51399a8/image-20200908225257218.png" alt="image-20200908225257218"></p>
<ol start="4">
<li><p>在主机上执行以下命令，即可登录虚拟机。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ssh codezm@127.0.0.1 -p 2222</span><br></pre></td></tr></tbody></table></figure>

</li>
</ol>
<p><img data-src="a51399a8/image-20200908225425768.png" alt="image-20200908225425768"></p>
<h5 id="使用独立IP，使-Host-主机可访问-Guest-虚拟机"><a href="#使用独立IP，使-Host-主机可访问-Guest-虚拟机" class="headerlink" title="使用独立IP，使 Host 主机可访问 Guest 虚拟机"></a>使用独立IP，使 Host 主机可访问 Guest 虚拟机</h5><p>点击顶部菜单 <code>管理</code> -&gt; <code>网络主机管理器</code>，点击 <code>创建</code> 按钮，在 <code>手动配置网卡</code> 选项卡中，设置 <code>IPv4 地址</code>：<code>172.16.96.0</code>，<code>IPv4 网络掩码</code> ：<code>255.255.0.0</code>。</p>
<p><img data-src="a51399a8/image-20200909100115329.png" alt="image-20200909100115329"></p>
<p>关闭 <code>CentOS8-Base</code> 虚拟机，新增 <code>网卡 2</code> ，配置如图所示：</p>
<p><img data-src="a51399a8/image-20200909100746300.png" alt="image-20200909100746300"></p>
<p>配置完成后，启动虚拟机。使用 <code>ip addr</code> 命令，查看当前网卡信息：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[root@codezm codezm]<span class="comment"># ip addr</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: enp0s3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    link/ether 08:00:27:6d:5c:db brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.0.2.15/24 brd 10.0.2.255 scope global dynamic noprefixroute enp0s3</span><br><span class="line">       valid_lft 86317sec preferred_lft 86317sec</span><br><span class="line">    inet6 fe80::2cf0:d866:635e:9e53/64 scope link noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: enp0s8: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    link/ether 08:00:27:4a:ac:eb brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet6 fe80::b4e6:c6da:f397:646/64 scope link noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">       </span><br><span class="line">[root@codezm codezm]<span class="comment"># cat /etc/sysconfig/network-scripts/ifcfg-enp0s3</span></span><br><span class="line">TYPE=<span class="string">"Ethernet"</span></span><br><span class="line">PROXY_METHOD=<span class="string">"none"</span></span><br><span class="line">BROWSER_ONLY=<span class="string">"no"</span></span><br><span class="line">BOOTPROTO=<span class="string">"dhcp"</span></span><br><span class="line">DEFROUTE=<span class="string">"yes"</span></span><br><span class="line">IPV4_FAILURE_FATAL=<span class="string">"no"</span></span><br><span class="line">IPV6INIT=<span class="string">"yes"</span></span><br><span class="line">IPV6_AUTOCONF=<span class="string">"yes"</span></span><br><span class="line">IPV6_DEFROUTE=<span class="string">"yes"</span></span><br><span class="line">IPV6_FAILURE_FATAL=<span class="string">"no"</span></span><br><span class="line">IPV6_ADDR_GEN_MODE=<span class="string">"stable-privacy"</span></span><br><span class="line">NAME=<span class="string">"enp0s3"</span></span><br><span class="line">UUID=<span class="string">"e666abf3-3560-4c19-80de-9e18fe6e0a90"</span></span><br><span class="line">DEVICE=<span class="string">"enp0s3"</span></span><br><span class="line">ONBOOT=<span class="string">"yes"</span></span><br></pre></td></tr></tbody></table></figure>



<p>设置 <code>enp0s8</code> 网卡配置：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[root@codezm codezm]<span class="comment"># cp /etc/sysconfig/network-scripts/ifcfg-enp0s3 /etc/sysconfig/network-scripts/ifcfg-enp0s8</span></span><br><span class="line">[root@codezm codezm]<span class="comment"># vi /etc/sysconfig/network-scripts/ifcfg-enp0s8</span></span><br><span class="line">[root@codezm codezm]<span class="comment"># cat /etc/sysconfig/network-scripts/ifcfg-enp0s8</span></span><br><span class="line"></span><br><span class="line">TYPE=<span class="string">"Ethernet"</span></span><br><span class="line">PROXY_METHOD=<span class="string">"none"</span></span><br><span class="line">BROWSER_ONLY=<span class="string">"no"</span></span><br><span class="line">BOOTPROTO=<span class="string">"static"</span></span><br><span class="line">DEFROUTE=<span class="string">"yes"</span></span><br><span class="line">IPADDR=172.16.96.1</span><br><span class="line">IPV4_FAILURE_FATAL=<span class="string">"no"</span></span><br><span class="line">IPV6INIT=<span class="string">"yes"</span></span><br><span class="line">IPV6_AUTOCONF=<span class="string">"yes"</span></span><br><span class="line">IPV6_DEFROUTE=<span class="string">"yes"</span></span><br><span class="line">IPV6_FAILURE_FATAL=<span class="string">"no"</span></span><br><span class="line">IPV6_ADDR_GEN_MODE=<span class="string">"stable-privacy"</span></span><br><span class="line">NAME=<span class="string">"enp0s8"</span></span><br><span class="line">UUID=<span class="string">"e666abf3-3560-4c19-80de-9e18fe6e0a91"</span></span><br><span class="line">DEVICE=<span class="string">"enp0s8"</span></span><br><span class="line">ONBOOT=<span class="string">"yes"</span></span><br></pre></td></tr></tbody></table></figure>

<p>重新加载网卡配置，启动 <code>enp0s8</code> 网卡：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[root@codezm codezm]<span class="comment"># nmcli c reload</span></span><br><span class="line">[root@codezm codezm]<span class="comment"># nmcli c up enp0s8</span></span><br></pre></td></tr></tbody></table></figure>

<p>再次，通过 <code>ip addr</code> 确认网络配置：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[root@codezm codezm]<span class="comment"># ip addr</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: enp0s3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    link/ether 08:00:27:6d:5c:db brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.0.2.15/24 brd 10.0.2.255 scope global dynamic noprefixroute enp0s3</span><br><span class="line">       valid_lft 86392sec preferred_lft 86392sec</span><br><span class="line">    inet6 fe80::2cf0:d866:635e:9e53/64 scope link noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: enp0s8: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    link/ether 08:00:27:4a:ac:eb brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.16.96.1/16 brd 172.16.255.255 scope global noprefixroute enp0s8</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::d807:c239:8574:695c/64 scope link noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></tbody></table></figure>



<p>此时 Host 主机即可通过 <code>ssh codezm@172.16.96.1</code> 登录宿主机了，不需要再使用NAT的端口转发功能操作宿主机。 </p>
<h4 id="减少开机启动时间"><a href="#减少开机启动时间" class="headerlink" title="减少开机启动时间"></a>减少开机启动时间</h4><p>虚拟机启动后，默认会在系统选择界面等待 <code>5</code> 秒，5秒后无操作则启动系统。为减少开机等待时间，可修改等待时长。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[root@codezm codezm]<span class="comment"># vi /boot/grub2/grub.cfg</span></span><br></pre></td></tr></tbody></table></figure>

<p>vi <code>normal</code> 模式下键入 <code>:65</code> 更改 <code>set timeout=5</code> 为 <code>set timeout=0</code>。</p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://rqsir.github.io/2019/05/23/VirtualBox-%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/">VirtualBox-网络模式总结</a></li>
</ul>
]]></content>
      <categories>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>VirtualBox</tag>
      </tags>
  </entry>
  <entry>
    <title>VBoxManage 使用</title>
    <url>/posts/Tools/19e95358.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>VBoxManage</code> 是 Oracle VirtualBox 的命令行界面工具，它允许用户通过命令行管理虚拟机。</p>
<a id="more"></a>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h4 id="列出所有已创建的虚拟机"><a href="#列出所有已创建的虚拟机" class="headerlink" title="列出所有已创建的虚拟机"></a>列出所有已创建的虚拟机</h4><p>VBoxManage list hdds</p>
<h4 id="修改虚拟机大小"><a href="#修改虚拟机大小" class="headerlink" title="修改虚拟机大小"></a>修改虚拟机大小</h4><p>VBoxManage modifyhd /Users/codezm/VirtualBox\ VMs/win10/win10.vdi –resize 60496</p>
<h4 id="如何让局域网其他电脑访问-docker-web地址"><a href="#如何让局域网其他电脑访问-docker-web地址" class="headerlink" title="如何让局域网其他电脑访问 docker web地址?"></a>如何让局域网其他电脑访问 docker web地址?</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">VBoxManage modifyvm “boot2docker-vm” --natpf1 “tcp-port<span class="variable">$i</span>,tcp,,8080,,80”;</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>VirtualBox</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox 虚拟机复制、导出与导入</title>
    <url>/posts/VirtualBox/f3ae85c7.html</url>
    <content><![CDATA[<p>通过 <a href="/posts/ff2b433e.html">VirtualBox CentOS-8 虚拟机搭建</a>、<a href="/posts/a51399a8.html">VirtualBox CentOS-8 虚拟机配置</a> 两篇文章成功搭建并简单配置了 <code>CentOS</code> 虚拟机，本篇将讲解如何将虚拟机共享给他人或者复制出多台虚拟机以供使用。</p>
<p>系统、软件版本：</p>
<ul>
<li>System：macOS Majave 10.14.6</li>
<li>VirtualBox: 6.0.22 r137980 (Qt5.6.3)</li>
</ul>
<a id="more"></a>

<h4 id="虚拟机复制"><a href="#虚拟机复制" class="headerlink" title="虚拟机复制"></a>虚拟机复制</h4><p>可通过将现有的虚拟机为基础，快速复制出多台虚拟机。</p>
<p>操作步骤：</p>
<ol>
<li>右击 <code>CentOS8-Base</code> 虚拟机，在右键菜单中选择 <code>复制</code> 选项。</li>
<li>在 <code>新虚拟电脑名称和保存路径</code> 对话框中，设置虚拟机名称：<code>CentOS8-172.16.96.2</code>，点击 <code>继续</code> 按钮。</li>
</ol>
<p><img data-src="f3ae85c7/image-20200909103130354.png" alt="image-20200909103130354"></p>
<ol start="3">
<li>在 <code>副本类型</code> 对话框中，选择 <code>完全复制</code> ，点击 <code>复制</code> 按钮，即可完成虚拟机复制操作。</li>
</ol>
<p><img data-src="f3ae85c7/image-20200909103150494.png" alt="image-20200909103150494"></p>
<p>关闭 <code>CentOS8-Base</code> 虚拟机，启动 <code>CentOS8-172.16.96.2</code> 虚拟机</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ VBoxManage startvm --<span class="built_in">type</span> headless CentOS8-172.16.96.2</span><br><span class="line">$ ssh root@172.16.96.1</span><br><span class="line">root@172.16.96.1<span class="string">'s password:</span></span><br><span class="line"><span class="string">Last login: Tue Sep  8 22:16:33 2020 from 172.16.96.0</span></span><br><span class="line"><span class="string">[root@codezm ~]# </span></span><br></pre></td></tr></tbody></table></figure>



<p>更改 IP 地址为 <code>172.16.96.2</code></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[root@codezm ~]<span class="comment"># vi /etc/sysconfig/network-scripts/ifcfg-enp0s8</span></span><br><span class="line">[root@codezm ~]<span class="comment"># nmcli c reload</span></span><br><span class="line">[root@codezm ~]<span class="comment"># nmcli c up enp0s8</span></span><br></pre></td></tr></tbody></table></figure>

<p>此时终端窗口卡住了，是因为 IP 地址已由 <code>172.16.96.1</code> 更改为 <code>172.16.96.2</code> 。关闭当前终端窗口，新建终端并使用以下命令重新进入 <code>CentOS8-172.16.96.2</code>虚拟机：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ ssh root@172.16.96.2</span><br><span class="line">root@172.16.96.2<span class="string">'s password:</span></span><br><span class="line"><span class="string">Last login: Tue Sep  8 22:33:44 2020 from 172.16.96.0</span></span><br><span class="line"><span class="string">[root@codezm ~]# </span></span><br></pre></td></tr></tbody></table></figure>



<p>重复此步骤，创建 <code>CentOS8-172.16.96.3</code> 虚拟机。</p>
<h4 id="虚拟机导出"><a href="#虚拟机导出" class="headerlink" title="虚拟机导出"></a>虚拟机导出</h4><p>可以将虚拟机导出后共享给他人或进行备份。</p>
<ol>
<li>菜单选择 <code>管理</code> -&gt; <code>导出虚拟电脑...</code> 。</li>
<li>在弹出的 <code>Oracle VM VirtualBox 挂利器</code> 对话框中选择 <code>CentOS8-Base</code> 虚拟机，点击 <code>继续</code> 按钮。</li>
<li>配置 <code>虚拟电脑导出设置</code>，点击 <code>继续</code> 按钮，即可将虚拟机导出。</li>
</ol>
<p><img data-src="f3ae85c7/image-20201210122904731.png" alt="image-20201210122904731"></p>
<h4 id="虚拟机导入"><a href="#虚拟机导入" class="headerlink" title="虚拟机导入"></a>虚拟机导入</h4><ol>
<li>菜单选择 <code>管理</code> -&gt; <code>导出虚拟电脑...</code> 。</li>
<li>在弹出的 <code>要导入的虚拟电脑</code> 对话框中选择要导入的虚拟机文件，点击 <code>继续</code> 按钮。</li>
</ol>
<p><img data-src="f3ae85c7/image-20201210123145379.png" alt="image-20201210123145379"></p>
<ol start="3">
<li>配置 <code>虚拟电脑导入设置</code>，点击 <code>导入</code> 按钮，即可完成虚拟机导入操作。</li>
</ol>
<p><img data-src="f3ae85c7/image-20201210123446554.png" alt="image-20201210123446554"></p>
]]></content>
      <categories>
        <category>VirtualBox</category>
      </categories>
      <tags>
        <tag>VirtualBox</tag>
      </tags>
  </entry>
  <entry>
    <title>创建支持 SSH 服务的 docker ubuntu 镜像</title>
    <url>/posts/docker/426c17db.html</url>
    <content><![CDATA[<p>本文记录如何使用<code>docker commit</code>创建一个带有SSH服务的ubuntu镜像</p>
<a id="more"></a>
<h5 id="以交互式进入容器"><a href="#以交互式进入容器" class="headerlink" title="以交互式进入容器"></a>以交互式进入容器</h5><p>docker run -it ubuntu:latest</p>
<h5 id="安装sshd服务"><a href="#安装sshd服务" class="headerlink" title="安装sshd服务"></a>安装<code>sshd</code>服务</h5><p>apt-get update &amp;&amp; apt-get install openssh-server</p>
<h5 id="以后台常驻方式启动sshd服务"><a href="#以后台常驻方式启动sshd服务" class="headerlink" title="以后台常驻方式启动sshd服务"></a>以后台常驻方式启动<code>sshd</code>服务</h5><p>/usr/sbin/sshd -D</p>
<h5 id="查看端口及进程"><a href="#查看端口及进程" class="headerlink" title="查看端口及进程"></a>查看端口及进程</h5><p>netstat -aunpt<br>ps aux</p>
<h5 id="复制公钥信息到容器中"><a href="#复制公钥信息到容器中" class="headerlink" title="复制公钥信息到容器中"></a>复制公钥信息到容器中</h5><p>在主机(非容器内)使用<code>ssh-keygen -t rsa</code>生成rsa的公私密钥对, 将<code>~/.ssh/id_rsa.pub</code>中的内容复制到容器<code>~/.ssh/authorized_keys</code>文件中(即 粘贴客户端的公钥信息)</p>
<h5 id="创建自启动文件"><a href="#创建自启动文件" class="headerlink" title="创建自启动文件"></a>创建自启动文件</h5><p>vim /init.sh<br>添加如下信息:<br>    #!/bin/bash<br>    /usr/sbin/sshd -D<br>赋予权限<code>chmod 500 /init.sh</code></p>
<h5 id="提交容器保存为镜像方便日后使用"><a href="#提交容器保存为镜像方便日后使用" class="headerlink" title="提交容器保存为镜像方便日后使用"></a>提交容器保存为镜像方便日后使用</h5><p>docker commit $(CONTAINAER_ID) ubuntu:ubuntu_sshd</p>
<h5 id="映射端口并以常驻后台方式运行镜像"><a href="#映射端口并以常驻后台方式运行镜像" class="headerlink" title="映射端口并以常驻后台方式运行镜像"></a>映射端口并以常驻后台方式运行镜像</h5><p>docker run -p 10122:22 -d ubuntu:ubuntu_sshd /init.sh<br><code>docker ps -a</code>可查看容器状态</p>
<h5 id="客户端-非容器内-使用ssh链接"><a href="#客户端-非容器内-使用ssh链接" class="headerlink" title="客户端(非容器内)使用ssh链接"></a>客户端(非容器内)使用<code>ssh</code>链接</h5><p>ssh -i ~/.ssh/id_rsa <a href="mailto:root@192.168.99.101">root@192.168.99.101</a> -p 10122</p>
<h5 id="使用docker-cp复制文件到容器中"><a href="#使用docker-cp复制文件到容器中" class="headerlink" title="使用docker cp复制文件到容器中"></a>使用<code>docker cp</code>复制文件到容器中</h5><p>docker cp ~/.ssh/docker-sshd-authorized_keys $(CONTAINAER_ID):/root/.ssh/authorized_keys</p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>ssh</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>微信授权获取用户信息时code回调了两次</title>
    <url>/posts/WeChat/ad578931.html</url>
    <content><![CDATA[<h2 id="微信授权获取用户信息时code回调了两"><a href="#微信授权获取用户信息时code回调了两" class="headerlink" title="微信授权获取用户信息时code回调了两"></a>微信授权获取用户信息时code回调了两</h2><p>通过调用微信授权，首先要获取 <code>code</code>，微信将携带 <code>code</code> 回调至开发者指定的地址。但有部分安卓机型（截止目前发现机型有：小米）会提示 <code>errcode:40163, errmsg: code been used</code> 错误。</p>
<a id="more"></a>

<h2 id="Nginx-请求日志"><a href="#Nginx-请求日志" class="headerlink" title="Nginx 请求日志"></a>Nginx 请求日志</h2><figure class="highlight"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 正常机型</span></span><br><span class="line">10.10.10.10 - - [23/Jul/2021:17:32:37 +0800] - - - - - "GET /wap/index HTTP/1.1"</span><br><span class="line">10.10.10.10 - - [23/Jul/2021:17:32:37 +0800] - - - - - "GET /wap/index?code=021Svm1w3V3BNW22W51w39nFIa1Svm2F&amp;state=1 HTTP/1.1"</span><br><span class="line"></span><br><span class="line"><span class="comment"># 异常机型</span></span><br><span class="line">10.10.10.10 - - [23/Jul/2021:17:34:24 +0800] - - - 117.136.78.68 - "GET /wap/index HTTP/1.1"</span><br><span class="line">10.10.10.10 - - [23/Jul/2021:17:34:25 +0800] - - - 117.136.78.68 - "GET /wap/index?code=0512dXkl2E9Or74M1yml2DwBNK42dXkV&amp;state=1 HTTP/1.1"</span><br><span class="line">10.10.10.10 - - [23/Jul/2021:17:34:25 +0800] - - - - - "GET /wap/index?code=0512dXkl2E9Or74M1yml2DwBNK42dXkV&amp;state=1 HTTP/1.1"</span><br></pre></td></tr></tbody></table></figure>



<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">$sign = <span class="keyword">$this</span>-&gt;getg(<span class="string">'s'</span>, <span class="number">0</span>);</span><br><span class="line">$code = <span class="keyword">$this</span>-&gt;getg(<span class="string">'code'</span>, <span class="string">''</span>);</span><br><span class="line">$state = <span class="keyword">$this</span>-&gt;getg(<span class="string">'state'</span>, <span class="string">''</span>);</span><br><span class="line">file_put_contents(<span class="string">'/tmp/sign-'</span> . $sign . <span class="string">'.txt'</span>, date(<span class="string">'Y-m-d H:i:s'</span>, time()) . <span class="string">'-'</span> . $state . <span class="string">"-"</span> . $code . PHP_EOL, FILE_APPEND);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($code)) {</span><br><span class="line">    $state = md5(uniqid());</span><br><span class="line">    $redirect_uri = urlencode(<span class="string">'http://'</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'REQUEST_URI'</span>]);</span><br><span class="line">    <span class="keyword">if</span> ($sign == <span class="number">2</span> || $sign == <span class="number">3</span>) {</span><br><span class="line">        $redirect_uri = urlencode(<span class="string">'https://'</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'REQUEST_URI'</span>]);</span><br><span class="line">    }</span><br><span class="line">    $url =<span class="string">"https://open.weixin.qq.com/connect/oauth2/authorize?appid=<span class="subst">{$this-&gt;AppId}</span>&amp;redirect_uri=<span class="subst">{$redirect_uri}</span>&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=<span class="subst">{$state}</span>#wechat_redirect"</span>;</span><br><span class="line">    <span class="keyword">if</span> ($sign == <span class="number">1</span> || $sign == <span class="number">2</span>) {</span><br><span class="line">        Header(<span class="string">"Location:"</span> . $url);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;div style='width:100%;height:500px;line-height:500px;margin:0 auto;'&gt;&lt;a href='${url}'&gt;点击跳转&lt;/a&gt;&lt;/div&gt;"</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//第一步:取得openid</span></span><br><span class="line">$oauth2Url = <span class="string">"https://api.weixin.qq.com/sns/oauth2/access_token?appid=<span class="subst">{$this-&gt;AppId}</span>&amp;secret=<span class="subst">{$this-&gt;AppSecret}</span>&amp;code=<span class="subst">{$code}</span>&amp;grant_type=authorization_code"</span>;</span><br><span class="line">$oauth2 = <span class="keyword">$this</span>-&gt;curlGet($oauth2Url);</span><br><span class="line">$oauth2 = json_decode($oauth2, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>; var_dump($oauth2); <span class="keyword">echo</span> <span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第二步:根据全局access_token和openid查询用户信息  </span></span><br><span class="line">$access_token = $oauth2[<span class="string">"access_token"</span>];  </span><br><span class="line">$openid = $oauth2[<span class="string">'openid'</span>];</span><br><span class="line">$get_user_info_url = <span class="string">"https://api.weixin.qq.com/sns/userinfo?access_token=<span class="subst">{$access_token}</span>&amp;openid=<span class="subst">{$openid}</span>&amp;lang=zh_CN"</span>;</span><br><span class="line">$userInfo = <span class="keyword">$this</span>-&gt;curlGet($get_user_info_url);</span><br><span class="line">$userInfo = json_decode($userInfo, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>; var_dump($userInfo); <span class="keyword">echo</span> <span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br></pre></td></tr></tbody></table></figure>



<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><ol>
<li><p>安卓手机挂代理测试可正常获取用户微信信息。</p>
</li>
<li><p>无代理，使用 https 回调 <code>code</code> 也能正常获取到用户微信信息。</p>
</li>
<li><p>无代理，使用 <code>&lt;a href="跳转微信获取code链接地址"&gt;跳转&lt;/a&gt;</code> 方式，点击跳转还是会出现两次回调 <code>code</code>。</p>
<blockquote>
<p>此方式可通过数据线将手机与电脑链接，使用 <code>chrome://inspect</code> 测试发现，只请求了一次 <code>code</code> 回调，证明不是微信浏览器客户端做的两次回调 <code>code</code>，很有可能是微信客户端的代理IP做的了。</p>
</blockquote>
</li>
</ol>
<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><ol>
<li>继续使用 http 请求，不去理会 <code>code</code> 请求两次的问题，使用 <code>cookie</code>、<code>session</code> 会话保持，保存第一次 <code>code</code> 获取的用户微信信息，第二次请求时先判断 <code>cookie</code>、<code>session</code> 中是否存在用户微信信息，若存在则直接进行业务处理，不再走微信授权逻辑。</li>
<li>使用 <code>https</code> 回调 <code>code</code>，可保证只回调一次 <code>code</code>。</li>
</ol>
]]></content>
      <categories>
        <category>WeChat</category>
      </categories>
      <tags>
        <tag>WeChat</tag>
      </tags>
  </entry>
  <entry>
    <title>微信浏览器中的请求未携带referer问题</title>
    <url>/posts/WeChat/28d780a7.html</url>
    <content><![CDATA[<p>微信浏览器中的请求未携带referer问题</p>
<a id="more"></a>

<h4 id="前因"><a href="#前因" class="headerlink" title="前因"></a>前因</h4><p>业务是这样的：<code>A服务</code> 依赖于 <code>B服务</code> ，但调用 <code>B服务</code> 时，<code>B服务</code> 需要通过 <code>Referer</code> 处理业务逻辑。</p>
<p>通过下图可以看到，A、B 服务都是在 http 协议下，在调用 <code>B服务</code> 时，<code>Referer</code> 只有源信息（协议、域名、端口号），并没有携带 path、query string 等完整信息。但用其它机型是正常的，出现问题的机型信息是：</p>
<ul>
<li>手机厂商：OPPO</li>
<li>微信版本：8.0.9</li>
<li>Android 版本：11</li>
</ul>
<p><img data-src="28d780a7/image-20210812135359430.png" alt="image-20210812135359430"></p>
<h4 id="分析-User-Agent"><a href="#分析-User-Agent" class="headerlink" title="分析 User-Agent"></a>分析 User-Agent</h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">User-Agent: Mozilla/5.0 (Linux; Android 11; PEEM00 Build/RKQ1.201105.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/045807 Mobile Safari/537.36 MMWEBID/5689 MicroMessenger/8.0.9.1940(0x2800093B) Process/tools WeChat/arm64 Weixin NetType/WIFI Language/zh_CN ABI/arm64</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 判断是否是微信浏览器</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isWeixinBrowser</span>(<span class="params"></span>)</span>{</span><br><span class="line">  <span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();</span><br><span class="line">  <span class="keyword">return</span> (<span class="regexp">/micromessenger/</span>.test(ua)) ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h4 id="解决referer不完整"><a href="#解决referer不完整" class="headerlink" title="解决referer不完整"></a>解决referer不完整</h4><ul>
<li><p>方法一，设置 script 的 referrerPolicy：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> wshare = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</span></span><br><span class="line"><span class="javascript">  wshare.src = <span class="string">"//b.com/api/share/index?rand= "</span> + <span class="built_in">Math</span>.random();</span></span><br><span class="line"><span class="javascript">  wshare.referrerPolicy = <span class="string">"no-referrer-when-downgrade"</span>;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.body.appendChild(wshare);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>方法二，通过 meta 设置站点的 referrerPolicy：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"referrer"</span> <span class="attr">content</span>=<span class="string">"no-referrer-when-downgrade"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

</li>
</ul>
<blockquote>
<p>奇怪的是 <code>referrerPolicy</code> 默认应该就是 <code>no-referrer-when-downgrade</code>，但这个机型却不是。也不知道如何查看微信浏览器 <code>referrerPolicy</code> 默认值…</p>
</blockquote>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://www.w3schools.com/tags/att_script_referrepolicy.asp">HTML <script> referrerpolicy Attribute</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement/referrerPolicy">HTMLScriptElement.referrerPolicy</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2019/06/http-referer.html">HTTP Referer 教程</a></li>
</ul>
</script></a></li></ul>]]></content>
      <categories>
        <category>WeChat</category>
      </categories>
      <tags>
        <tag>WeChat</tag>
      </tags>
  </entry>
  <entry>
    <title>微信相关</title>
    <url>/posts/WeChat/56bbd67b.html</url>
    <content><![CDATA[<p>微信相关</p>
<hr>
<a id="more"></a>



<h2 id="微信测试公众号"><a href="#微信测试公众号" class="headerlink" title="微信测试公众号"></a>微信测试公众号</h2><p><a href="http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login">http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login</a></p>
<blockquote>
<p>注意：每年需要重新申请</p>
</blockquote>
<h2 id="微信昵称字符长度限制"><a href="#微信昵称字符长度限制" class="headerlink" title="微信昵称字符长度限制"></a>微信昵称字符长度限制</h2><p>Emoji: 8<br>🙏😂👏👎📖🎆👍🎊<br>8J+Zj/CfmILwn5GP8J+RjvCfk5bwn46G8J+RjfCfjoo=</p>
<p>中文: 16<br>哈哈哈哈哈哈哈哈哈哈哈哈哈哈我的<br>5ZOI5ZOI5ZOI5ZOI5ZOI5ZOI5ZOI5ZOI5ZOI5ZOI5ZOI5ZOI5ZOI5ZOI5oiR55qE</p>
<p>纯数字: 32<br>01234567890123456789012345678901<br>MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDE=</p>
<p>纯字母: 32<br>abcdefghijklmnopqrstuvwxyzabcdef<br>YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXphYmNkZWY=</p>
]]></content>
      <categories>
        <category>WeChat</category>
      </categories>
      <tags>
        <tag>WeChat</tag>
      </tags>
  </entry>
  <entry>
    <title>服务端解决跨域问题</title>
    <url>/posts/%E8%B7%A8%E5%9F%9F/4123c02a.html</url>
    <content><![CDATA[<p>服务端解决跨域问题</p>
<a id="more"></a>

<p>跨域请求数据时会提示如下错误信息:<br><img data-src="4123c02a/QQ20170518-182656.png"></p>
<!--more-->

<p>JSONP实现跨域请求请移步至 <a href="#">Post not found: dd976ae 这里</a> .</p>
<h2 id="服务器端指定-Access-Control-Allow-Origin-可跨域访问的域"><a href="#服务器端指定-Access-Control-Allow-Origin-可跨域访问的域" class="headerlink" title="服务器端指定 Access-Control-Allow-Origin 可跨域访问的域"></a>服务器端指定 Access-Control-Allow-Origin 可跨域访问的域</h2><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">header(<span class="string">'content-type:application:json;charset=utf8'</span>);  </span><br><span class="line">header(<span class="string">'Access-Control-Allow-Origin:*'</span>);  </span><br><span class="line">$data = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'hello'</span> =&gt; <span class="string">'codezm'</span>,</span><br><span class="line">    <span class="string">'data'</span> =&gt; $_GET[<span class="string">'data'</span>],</span><br><span class="line">);</span><br><span class="line"><span class="keyword">echo</span> json_encode($data);</span><br><span class="line"><span class="keyword">exit</span>;</span><br></pre></td></tr></tbody></table></figure>
<p>Access-Control-Allow-Origin:* 表示允许任何域名跨域访问<br>如果需要指定某域名才允许跨域访问，只需把Access-Control-Allow-Origin:*改为Access-Control-Allow-Origin:允许的域名<br>例如：header(‘Access-Control-Allow-Origin:<a href="http://www.client.com&amp;/#39;">http://www.client.com'</a>);</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">header(<span class="string">'content-type:application:json;charset=utf8'</span>);  </span><br><span class="line">  </span><br><span class="line">$origin = <span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_ORIGIN'</span>])? $_SERVER[<span class="string">'HTTP_ORIGIN'</span>] : <span class="string">''</span>;  </span><br><span class="line">  </span><br><span class="line">$allow_origin = <span class="keyword">array</span>(  </span><br><span class="line">    <span class="string">'http://www.client.com'</span>,  </span><br><span class="line">    <span class="string">'http://www.client2.com'</span>  </span><br><span class="line">);  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(in_array($origin, $allow_origin)){  </span><br><span class="line">    header(<span class="string">'Access-Control-Allow-Origin:'</span>.$origin);  </span><br><span class="line">    header(<span class="string">'Access-Control-Allow-Methods:POST'</span>);  </span><br><span class="line">    header(<span class="string">'Access-Control-Allow-Headers:x-requested-with,content-type'</span>);  </span><br><span class="line">}  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">echo</span> json_encode($ret);  </span><br><span class="line"><span class="keyword">exit</span>;</span><br></pre></td></tr></tbody></table></figure>

<h2 id="引申问题"><a href="#引申问题" class="headerlink" title="引申问题"></a>引申问题</h2><h3 id="Question-One"><a href="#Question-One" class="headerlink" title="Question One:"></a>Question One:</h3><p>若服务器端判断是否是 ajax 请求，然后再处理的请求数据:</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_REQUESTED_WITH'</span>]) </span><br><span class="line">    &amp;&amp; strtolower($_SERVER[<span class="string">'HTTP_X_REQUESTED_WITH'</span>]) == <span class="string">'xmlhttprequest'</span>) {</span><br><span class="line">    $getAllData = $_POST;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<p>客户端需添加 ajax 请求参数:</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line">$.ajax({</span><br><span class="line">    type: <span class="string">"POST"</span>,</span><br><span class="line">    url: <span class="string">"http://www.server.com/test.php"</span>,</span><br><span class="line">    dataType: <span class="string">'json'</span>,</span><br><span class="line">    headers: {<span class="string">'X-Requested-With'</span>: <span class="string">'XMLHttpRequest'</span>}, </span><br><span class="line">    data: {<span class="string">'data'</span>:<span class="string">'222'</span>},</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>{</span><br><span class="line">        <span class="built_in">console</span>.log(data);</span><br><span class="line">    }</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure>
<p>OR </p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line">$.ajax({</span><br><span class="line">    type: <span class="string">"POST"</span>,</span><br><span class="line">    url: <span class="string">"http://www.server.com/test.php"</span>,</span><br><span class="line">    dataType: <span class="string">'json'</span>,</span><br><span class="line">    data: {<span class="string">'data'</span>:<span class="string">'222'</span>},</span><br><span class="line">    beforeSend : <span class="function"><span class="keyword">function</span> (<span class="params">XMLHttpRequest</span>) </span>{</span><br><span class="line">        XMLHttpRequest.setRequestHeader(<span class="string">"HTTP_X_REQUESTED_WITH"</span>,<span class="string">"XMLHttpRequest"</span>);</span><br><span class="line">    },</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>{</span><br><span class="line">        <span class="built_in">console</span>.log(data);</span><br><span class="line">    }</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure>
<h3 id="Question-Two"><a href="#Question-Two" class="headerlink" title="Question Two:"></a>Question Two:</h3><p>两次请求? 如何在服务器端将第一次预检测请求 kill 掉？</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (strtolower($_SERVER[<span class="string">'REQUEST_METHOD'</span>]) == <span class="string">'options'</span>) {</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<h3 id="Qusetion-Three"><a href="#Qusetion-Three" class="headerlink" title="Qusetion Three:"></a>Qusetion Three:</h3><p>如何传递 Cookie?</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line">$.ajax({</span><br><span class="line">    type: <span class="string">"POST"</span>,</span><br><span class="line">    url: <span class="string">"http://www.server.com/test.php"</span>,</span><br><span class="line">    dataType: <span class="string">'json'</span>,</span><br><span class="line">    headers: {<span class="string">'X-Requested-With'</span>: <span class="string">'XMLHttpRequest'</span>}, </span><br><span class="line">    xhrFields: {<span class="attr">withCredentials</span>: <span class="literal">true</span>},</span><br><span class="line">    data: {<span class="string">'data'</span>:<span class="string">'222'</span>},</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>{</span><br><span class="line">        <span class="built_in">console</span>.log(data);</span><br><span class="line">    }</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure>
<p>服务器端必须指定 <code>Access-Control-Allow-Origin: http://www.baidu.com</code> 具体的域名, 如使用 <code>Access-Control-Allow-Origin: *</code> 会提示错误信息</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">// Chrome network Disable cache 可以禁止此项使用.</span><br><span class="line">header('Access-Control-Max-Age:86400');</span><br><span class="line"></span><br><span class="line">if(isset($_SERVER['HTTP_ORIGIN'])) {</span><br><span class="line">    header('Access-Control-Allow-Origin: ' . $_SERVER['HTTP_ORIGIN']);  </span><br><span class="line">    header("Access-Control-Allow-Credentials: true");</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>跨域</category>
      </categories>
      <tags>
        <tag>http,跨域,ajax,php</tag>
      </tags>
  </entry>
  <entry>
    <title>Jsonp 方式解决跨域问题</title>
    <url>/posts/uncategorized/dd976ae.html</url>
    <content><![CDATA[<p>值得注意的是:<br>Jsonp 最终只能通过 GET 方式请求, 无法使用 POST 提交数据, 假设你定义 Type 为 post 也会转为 get 方式请求.</p>
<p>若您不希望通过此方式实现跨域请求, 请移步 <a href="#">Post not found: Access-Control-Allow-Origin 服务端解决跨域请求</a>.</p>
<p>以下为具体代码实现:</p>
<a id="more"></a>
<h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line">$.ajax({</span><br><span class="line">    type: <span class="string">"GET"</span>,</span><br><span class="line">    url: <span class="string">"http://www.server.com/test.php"</span>,</span><br><span class="line">    dataType: <span class="string">'jsonp'</span>,</span><br><span class="line">    jsonpCallback: <span class="string">'jsonpCallback'</span>,</span><br><span class="line">    data: {<span class="string">'data'</span>:<span class="string">'222'</span>},</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>{</span><br><span class="line">        <span class="built_in">console</span>.log(data);</span><br><span class="line">    }</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure>

<h4 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h4><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">header(<span class="string">'Content-Type:application/json; charset=utf-8'</span>);</span><br><span class="line"></span><br><span class="line">$handler = $_GET[<span class="string">'callback'</span>];</span><br><span class="line">$data = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'hello'</span> =&gt; <span class="string">'codezm'</span>,</span><br><span class="line">    <span class="string">'data'</span> =&gt; $_GET[<span class="string">'data'</span>],</span><br><span class="line">);</span><br><span class="line"><span class="keyword">exit</span>($handler . <span class="string">'('</span> . json_encode($data) . <span class="string">');'</span>);</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <tags>
        <tag>跨域, jsonp, ajax, php</tag>
      </tags>
  </entry>
  <entry>
    <title>跨域图片上传</title>
    <url>/posts/%E8%B7%A8%E5%9F%9F/e7c709d2.html</url>
    <content><![CDATA[<h3 id="业务需求"><a href="#业务需求" class="headerlink" title="业务需求"></a>业务需求</h3><p>最近公司要搞个报名程序需要在不同网站上引用一段 Js 代码实现用户报名, 其中就涉及到需要图片上传的需求。<br>结果搞了好几天，感觉有必要记录一下以吸取经验教训!<br>兼容 IE7+ 可跨域上传图片(实际上 IE6 也是没有问题的…)</p>
<h3 id="愉快踩坑步伐"><a href="#愉快踩坑步伐" class="headerlink" title="愉快踩坑步伐"></a>愉快踩坑步伐</h3><p>考虑(其中部分使用过)过以下图片上传第三方组件:</p>
<ul>
<li><a href="https://github.com/jquery-form/form">jquery-form</a></li>
<li><a href="https://github.com/blueimp/jQuery-File-Upload">jQuery-File-Upload</a> 此插件没有使用但与 jquery-form 相类似</li>
<li><a href="http://www.uploadify.com/">jquery-uploadify</a></li>
<li><a href="http://www.swfupload.org/">SWFUpload</a> 官方已不再维护了 <a href="https://sourceforge.net/projects/swfupload.mirror/files/?source=navbar">下载地址</a></li>
<li><a href="http://fex.baidu.com/webuploader/">webuploader</a></li>
</ul>
<p>最开始使用的是<code>jquery-form</code>上传图片，同域名 IE6+ 都没有问题，唯独跨域它就不行了(这里说的是 IE10以下, 若是不需要兼容 IE 这毒瘤一切 OK!)，上传图片可以成功，但是<code>responseText</code>中一直返回<code>body</code>中的代码, 它有创建<code>iframe</code>且里面有我们想要的数据但是无法获取。<br>在找解决方案的过程中，看到了第二个项目<code>jQuery-File-Upload</code> 果然强大，Star 都2.6w+ 其中 <a href="https://github.com/blueimp/jQuery-File-Upload/wiki/Cross-domain-uploads">这里</a> 对使用跨域上传做了解释(个人理解: 必须在每个客户端创建一个文件用于跨域获取数据，同源策略所致: 无法获取<code>iframe</code>它域中的数据!)</p>
<p>因此我们有必要要尝试其他上传图片插件了：</p>
<h4 id="第一步-使用jquery-uploadify"><a href="#第一步-使用jquery-uploadify" class="headerlink" title="第一步: 使用jquery-uploadify:"></a>第一步: 使用<code>jquery-uploadify</code>:</h4><p>很快写完了实例, 第一个问题就出现了，刷新当前页面有多个 <code>404 (Not Found)</code> 问题, 原因是: 其配置项中有一个<code>buttonImage</code>参数没有配置(我们并不想配置), 此处就是<code>uploadify</code>的一个bug:<br>找到<code>jquery.uploadify.js</code>文件将下面代码:</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">this</span>.settings.button_image_url = SWFUpload.completeURL(<span class="built_in">this</span>.settings.button_image_url)</span><br></pre></td></tr></tbody></table></figure>
<p>替换成:</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">this</span>.settings.button_image_url != <span class="string">""</span>) {</span><br><span class="line">    <span class="built_in">this</span>.settings.button_image_url = SWFUpload.completeURL(<span class="built_in">this</span>.settings.button_image_url);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<p>客户端引用本地<code>uploadify.swf</code>没有问题，但若是引入别的域名的呢?  打开<code>debug</code>后提示如下:<br>SWF DEBUG: ExternalInterface reinitialized<br>即使是在服务器端根目录下创建<code>crossdomain.xml</code>文件，设置允许跨域也是一直提示上述信息并无法实现跨域上传</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cross-domain-policy</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">allow-access-from</span> <span class="attr">domain</span>=<span class="string">"*"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">cross-domain-policy</span>&gt;</span> </span><br></pre></td></tr></tbody></table></figure>
<h4 id="第二步-使用SWFUpload"><a href="#第二步-使用SWFUpload" class="headerlink" title="第二步: 使用SWFUpload:"></a>第二步: 使用<code>SWFUpload</code>:</h4><p>我下载的是<code>v2.2.0</code>版本, 写完实例发现与<code>uploadify</code>相似, 但是它不需要额外引入<code>jquery</code>, <code>404 (Not Found)</code> 问题解决同上。<br>其也提供<code>swfupload.swf</code>flash文件, 我先将其放入其他域名，测试一下上传图片，发现 ok, 完全是我想要的方案, 同时我发现了 <a href="https://imququ.com/post/security-problem-in-flash-uploader.html">这篇</a>文章,<br>文章中还指导了如何修复此漏洞，当然我并没有时间去修复… 因为需要编译 swf 文件, 我了个xxoo…<br>不想点开看的，可以看下面我所引用的信息, 如何测试呢? 将以下路径替换成你要访问swf的url并放到浏览器中访问，若是提示 alert 则证明存在XSS和CSRF漏洞。</p>
<pre><code>www.example.com/swfupload.swf?movieName=%22])}catch(e){if(!window.x){alert(1);window.x=1}}try{([%22</code></pre>
<p>测试发现确实存在漏洞, 然而测试 <code>uploadify</code> 所引入的swf文件确没有弹框, 证明<code>uploadify</code>已修复了这个漏洞(难道是为了修复这个漏洞竟然不让其跨域上传图片了？)<br>机制的我将<code>swfupload</code>引用 swf 文件路径替换了<code>uploadify</code>中的 swf 文件路径，结果测试 ok, 原来都是 swf 文件在作怪, 接下来还是这个 swf 文件又坑了我…<br>目前来看, 所有问题都解决了(那个漏洞可以暂时一放, 先完成项目需求~ )<br>找了一个需要引入的报名页的网页放进去，测试发现选择完图片后没有反应了，没有反应了，没有反应了…</p>
<h4 id="第三步-使用-webuploader-解决"><a href="#第三步-使用-webuploader-解决" class="headerlink" title="第三步: 使用 webuploader - 解决"></a>第三步: 使用 <code>webuploader</code> - 解决</h4><p>查看引入页网页源代码发现它也引入了<code>swfupload</code>图片上传插件，这怎么搞？ 领导说要兼容, 只能搞了…<br>方案:</p>
<ul>
<li>对<code>swfupload.js</code>中的<code>SWFUpload</code>更换名称, 无效…</li>
<li>对<code>swfupload.js</code>中的<code>SWFUploal</code>闭源处理(即: 使用<code>$(function(){codezm.swfupload = SWFUpload})()</code>, 这样外部就不能使用<code>SWFUpload</code>对象了，只能使用 codezm.swfupload), 无效…</li>
</ul>
<p>谷歌发现有人说要修改<code>swfupload.js</code>还要重新编译<code>swfupload.swf</code>文件才行, 我绝望了…<br>问题总是要解决的，万一实现了呢~<br>github 上搜索<code>swfupload.swf</code>，希望下载个不一样命名的 swfupload.swf, 下载后测试无效…</p>
<p>再尝试使用一款上传插件<code>webuploader</code> 百度开源, 因为看到其自己编译的<code>Uploader.swf</code>文件, 感觉有戏…<br>需要注意以下几点:</p>
<ul>
<li>此方式不能将<code>pick</code>绑定到<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"pick"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li>
<li>此方式若是使用flash上传，并且将顶层设置为<code>hidden:none</code>来禁止用户再次上传将导致flash失效，需要重新加载一遍方法或者使用如下方式将其隐藏起来，但是如点击还可上传图片(可给出正确提示信息):<figure class="highlight"><table><tbody><tr><td class="code"><pre><span class="line">position: absolute; opacity: 0; filter:Alpha(opacity=0);</span><br></pre></td></tr></tbody></table></figure></li>
<li>若<code>Chrome</code> - <code>Network</code>面板明明已加载<code>Uploader.swf</code>文件还是无法使用，可能是<code>Chrome</code></li>
<li>重复上传同一个文件可设置如下属性:<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 可重复上传</span></span><br><span class="line">duplicate :<span class="literal">true</span>,</span><br></pre></td></tr></tbody></table></figure></li>
<li>若判断达到上传限制取消图片上传<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line">uploader.on( <span class="string">'fileQueued'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> file </span>) </span>{</span><br><span class="line">    <span class="keyword">if</span>(uploader.isInProgress()) {</span><br><span class="line">        alert(<span class="string">"图片正在上传中"</span>);</span><br><span class="line">        uploader.cancelFile( file );</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

</li>
</ul>
<h4 id="其他技术点"><a href="#其他技术点" class="headerlink" title="其他技术点:"></a>其他技术点:</h4><ul>
<li><p>虽然<code>webuploader</code>有<code>browser</code>方法检测浏览器, 但是万一不用它呢, 以下是我力荐的解决方案:</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> isIE = <span class="function"><span class="keyword">function</span>(<span class="params">ver</span>)</span>{</span><br><span class="line">    <span class="keyword">var</span> b = <span class="built_in">document</span>.createElement(<span class="string">'b'</span>)</span><br><span class="line">    b.innerHTML = <span class="string">'&lt;!--[if IE '</span> + ver + <span class="string">']&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--&gt;'</span></span><br><span class="line">    <span class="keyword">return</span> b.getElementsByTagName(<span class="string">'i'</span>).length === <span class="number">1</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isIE(<span class="number">6</span>)) {</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'This is IE 6 browser.'</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li>
<li><p>因为项目全程使用的<code>Ajax</code>提交数据，无奈<code>IE</code>又不支持遂引入 <a href="https://github.com/MoonScript/jQuery-ajaxTransport-XDomainRequest">jQuery.XDomainRequest.js</a> 而且<code>POST</code>时其只能通过二进制提交, 后端修改获取数据方式(PHP: file_get_contents(‘php://input’) 获取数据)</p>
<p>  When POSTing, the data will always be sent with a Content-Type of text/plain</p>
</li>
</ul>
]]></content>
      <categories>
        <category>跨域</category>
      </categories>
      <tags>
        <tag>跨域,图片上传</tag>
      </tags>
  </entry>
  <entry>
    <title>Web 开发中的实用技巧</title>
    <url>/posts/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/b0b0ef07.html</url>
    <content><![CDATA[<h2 id="Web-开发中的实用技巧"><a href="#Web-开发中的实用技巧" class="headerlink" title="Web 开发中的实用技巧"></a>Web 开发中的实用技巧</h2><a id="more"></a>
<h4 id="Chrome-Console-加入-Jquery-插件"><a href="#Chrome-Console-加入-Jquery-插件" class="headerlink" title="Chrome - Console 加入 Jquery 插件."></a>Chrome - Console 加入 Jquery 插件.</h4><p>有的时候我们需要对某个网站进行<code>Dom</code>操作，但是发现他没有我们熟悉引入<code>Jquery</code>, 这时可以在 Chrome - Console 窗格中使用以下代码添加 Jquery.</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> jquery = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);  </span><br><span class="line">jquery.src = <span class="string">"https://cdn.bootcss.com/jquery/3.2.0/jquery.min.js"</span>;</span><br><span class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>].appendChild(jquery); </span><br><span class="line">jQuery.noConflict()</span><br></pre></td></tr></tbody></table></figure>
<p>当然你也可以利用此方法引入其他 Js 插件 <a href="http://www.bootcdn.cn/">bootcdn</a>.</p>
]]></content>
      <categories>
        <category>实用技巧</category>
      </categories>
      <tags>
        <tag>Web 实用技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>我经常使用的 hexo 命令总结</title>
    <url>/posts/%E5%B8%AE%E5%8A%A9/9a4742fb.html</url>
    <content><![CDATA[<p>我经常使用的 hexo 命令总结</p>
<a id="more"></a>

<h2 id="学习-hexo-命令及我使用的常用命令汇总-文档"><a href="#学习-hexo-命令及我使用的常用命令汇总-文档" class="headerlink" title="学习 hexo 命令及我使用的常用命令汇总 文档"></a>学习 hexo 命令及我使用的常用命令汇总 <a href="https://hexo.io/zh-cn/docs/tag-plugins.html">文档</a></h2><h3 id="新建一篇文章-default-drafts-草稿"><a href="#新建一篇文章-default-drafts-草稿" class="headerlink" title="新建一篇文章 default _drafts(草稿)"></a>新建一篇文章 default _drafts(草稿)</h3><pre><code>hexo new 'php development environment configuration'</code></pre>
<h3 id="发布一篇草稿"><a href="#发布一篇草稿" class="headerlink" title="发布一篇草稿"></a>发布一篇草稿</h3><pre><code>hexo publish draft php-development-environment-configuration</code></pre>
<h3 id="不同设备如何使用-hexo-并发布到-git-上"><a href="#不同设备如何使用-hexo-并发布到-git-上" class="headerlink" title="不同设备如何使用 hexo 并发布到 git 上"></a>不同设备如何使用 hexo 并发布到 git 上</h3><p>更新 dotfiles</p>
<p>删除文件</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">rm -rf node_modules</span><br><span class="line">rm -rf db.json</span><br><span class="line">rm -rf package.json</span><br><span class="line">cd ../myblog_backup &amp;&amp; cp -r node_modules ../myblog &amp;&amp; cp db.json package.json ../myblog &amp;&amp; cd -</span><br></pre></td></tr></tbody></table></figure>

<p>对于 permalink: :year:month:day/:title.html 以 .html 结尾的文章链接配置在生成静态页面时，会导致图片路径错误, 修改<br>node_modules/hexo/lib/models/post_asset.js 文件中的 以下代码使支持 .html 后缀:</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> postPath = post.path;</span><br><span class="line"><span class="keyword">if</span> (<span class="regexp">/\.html$/</span>.test(postPath)) {</span><br><span class="line">  postPath = postPath.slice(<span class="number">0</span>, postPath.lastIndexOf(<span class="string">'.'</span>));</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> pathFn.join(postPath, <span class="built_in">this</span>.slug);</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>帮助</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>study</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客使用之插入图片</title>
    <url>/posts/hexo/deaceef1.html</url>
    <content><![CDATA[<p>在写文章时，常常需要图片来说明需求或表明释义。而对于图片的存放，本文将介绍两种方式：</p>
<ol>
<li>放入本地目录，缺点是随着时间推移图片文件会越来越多、维护成本越大。</li>
<li>上传到CDN后再使用图片路径，优点是解决了方式一中的不足，缺点是对于选择存放图片的CDN存储变成了重中之重，选择标准是稳定、免费最好。</li>
</ol>
<a id="more"></a>

<h4 id="本地引用"><a href="#本地引用" class="headerlink" title="本地引用"></a>本地引用</h4><h5 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h5><p>当博客中只使用到少量图片时，可以将图片统一存放在 <code>source/images</code> 文件夹中，然后通过以下方式来访问。</p>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">![<span class="string">图一</span>](<span class="link">/images/avatar.jpg</span>)</span><br></pre></td></tr></tbody></table></figure>

<p>这种方式既可以在首页展示也可以在文章详情页展示。</p>
<h5 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h5><p>除了将图片统一存放在 <code>source/images</code> 文件夹之外，还可以将其放在文章自己的目录中。文章目录可以通过配置 <code>站点配置文件：_config.yml</code> 在执行 <code>hexo new &lt;title&gt;</code> 命令时自动生成。</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>示例：<code>hexo new hello-world</code> ，目录结构如下：</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ tree ./<span class="built_in">source</span>/_posts</span><br><span class="line">├── hello-world.md</span><br><span class="line">└── hello-world</span><br></pre></td></tr></tbody></table></figure>

<p>将图片资源放在 <code>hello-world</code> 目录中，文章就可以利用相对路径来引用图片资源了。</p>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">![<span class="string">图二</span>](<span class="link">avatar.jpg</span>)</span><br></pre></td></tr></tbody></table></figure>

<p>这种方式只能在文章中展示无法在首页中正常展示。</p>
<blockquote>
<p>注意：这种方式使用时有个前提，默认 <code>站点配置文件：_config.yml</code> 中文章链接格式 <code>permalink: :year/:month/:day/:title/</code> ，必须以 <code>/</code> 结尾，若是 <code>permalink: :year/:month/:day/:title.html</code> 则图片也无法正常展示，因为它会在站点相对路径下查找图片：<code>http://localhost:4000/:year/:month/:day/:title.html/avatar.jpg</code>。</p>
</blockquote>
<p>如果希望图片在文章和首页中同时展示，可以使用标签插件语法。</p>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">{% asset<span class="emphasis">_img avatar.jpg 图三 %}</span></span><br></pre></td></tr></tbody></table></figure>

<img data-src="/posts/hexo/deaceef1/avatar.jpg" class="" title="图三">

<blockquote>
<p>注意：若文章是以 <code>_draft</code> 草稿方式存放，并使用 <code>hexo server --draft</code> 本地服务预览时无法正常展示图片，文章发布后即可正常预览。</p>
</blockquote>
<h4 id="CDN引用"><a href="#CDN引用" class="headerlink" title="CDN引用"></a>CDN引用</h4><p>除了将图片存放在本地，还可以将图片上传到 <code>CDN</code> 服务中，比如 <a href="https://portal.qiniu.com/signup?code=1h5cmbk3vtcuq">七牛云</a>，在图片上传CDN后可以获取其对应URL地址，直接将其放到文稿中引用即可。</p>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">![<span class="string">图四</span>](<span class="link">http://p1.qn.codezm.com/avatar.jpg_a</span>)</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客使用</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客使用之文章截断</title>
    <url>/posts/hexo/332edb1d.html</url>
    <content><![CDATA[<p>hexo 编写的文章如何使<code>文章截断</code> 或者说如何增加 <code>阅读全文</code> 链接？</p>
<p>每当写完一篇软文，其默认会在首页展示出所有内容。</p>
<p><code>Hexo</code> 提供了两种可由创作者自行处理的方法：</p>
<ol>
<li><p>在文章中加入 <code>&lt;!-- more --&gt;</code> 注释行进行截断。</p>
<blockquote>
<p>Tips: 推荐使用此方法，但不能放置在文章开头，否则无效。</p>
</blockquote>
</li>
<li><p>在文章的 <code>front-matter</code> 中添加 <code>description</code> 并提供描述。</p>
</li>
</ol>
<a id="more"></a>

<h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><h5 id="方法一：-lt-more-gt"><a href="#方法一：-lt-more-gt" class="headerlink" title="方法一：<!-- more -->"></a>方法一：<code>&lt;!-- more --&gt;</code></h5><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo 博客使用之文章截断</span><br><span class="line">date: 2020-11-28 20:46:00</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> 博客使用</span><br><span class="line"><span class="bullet">-</span> hexo</span><br><span class="line">categories: hexo</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">hexo 编写的文章如何使<span class="code">`文章截断`</span> 或者说是如何显示 <span class="code">`阅读全文`</span> 按钮？</span><br><span class="line"></span><br><span class="line">每当写完一篇软文，其默认会在首页展示出所有内容。</span><br><span class="line"></span><br><span class="line"><span class="code">`Hexo`</span> 提供了两种可由创作者自行处理的方法：</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 在文章中加入 <span class="code">`&lt;!-- more --&gt;`</span> 注释行进行截断。</span><br><span class="line"></span><br><span class="line">   &gt; Tips: 推荐使用此方法，但不能放置在文章开头，否则无效。</span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> 在文章的 <span class="code">`front-matter`</span> 中添加 <span class="code">`description`</span> 并提供描述。</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- more --&gt;</span></span></span><br><span class="line"><span class="section">#### 示例</span></span><br><span class="line"></span><br><span class="line"><span class="section">##### 方法一：`<span class="xml"><span class="comment">&lt;!-- more --&gt;</span></span>`</span></span><br><span class="line">---------------------------</span><br><span class="line"><span class="section">##### 方法二：`front-matter`</span></span><br></pre></td></tr></tbody></table></figure>



<hr>
<h5 id="方法二：front-matter"><a href="#方法二：front-matter" class="headerlink" title="方法二：front-matter"></a>方法二：<code>front-matter</code></h5><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> hexo</span><br><span class="line">categories: hello-world</span><br><span class="line">description: Hexo 如何使用？</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客使用</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客使用之草稿</title>
    <url>/posts/hexo/c915bc53.html</url>
    <content><![CDATA[<p>您可以执行下列命令来创建一篇新文章或者新的页面。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></tbody></table></figure>

<p>默认 <code>layout</code> 是 <code>post</code>，文章将在 <code>source/_posts</code> 目录下创建。可以通过修改 <code>站点配置文件：_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认 <code>layout</code>。</p>
<table>
<thead>
<tr>
<th>layout</th>
<th>保存路径</th>
</tr>
</thead>
<tbody><tr>
<td><code>post</code></td>
<td><code>source/_posts</code></td>
</tr>
<tr>
<td><code>page</code></td>
<td><code>source</code></td>
</tr>
<tr>
<td><code>draft</code></td>
<td><code>source/_drafts</code></td>
</tr>
</tbody></table>
<h4 id="post"><a href="#post" class="headerlink" title="post"></a><code>post</code></h4><p><code>post</code> 是新建文章的。</p>
<blockquote>
<p>用法：<code>hexo new "Hello world"</code>，这里省略了 <code>layout</code>。</p>
</blockquote>
<h4 id="page"><a href="#page" class="headerlink" title="page"></a><code>page</code></h4><p>之前文章介绍过 <code>layout</code> 的 <code>page</code> 使用，利用它我们依次创建了标签 <code>tags</code>、分类 <code>categories</code> 、我的 <code>about</code> 页面。</p>
<blockquote>
<p> 用法：<code>hexo new page tags</code></p>
</blockquote>
<h4 id="draft"><a href="#draft" class="headerlink" title="draft"></a><code>draft</code></h4><p><code>draft</code> 是新建草稿的。</p>
<blockquote>
<p>用法：<code>hexo new draft "Hello world"</code></p>
</blockquote>
<p>我们可以先通过这个命令创建草稿文件，然后再通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></tbody></table></figure>



<p>草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p>
<h4 id="模板-（Scaffold）"><a href="#模板-（Scaffold）" class="headerlink" title="模板 （Scaffold）"></a>模板 （Scaffold）</h4><p>在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件。</p>
<p>例如：我们可以编辑 <code>_draft</code> 模板文件来满足个性化需求。</p>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: {{ title }}</span><br><span class="line">date: {{ date }}</span><br><span class="line">tags:</span><br><span class="line">categories: </span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure>



<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://hexo.io/zh-cn/docs/writing.html">https://hexo.io/zh-cn/docs/writing.html</a></li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客使用</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之_config.yml</title>
    <url>/posts/hexo/19f5887a.html</url>
    <content><![CDATA[<p>记录 - 完整站点配置文件：</p>
<a id="more"></a>

<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">codezm</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://example.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://example.com</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing 'index.html' from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing '.html' from permalinks</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># Apply to the whole site</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Metadata elements</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"><span class="comment">## updated_option supports 'mtime', 'date', 'empty'</span></span><br><span class="line"><span class="attr">updated_option:</span> <span class="string">'mtime'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">## include:/exclude: options only apply to the 'source/' folder</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#search:</span></span><br><span class="line">  <span class="comment">#path: search.xml</span></span><br><span class="line">  <span class="comment">#field: post</span></span><br><span class="line">  <span class="comment">#format: html</span></span><br><span class="line">  <span class="comment">#limit: 10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">''</span></span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之Emoji</title>
    <url>/posts/hexo/160c10e9.html</url>
    <content><![CDATA[<p>Hexo 默认不支持 <code>Emoji</code> 渲染，可通过安装 <a href="https://github.com/crimx/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 插件来渲染 <code>Emoji</code> 展示。</p>
<p>可通过 <a href="https://www.webfx.com/tools/emoji-cheat-sheet/">Emoji Cheat Sheet</a> 查看支持的 <code>Emoji</code> 表情，使用方法也很简单：<code>:thumbsup:</code>，展示效果：<span class="github-emoji"><span>👍</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>。</p>
<a id="more"></a>

<h5 id="1-安装-Emoji-渲染插件"><a href="#1-安装-Emoji-渲染插件" class="headerlink" title="1. 安装 Emoji 渲染插件"></a>1. 安装 <code>Emoji</code> 渲染插件</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install hexo-filter-github-emojis --save</span><br></pre></td></tr></tbody></table></figure>

<h5 id="2-在-主题配置文件：-config-next-yml-文件尾部，增加配置代码以启用插件"><a href="#2-在-主题配置文件：-config-next-yml-文件尾部，增加配置代码以启用插件" class="headerlink" title="2. 在 主题配置文件：_config.next.yml 文件尾部，增加配置代码以启用插件"></a>2. 在 <code>主题配置文件：_config.next.yml</code> 文件尾部，增加配置代码以启用插件</h5><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">githubEmojis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">className:</span> <span class="string">github-emoji</span></span><br><span class="line">  <span class="attr">inject:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">styles:</span></span><br><span class="line">  <span class="attr">customEmojis:</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="3-Enjoy-grinning-amp-Happy-clap"><a href="#3-Enjoy-grinning-amp-Happy-clap" class="headerlink" title="3. Enjoy :grinning: &amp; Happy:clap:"></a>3. Enjoy <span class="github-emoji"><span>😀</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f600.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> &amp; Happy<span class="github-emoji"><span>👏</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></h5><h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="https://novnan.github.io/Hexo/emojis-for-hexo-next/">https://novnan.github.io/Hexo/emojis-for-hexo-next/</a></li>
<li><a href="https://www.vwkai.com/2020/03/05/hexo-emoji/">https://www.vwkai.com/2020/03/05/hexo-emoji/</a></li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-博客搭建之canvas-nest背景特效</title>
    <url>/posts/hexo/838c8d2e.html</url>
    <content><![CDATA[<p>直到我搭建博客，才知道这炫酷的背景特效有个名字叫：<code>canvas-nest</code>。</p>
<a id="more"></a>

<h5 id="1-创建-source-data-footer-swig-文件，内容如下："><a href="#1-创建-source-data-footer-swig-文件，内容如下：" class="headerlink" title="1. 创建 source/_data/footer.swig  文件，内容如下："></a>1. 创建 <code>source/_data/footer.swig </code> 文件，内容如下：</h5><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">color</span>=<span class="string">"0,0,0"</span> <span class="attr">opacity</span>=<span class="string">'0.5'</span> <span class="attr">zIndex</span>=<span class="string">"-1"</span> <span class="attr">count</span>=<span class="string">"99"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.1/canvas-nest.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="2-编辑-主题配置文件：-config-next-yml，配置-footer。"><a href="#2-编辑-主题配置文件：-config-next-yml，配置-footer。" class="headerlink" title="2. 编辑 主题配置文件：_config.next.yml，配置 footer。"></a>2. 编辑 <code>主题配置文件：_config.next.yml</code>，配置 <code>footer</code>。</h5><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Define custom file paths.</span></span><br><span class="line"><span class="comment"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span></span><br><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.swig</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.swig</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.swig</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.swig</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.swig</span></span><br><span class="line">  <span class="attr">footer:</span> <span class="string">source/_data/footer.swig</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.swig</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="comment">#style: source/_data/styles.styl</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="3-over…"><a href="#3-over…" class="headerlink" title="3. over…"></a>3. over…</h5><blockquote>
<p>后记：</p>
<p>这玩意儿除了好玩儿、新鲜，也没啥了… </p>
<p>真是生命不息，折腾不止啊。嗯，为了做公益（省电环保），最终我还是给禁了…</p>
<p>直接在配置文件干掉：<code>#footer: source/_data/footer.swig</code></p>
</blockquote>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之github部署</title>
    <url>/posts/hexo/ad2db325.html</url>
    <content><![CDATA[<p>本篇文章将介绍如何将博客部署到 <code>Github</code> 上。</p>
<ul>
<li>如何利用 <code>GitHub Pages</code> 部署博客。</li>
<li>利用 <code>Travis CI</code> 生成博客静态文件，使博客源 <code>markdown</code> 文件和生成的静态文件在同一仓库管理。</li>
<li>绑定自定义域名。</li>
</ul>
<a id="more"></a>

<h4 id="拥有-Github-账号"><a href="#拥有-Github-账号" class="headerlink" title="拥有 Github 账号"></a>拥有 <code>Github</code> 账号</h4><p>在 <a href="https://github.com/">Github</a> 上部署博客之前需要先注册用户账号，这里就不赘述如何注册了。</p>
<h4 id="创建博客仓库"><a href="#创建博客仓库" class="headerlink" title="创建博客仓库"></a>创建博客仓库</h4><p>要想使用 <code>Github Pages</code> 服务，对博客仓库的命名是有要求的：<code>账号名 + github.io</code> 。</p>
<blockquote>
<p>示例：我的博客仓库名称：<code>codezm.github.io</code>。</p>
</blockquote>
<h4 id="上传博客代码"><a href="#上传博客代码" class="headerlink" title="上传博客代码"></a>上传博客代码</h4><p>在上传代码之前，需要安装 <code>Git</code> 工具，用于操作、管理博客 <code>Github</code> 仓库代码。</p>
<h5 id="1-安装完-Git-后，在本机博客站点目录下使用如下命令创建本地-Git-仓库："><a href="#1-安装完-Git-后，在本机博客站点目录下使用如下命令创建本地-Git-仓库：" class="headerlink" title="1. 安装完 Git 后，在本机博客站点目录下使用如下命令创建本地 Git 仓库："></a>1. 安装完 <code>Git</code> 后，在本机博客站点目录下使用如下命令创建本地 <code>Git</code> 仓库：</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></tbody></table></figure>

<h5 id="2-配置完成仓库地址："><a href="#2-配置完成仓库地址：" class="headerlink" title="2. 配置完成仓库地址："></a>2. 配置完成仓库地址：</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ git set-url add origin https://github.com/codezm/codezm.github.io.git</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>注： <code>https://github.com/codezm/codezm.github.io.git</code> 需更换成对应您 <code>GitHub</code> 的仓库地址。</p>
</blockquote>
<h5 id="3-配置-gitignore-文件："><a href="#3-配置-gitignore-文件：" class="headerlink" title="3. 配置 .gitignore 文件："></a>3. 配置 <code>.gitignore</code> 文件：</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">themes/</span><br><span class="line">db.json</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>Tips：通过配置 <code>.gitignore</code> 文件，我们可以忽略哪些文件/目录不加入到 <code>Git</code> 仓库版本控制中。比如：关系到个人的账号密码等私密文件，log、node_modules 等不重要文件，即减少了仓库体积也减轻了维护成本。</p>
</blockquote>
<h5 id="4-将博客代码提交到-Github："><a href="#4-将博客代码提交到-Github：" class="headerlink" title="4. 将博客代码提交到 Github："></a>4. 将博客代码提交到 <code>Github</code>：</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">'first init'</span></span><br><span class="line">$ git push origin master</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>注：第一使用 <code>Git</code> 工具的同学，需要先设置 <code>Git</code> 账户及密码(同：<code>GitHub</code> 账号密码)。</p>
</blockquote>
<h4 id="利用-Travis-CI-生成博客静态文件"><a href="#利用-Travis-CI-生成博客静态文件" class="headerlink" title="利用 Travis CI 生成博客静态文件"></a>利用 <code>Travis CI</code> 生成博客静态文件</h4><h5 id="1-使用-Github-账号授权并登陆-Travis-CI，进入-账号仓库-，开启对应仓库：codezm-github-io-「-示例-」。"><a href="#1-使用-Github-账号授权并登陆-Travis-CI，进入-账号仓库-，开启对应仓库：codezm-github-io-「-示例-」。" class="headerlink" title="1. 使用 Github 账号授权并登陆 Travis CI，进入 账号仓库 ，开启对应仓库：codezm.github.io 「 示例 」。"></a>1. 使用 <code>Github</code> 账号授权并登陆 <a href="https://www.travis-ci.org/">Travis CI</a>，进入 <a href="https://www.travis-ci.org/account/repositories">账号仓库</a> ，开启对应仓库：<code>codezm.github.io</code> 「 示例 」。</h5><h5 id="2-Github-Personal-access-tokens-创建一个新-token，并复制该-token。"><a href="#2-Github-Personal-access-tokens-创建一个新-token，并复制该-token。" class="headerlink" title="2. Github Personal access tokens 创建一个新 token，并复制该 token。"></a>2. Github <a href="https://github.com/settings/tokens">Personal access tokens</a> 创建一个新 token，并复制该 token。</h5><h5 id="3-前往-Travis-CI-项目配置：https-www-travis-ci-org-github-codezm-codezm-github-io-settings「-示例-」，在-Environment-Variables-中创建-name-GITHUB-TOKEN，value：粘贴在第二步复制的Token，点击-Add-按钮。"><a href="#3-前往-Travis-CI-项目配置：https-www-travis-ci-org-github-codezm-codezm-github-io-settings「-示例-」，在-Environment-Variables-中创建-name-GITHUB-TOKEN，value：粘贴在第二步复制的Token，点击-Add-按钮。" class="headerlink" title="3. 前往 Travis CI 项目配置：https://www.travis-ci.org/github/codezm/codezm.github.io/settings「 示例 」，在 Environment Variables 中创建 name: GITHUB_TOKEN，value：粘贴在第二步复制的Token，点击 Add 按钮。"></a>3. 前往 Travis CI 项目配置：<a href="https://www.travis-ci.org/github/codezm/codezm.github.io/settings%E3%80%8C">https://www.travis-ci.org/github/codezm/codezm.github.io/settings「</a> 示例 」，在 <code>Environment Variables</code> 中创建 <code>name</code>: <code>GITHUB_TOKEN</code>，<code>value</code>：<code>粘贴在第二步复制的Token</code>，点击 <code>Add</code> 按钮。</h5><blockquote>
<p>注：请保持 <code>DISPLAY VALUE IN BUILD LOG</code> 项未开启，以防 <code>Token </code> 泄露。</p>
</blockquote>
<h5 id="4-在本地博客站点下，创建-travis-yml-文件。"><a href="#4-在本地博客站点下，创建-travis-yml-文件。" class="headerlink" title="4. 在本地博客站点下，创建 .travis.yml 文件。"></a>4. 在本地博客站点下，创建 <code>.travis.yml</code> 文件。</h5><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">sudo:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">node_js</span></span><br><span class="line"><span class="attr">node_js:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">12</span> <span class="comment"># 使用12的LTS版本</span></span><br><span class="line"><span class="attr">cache:</span> <span class="string">npm</span></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line">    <span class="attr">only:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">master</span> <span class="comment"># 只监听master分支的push</span></span><br><span class="line"><span class="attr">before_install:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">hexo-cli</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">git</span> <span class="string">clone</span> <span class="string">https://github.com/theme-next/hexo-theme-next</span> <span class="string">themes/next</span></span><br><span class="line"><span class="attr">install:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">--production</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hexo</span> <span class="string">generate</span> <span class="comment"># 自动化构建的脚本</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"blogs.codezm.com"</span> <span class="string">&gt;</span> <span class="string">public/CNAME</span> <span class="comment"># 配置自定义域名，没有可删除此行代码。</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">provider:</span> <span class="string">pages</span></span><br><span class="line">  <span class="attr">skip-cleanup:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">github-token:</span> <span class="string">$GITHUB_TOKEN</span></span><br><span class="line">  <span class="attr">keep-history:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">on:</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">local-dir:</span> <span class="string">public</span></span><br><span class="line">  <span class="attr">target_branch:</span> <span class="string">gh-pages</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="5-将-travis-yml-提交到-Github-仓库。"><a href="#5-将-travis-yml-提交到-Github-仓库。" class="headerlink" title="5. 将 .travis.yml 提交到 Github 仓库。"></a>5. 将 <code>.travis.yml</code> 提交到 <code>Github</code> 仓库。</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ git add .travis.yml</span><br><span class="line">$ git commit -m <span class="string">'add .travis.yml'</span></span><br><span class="line">$ git push origin master</span><br></pre></td></tr></tbody></table></figure>

<p><code>Git</code> 提交成功后将触发 <code>Travis CI</code> 执行构建命令，自动生成博客静态文件。默认可以使用 <code>codezm.github.io</code> 「 示例 」域名访问博客了。</p>
<h4 id="绑定自定义域名"><a href="#绑定自定义域名" class="headerlink" title="绑定自定义域名"></a>绑定自定义域名</h4><p><code>GitHub Pages</code> 提供了可绑定自定义域名的服务，前往<code>Github 项目配置</code> 页面：<a href="https://github.com/codezm/codezm.github.io/settings">https://github.com/codezm/codezm.github.io/settings</a> 「 示例 」。</p>
<h5 id="第一步：仓库绑定自定义域名"><a href="#第一步：仓库绑定自定义域名" class="headerlink" title="第一步：仓库绑定自定义域名"></a>第一步：仓库绑定自定义域名</h5><p>在 <code>Source</code> 项目中指定 <code>GitHub Pages</code> 分支及根路径，在 <code>Custom domain</code> 项目设置自定义域名。我们还可以免费使用 <code>GitHub Pages</code> 提供的 <code>HTTPS</code> 服务，仅需开启 <code>Enforce HTTPS</code> 。</p>
<p><img data-src="ad2db325/image-20200928073951449.png" alt="image-20200928073951449"></p>
<h5 id="第二步：域名服务商配置域名"><a href="#第二步：域名服务商配置域名" class="headerlink" title="第二步：域名服务商配置域名"></a>第二步：域名服务商配置域名</h5><p><code>Github</code> 端设置完成后，还需要前往域名服务商，增加一条 <code>CNAME</code> 记录。</p>
<p><img data-src="ad2db325/image-20200928073622766.png" alt="image-20200928073622766"></p>
<h5 id="第三步：等待及测试域名解析结果"><a href="#第三步：等待及测试域名解析结果" class="headerlink" title="第三步：等待及测试域名解析结果"></a>第三步：等待及测试域名解析结果</h5><p>10分钟后，可通过此命令测试域名解析结果：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ dig blogs.codezm.com +nostats +nocomments +nocmd</span><br></pre></td></tr></tbody></table></figure>

<p><img data-src="ad2db325/image-20200928074111247.png" alt="image-20200928074111247"></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之七牛云部署</title>
    <url>/posts/hexo/a263054f.html</url>
    <content><![CDATA[<p>本文将介绍如何将博客搭建在七牛云面向个人认证用户免费赠送的10GB存储空间上。</p>
<h4 id="将博客部署到七牛云前须知"><a href="#将博客部署到七牛云前须知" class="headerlink" title="将博客部署到七牛云前须知"></a>将博客部署到七牛云前须知</h4><ul>
<li><p>拥有工信部备案域名，可通过域名服务商配置 <code>CNAME</code> 解析，因为七牛云默认仅提供30天临时域名服务。</p>
</li>
<li><p>可免费使用 <code>HTTP</code> 服务，但 <code>HTTPS</code> 需要收取额外费用。具体资费请查看 <a href="https://portal.qiniu.com/financial/price">价格和优惠</a>。</p>
<blockquote>
<p>注：七牛云提供 <code>HTTPS</code>服务免费 <code>SSL</code> 证书。</p>
</blockquote>
</li>
</ul>
<a id="more"></a>

<h4 id="拥有七牛云账号"><a href="#拥有七牛云账号" class="headerlink" title="拥有七牛云账号"></a>拥有七牛云账号</h4><p>可通过 <a href="https://portal.qiniu.com/signup?code=1h5cmbk3vtcuq">七牛云</a> 注册账号，注册成功后，在创建 <code>对象存储</code> 前需要先完成 <code>个人认证</code>。</p>
<blockquote>
<p>Tips: 个人认证需要审核时间，审核成功后才能创建 <code>对象存储</code>。</p>
</blockquote>
<h4 id="创建对象存储"><a href="#创建对象存储" class="headerlink" title="创建对象存储"></a>创建对象存储</h4><p>创建流程：<code>对象存储</code> -&gt; <code>空间管理</code> -&gt; <code>新建空间</code>。</p>
<h4 id="绑定自定义-CDN-加速域名"><a href="#绑定自定义-CDN-加速域名" class="headerlink" title="绑定自定义 CDN 加速域名"></a>绑定自定义 CDN 加速域名</h4><p><code>空间管理</code> -&gt; <code>域名</code> -&gt; <code>绑定域名</code>。</p>
<h4 id="将博客静态文件上传至七牛云"><a href="#将博客静态文件上传至七牛云" class="headerlink" title="将博客静态文件上传至七牛云"></a>将博客静态文件上传至七牛云</h4><h5 id="七牛云命令行工具下载安装"><a href="#七牛云命令行工具下载安装" class="headerlink" title="七牛云命令行工具下载安装"></a>七牛云命令行工具下载安装</h5><p>我们用的工具是由七牛云官方提供的 <a href="https://developer.qiniu.com/kodo/tools/1302/qshell">qshell</a> 脚本。需下载对应操作系统的 <code>qshell</code> 压缩包文件，这里以 <code>Mac</code> 系统举例安装：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ unzip qshell-darwin-x64-v2.4.2.zip</span><br><span class="line">$ mv qshell-darwin-x64-v2.4.2 /usr/<span class="built_in">local</span>/bin/qshell</span><br></pre></td></tr></tbody></table></figure>

<p>工具安装完毕后，我们要将静态文件上传到七牛云需要使用 <code>qshell</code> 工具中的  <a href="https://github.com/qiniu/qshell/blob/master/docs/qupload.md">qupload</a> 命令，它可以通过指定配置文件进行数据同步操作。</p>
<h5 id="qupload-配置文件"><a href="#qupload-配置文件" class="headerlink" title="qupload 配置文件"></a><code>qupload</code> 配置文件</h5><p>创建 <code>qiniu-upload.json</code> 配置文件，文件名称可自定义，内容如下：</p>
<figure class="highlight json"><table><tbody><tr><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"src_dir"</span>: <span class="string">"${path}/public"</span>,</span><br><span class="line">  <span class="attr">"bucket"</span>: <span class="string">"${bucket}"</span>,</span><br><span class="line">  <span class="attr">"overwrite"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"rescan_local"</span>: <span class="literal">true</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><code>${path}</code> 是博客本地路径，这里指向生成静态文件目录 <code>public</code>。</li>
<li><code>${bucket}</code> 是对应七牛云存储空间名称。</li>
</ul>
<h5 id="同步数据"><a href="#同步数据" class="headerlink" title="同步数据"></a>同步数据</h5><p>在同步数据之前需要先创建七牛云账号，可通过 <code>qshell account </code> 命令创建。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ qshell account &lt;AccessKey&gt; &lt;SecretKey&gt; &lt;Name&gt;</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><code>&lt;AccessKey&gt;</code> 、<code>&lt;SecretKey&gt;</code> 可前往七牛云 <code>秘钥管理</code> 查看，默认会有两对 <code>KEY</code> ，使用任意一对均可。</li>
<li><code>&lt;Name&gt;</code> 是自定义的账号名称，主要用于切换账号。</li>
</ul>
<p>执行以下命令，完成博客静态文件同步。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">hexo generate &amp;&amp; qshell qupload qiniu-upload.json</span><br></pre></td></tr></tbody></table></figure>

<h5 id="简化操作步骤"><a href="#简化操作步骤" class="headerlink" title="简化操作步骤"></a>简化操作步骤</h5><p>我们可以利用 <code>npm</code> 的 <code>scripts</code> 优化操作流程：</p>
<p>在 <code>package.json</code> 文件 <code>scripts</code> JSON 块中，增加以下代码：</p>
<figure class="highlight"><table><tbody><tr><td class="code"><pre><span class="line">{</span><br><span class="line">... </span><br><span class="line">  "scripts": {</span><br><span class="line">    "build": "hexo generate",</span><br><span class="line">    "clean": "hexo clean",</span><br><span class="line">    "deploy": "hexo deploy",</span><br><span class="line">    "server": "hexo server",</span><br><span class="line">    "qiniu": "hexo generate &amp;&amp; qshell qupload qiniu-upload.json"</span><br><span class="line"> 	},</span><br><span class="line">...</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>之后，我们可以就执行 <code>npm run qiniu</code> 命令完成数据同步了。</p>
<h4 id="关于使用七牛云注意事项"><a href="#关于使用七牛云注意事项" class="headerlink" title="关于使用七牛云注意事项"></a>关于使用七牛云注意事项</h4><ul>
<li><p>关闭 “<a href="https://developer.qiniu.com/af/kb/5996/new-owe-the-process-description">欠费保护期</a>“ 权益，以免产生超额费用。关闭方法：提交七牛云工单申请即可。</p>
</li>
<li><p>同一身份证号最多可以创建两个七牛云账号。</p>
</li>
<li><p>自定义域名一经绑定空间后，解绑后再次绑定其他账号的空间时，只能通过 <code>域名找回</code> 方式找回。</p>
</li>
<li><p><a href="https://www.qiniu.com/prices/kodo">计费方式</a>，<a href="https://portal.qiniu.com/financial/price?product=kodo">详见</a></p>
<ul>
<li>标准存储每月免费空间：<code>10GB</code></li>
<li>标准存储每月免费 CDN 回源流量：<code>10GB</code></li>
<li>标准存储每月免费写请求 PUT/DELETE：<code>10万次</code></li>
<li>标准存储每月免费读请求 GET：<code>100万次</code></li>
<li>每月免费上传流量：<code>无上限</code></li>
<li>图片处理：<code>每月20TB免费额度</code></li>
</ul>
</li>
</ul>
<h4 id="我的七牛云折腾记实"><a href="#我的七牛云折腾记实" class="headerlink" title="我的七牛云折腾记实"></a>我的七牛云折腾记实</h4><p>我将博客静态页面与博客中使用的图片文件分别存储到了两个七牛云账号下，这样可以更大限度的使用七牛云免费提供的10GB存储空间，最大限度的避免缴纳超额费用。</p>
<p>博客若是放到一个存储空间配置很简单，但是要抽离出来图片单独存储配置起来就稍显繁琐了。</p>
<p>首先介绍下我的工作流：</p>
<ol>
<li>通过 <code>Typora</code> 软件写 <code>markdown</code> 文章。</li>
<li>通过 <code>hexo g</code> 命令生成静态文件。</li>
<li>通过七牛云提供的 <code>qshell qupload</code> 命令行工具上传静态文件到存储空间 <code>账号A</code>。</li>
</ol>
<p>我的解决方案：</p>
<ol>
<li>在第二步操作时，将由 <code>Typora</code> 创建的图片文件上传到七牛云存储空间 <code>账号B</code>。</li>
<li>在第三步操作时，将由 <code>Typora</code> 创建的图片文件过滤后，上传至七牛云存储空间 <code>账号A</code>。</li>
</ol>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
        <tag>七牛云</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之公益404页面</title>
    <url>/posts/hexo/f5fc2d5c.html</url>
    <content><![CDATA[<p>博客搭建好了，可以利用 <code>404</code> 页面做点公益事业，看谁再说我没有公益心 <span class="github-emoji"><span>😏</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60f.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>。</p>
<a id="more"></a>

<h4 id="腾讯公益404"><a href="#腾讯公益404" class="headerlink" title="腾讯公益404"></a>腾讯公益404</h4><p>Site: <a href="https://www.qq.com/404/">腾讯公益404页面介绍</a></p>
<p>方法很简单，只需要在站点根目录 <code>source</code> 下，创建个 <code>404.html</code> HTML文件。</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"all"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">homePageUrl</span>=<span class="string">"/"</span> <span class="attr">homePageName</span>=<span class="string">"回到我的主页"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>完成~</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之基础篇</title>
    <url>/posts/hexo/e99571d.html</url>
    <content><![CDATA[<h4 id="为什么要坚持写博客？"><a href="#为什么要坚持写博客？" class="headerlink" title="为什么要坚持写博客？"></a>为什么要坚持写博客？</h4><ul>
<li>能让人具备更好的总结能力</li>
<li>加深自己对某项技术的理解</li>
<li>提高自己的表达能力</li>
<li>为自己的生活留下足迹</li>
<li>证明自己的能力</li>
<li>获得别人的认可</li>
</ul>
<h4 id="本篇将介绍以下内容"><a href="#本篇将介绍以下内容" class="headerlink" title="本篇将介绍以下内容"></a>本篇将介绍以下内容</h4><ul>
<li>Hexo 安装</li>
<li>Next 主题配置</li>
</ul>
<a id="more"></a>

<h4 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></tbody></table></figure>

<h4 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo init myblog</span><br><span class="line">$ <span class="built_in">cd</span> myblog</span><br><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure>

<p>此时，浏览器打开 <a href="http://localhost:4000/">http://localhost:4000/</a> 地址，即可访问默认 <code>landscape</code> 主题的博客。</p>
<blockquote>
<p>注意：键入 <code>Ctrl + c</code> 可结束当前 <code>hexo server</code> 进程。即：结束监听本地 4000 端口。</p>
</blockquote>
<p>效果如下图所示：</p>
<p><img data-src="e99571d/image-20200926133152556.png" alt="image-20200926133152556"></p>
<h4 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h4><p><img data-src="e99571d/image-20200926131254030.png" alt="image-20200926131254030"></p>
<p>通过 github 检索，根据最高 <code>stars</code> 数排名，下面将介绍以下两款主题配置方法：</p>
<ul>
<li><a href="https://github.com/theme-next/hexo-theme-next">next</a></li>
<li><a href="https://github.com/litten/hexo-theme-yilia">yilia</a></li>
</ul>
<blockquote>
<p>Tips：仓库 <code>iissnan/hexo-theme-next</code> 已迁移至 <code>theme-next/hexo-theme-next</code>。</p>
</blockquote>
<h5 id="next-主题"><a href="#next-主题" class="headerlink" title="next 主题"></a>next 主题</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></tbody></table></figure>

<h5 id="yilia-主题"><a href="#yilia-主题" class="headerlink" title="yilia 主题"></a>yilia 主题</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia themes/yilia</span><br></pre></td></tr></tbody></table></figure>

<p>主题成功克隆到本地后，可通过编辑 <code>_config.yml</code> 文件，更改以下行设置主题：</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">#theme: landscape</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></tbody></table></figure>

<p>再次使用 <code> hexo server</code> 命令启动本地服务，<code>next</code> 主题效果如下：</p>
<p><img data-src="e99571d/image-20200926133003637.png" alt="image-20200926133003637"></p>
<p>若主题有更新，可通过进入对应主题 <code>themes/next</code> 「 这里以 next 主题为例 」目录，执行 <code>git pull</code> 命令，完成本地主题更新操作。</p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://hexo.io/zh-cn/docs/">Hexo 官方中文文档</a></li>
<li><a href="https://xie.infoq.cn/article/3727461977a90905fe3551966">https://xie.infoq.cn/article/3727461977a90905fe3551966</a></li>
<li><a href="https://juejin.cn/post/6844904070533087245">https://juejin.cn/post/6844904070533087245</a></li>
<li><a href="https://www.jianshu.com/p/3a05351a37dc">https://www.jianshu.com/p/3a05351a37dc</a></li>
<li><a href="https://www.jianshu.com/p/d1dedae4d970">https://www.jianshu.com/p/d1dedae4d970</a></li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之打赏功能</title>
    <url>/posts/hexo/17c88669.html</url>
    <content><![CDATA[<p>在移动支付盛行时代，在国内最常见的就属微信支付和支付宝支付了。</p>
<a id="more"></a>

<h4 id="1-保存收款二维码图片"><a href="#1-保存收款二维码图片" class="headerlink" title="1. 保存收款二维码图片"></a>1. 保存收款二维码图片</h4><p>保存微信、支付宝收款二维码图片到 <code>sources/images</code> 目录。</p>
<pre><code>source/images
├── alipay.jpg            支付宝收款二维码
├── avatar.jpg
├── favicon.ico
└── wechatpay.jpg        微信收款二维码</code></pre>
<h4 id="2-编辑-主题配置文件：-config-next-yml-，开启打赏功能"><a href="#2-编辑-主题配置文件：-config-next-yml-，开启打赏功能" class="headerlink" title="2. 编辑 主题配置文件：_config.next.yml ，开启打赏功能"></a>2. 编辑 <code>主题配置文件：_config.next.yml</code> ，开启打赏功能</h4><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Reward (Donate)</span></span><br><span class="line"><span class="comment"># Front-matter variable (unsupport animation).</span></span><br><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, reward will be displayed in every article by default.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#comment: Donate comment here.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.jpg</span></span><br><span class="line">  <span class="attr">alipay:</span> <span class="string">/images/alipay.jpg</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></tbody></table></figure>

<h4 id="3-预览"><a href="#3-预览" class="headerlink" title="3. 预览"></a>3. 预览</h4><p>开启后，在文章底部会有一个 <code>打赏</code> 按钮，点击后将展示收款二维码图片。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之文章字数统计</title>
    <url>/posts/hexo/55025.html</url>
    <content><![CDATA[<p>对于阅读者来说，提供文章字数统计、阅读时长可以起到友好的提示作用。</p>
<a id="more"></a>

<h4 id="1-安装字数统计插件"><a href="#1-安装字数统计插件" class="headerlink" title="1. 安装字数统计插件"></a>1. 安装字数统计插件</h4><p>Github: <a href="https://github.com/theme-next/hexo-symbols-count-time">hexo-symbols-count-time</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install hexo-symbols-count-time --save</span><br></pre></td></tr></tbody></table></figure>

<h4 id="2-编辑-站点配置文件：-config-yml，进行个性化配置"><a href="#2-编辑-站点配置文件：-config-yml，进行个性化配置" class="headerlink" title="2. 编辑 站点配置文件：_config.yml，进行个性化配置"></a>2. 编辑 <code>站点配置文件：_config.yml</code>，进行个性化配置</h4><p>安装完插件后其默认配置已自动开启文章字数统计。</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span></span><br><span class="line">  <span class="attr">suffix:</span> <span class="string">"mins."</span></span><br></pre></td></tr></tbody></table></figure>

<p>中文博客推荐设置 <code>awl:2</code> ，<code>wpm: 300</code>。</p>
<p>编辑 <code>主题配置文件：_config.yml</code> ，配置如下（next 主题默认已配置）：</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之文章链接地址</title>
    <url>/posts/hexo/3ace8d52.html</url>
    <content><![CDATA[<p>以本文文章链接地址为例，默认URL地址：<code>http://localhost:4000/2020/12/01/hexo-博客搭建之文章链接地址/</code> </p>
<p>在浏览器中则是：<code>http://localhost:4000/2020/12/01/hexo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B9%8B%E6%96%87%E7%AB%A0%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80/</code> </p>
<p>而本文将介绍如何将其转换成简短的URL地址：<code>http://localhost:4000/posts/3ace8d52.html</code></p>
<a id="more"></a>

<h5 id="1-安装转化插件"><a href="#1-安装转化插件" class="headerlink" title="1. 安装转化插件"></a>1. 安装转化插件</h5><p>Github: <a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm intall hexo-abbrlink --save</span><br></pre></td></tr></tbody></table></figure>



<h5 id="2-编辑-站点配置文件：-config-yml，启用插件"><a href="#2-编辑-站点配置文件：-config-yml，启用插件" class="headerlink" title="2. 编辑 站点配置文件：_config.yml，启用插件"></a>2. 编辑 <code>站点配置文件：_config.yml</code>，启用插件</h5><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">#permalink: :year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># abbrlink config</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>      <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>        <span class="comment">#support dec(default) and hex</span></span><br><span class="line">  <span class="attr">drafts:</span> <span class="literal">false</span>   <span class="comment">#(true)Process draft,(false)Do not process draft. false(default) </span></span><br><span class="line">  <span class="comment"># Generate categories from directory-tree</span></span><br><span class="line">  <span class="comment"># depth: the max_depth of directory-tree you want to generate, should &gt; 0</span></span><br><span class="line">  <span class="attr">auto_category:</span></span><br><span class="line">     <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment">#true(default)</span></span><br><span class="line">     <span class="attr">depth:</span>        <span class="comment">#3(default)</span></span><br><span class="line">     <span class="attr">over_write:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">auto_title:</span> <span class="literal">false</span> <span class="comment">#enable auto title, it can auto fill the title by path</span></span><br><span class="line">  <span class="attr">auto_date:</span> <span class="literal">false</span> <span class="comment">#enable auto date, it can auto fill the date by time today</span></span><br><span class="line">  <span class="attr">force:</span> <span class="literal">false</span> <span class="comment">#enable force mode,in this mode, the plugin will ignore the cache, and calc the abbrlink for every post even it already had abbrlink.</span></span><br></pre></td></tr></tbody></table></figure>

<p>不同算法和进制转换官方示例：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">crc16 &amp; hex</span><br><span class="line">https://post.zz173.com/posts/66c8.html</span><br><span class="line"></span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https://post.zz173.com/posts/65535.html</span><br><span class="line">crc32 &amp; hex</span><br><span class="line">https://post.zz173.com/posts/8ddf18fb.html</span><br><span class="line"></span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https://post.zz173.com/posts/1690090958.html</span><br></pre></td></tr></tbody></table></figure>

<h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="https://www.jianshu.com/p/c7de2ae59975">https://www.jianshu.com/p/c7de2ae59975</a></li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之版权声明</title>
    <url>/posts/hexo/5e2a0d87.html</url>
    <content><![CDATA[<p>灵魂拷问：开启 <code>版权声明</code> 真的有用吗？管他呢~ 先搞起再说。</p>
<a id="more"></a>

<p>直接修改<code>主题配置文件：_config.next.yml</code>，启用 <code>post</code> 即可。</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/share-your-work/licensing-types-examples</span></span><br><span class="line"><span class="comment"># Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line"><span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之站内搜索</title>
    <url>/posts/hexo/b3e038c1.html</url>
    <content><![CDATA[<p>来给博客加个搜索功能吧~</p>
<a id="more"></a>

<h5 id="1-安装站内搜索插件"><a href="#1-安装站内搜索插件" class="headerlink" title="1. 安装站内搜索插件"></a>1. 安装站内搜索插件</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb  --save</span><br></pre></td></tr></tbody></table></figure>

<h5 id="2-在-主题配置文件：-config-next-yml-中，修改代码以启用插件"><a href="#2-在-主题配置文件：-config-next-yml-中，修改代码以启用插件" class="headerlink" title="2. 在 主题配置文件：_config.next.yml 中，修改代码以启用插件"></a>2. 在 <code>主题配置文件：_config.next.yml</code> 中，修改代码以启用插件</h5><figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="3-结束"><a href="#3-结束" class="headerlink" title="3. 结束"></a>3. 结束</h5>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之站点地图sitemap</title>
    <url>/posts/hexo/6c115e74.html</url>
    <content><![CDATA[<p>使用站点地图为博客进行 <code>SEO</code> 优化。</p>
<p>所谓 <code>SEO</code> 优化呢，就是当用户在检索关键字时提高博客在搜索引擎中的排名。排名越靠前说明对 <code>SEO</code> 优化的越好，就越容易被点击到。</p>
<hr>
<a id="more"></a>

<h4 id="1-安装生成站点地图插件"><a href="#1-安装生成站点地图插件" class="headerlink" title="1. 安装生成站点地图插件"></a>1. 安装生成站点地图插件</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Google</span></span><br><span class="line">$ npm install hexo-generator-sitemap --save</span><br><span class="line"><span class="comment"># Baidu</span></span><br><span class="line">$ npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></tbody></table></figure>

<p>通过 <code>hexo-generator-sitemap</code> 生成站点地图的URL： <code>http://localhost:4000/sitemap.xml</code>。</p>
<p>通过 <code>hexo-generator-baidu-sitemap</code> 生成站点地图的URL：<code>http://localhost:4000/baidusitemap.xml</code>。</p>
<h4 id="2-添加站点地图"><a href="#2-添加站点地图" class="headerlink" title="2. 添加站点地图"></a>2. 添加站点地图</h4><p>将站点地图文件的 <code>URL</code> 地址提交到搜索引擎进行收录即可。</p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="http://cnneillee.github.io/2017/05/10/hexo/Hexo%E8%BF%9B%E9%98%B6%E2%80%94%E2%80%94%E6%B7%BB%E5%8A%A0%E7%AB%99%E7%82%B9%E5%9C%B0%E5%9B%BE/">http://cnneillee.github.io/2017/05/10/hexo/Hexo%E8%BF%9B%E9%98%B6%E2%80%94%E2%80%94%E6%B7%BB%E5%8A%A0%E7%AB%99%E7%82%B9%E5%9C%B0%E5%9B%BE/</a></li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之自动刷新</title>
    <url>/posts/hexo/c30d1505.html</url>
    <content><![CDATA[<h5 id="开端"><a href="#开端" class="headerlink" title="开端"></a>开端</h5><p>有这样一个诉求：我希望写文章的时候，浏览器端能实时刷新文件保存后的最终效果。这样可以避免启停服务、手动刷新浏览器，解放双手，啊哈哈~</p>
<a id="more"></a>

<h5 id="利用-browsersync-实现自动刷新"><a href="#利用-browsersync-实现自动刷新" class="headerlink" title="利用 browsersync 实现自动刷新"></a>利用 browsersync 实现自动刷新</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install -g browser-sync</span><br><span class="line">$ npm install hexo-browsersync --save-dev</span><br><span class="line">$ hexo s</span><br></pre></td></tr></tbody></table></figure>

<p>释义：</p>
<ul>
<li>首先，在全局安装 <code>browser-sync</code> 插件。</li>
<li>其次，在当前项目开发依赖项中安装 <code>hexo-browsersync</code> 插件。</li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之订阅RSS</title>
    <url>/posts/hexo/b947fe32.html</url>
    <content><![CDATA[<p>为 hexo 博客添加RSS订阅功能</p>
<hr>
<a id="more"></a>

<h4 id="1-安装RSS插件"><a href="#1-安装RSS插件" class="headerlink" title="1. 安装RSS插件"></a>1. 安装RSS插件</h4><p>Github: <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></tbody></table></figure>

<h4 id="2-可以编辑-站点配置文件：-config-yml，配置插件"><a href="#2-可以编辑-站点配置文件：-config-yml，配置插件" class="headerlink" title="2. 可以编辑 站点配置文件：_config.yml，配置插件"></a>2. 可以编辑 <code>站点配置文件：_config.yml</code>，配置插件</h4><p>插件安装后默认已启用，无需再配置，除非定制化你懂得~</p>
<p><strong>个人认为默认就够用了，不需要再增加以下代码了，<code>_config.yml</code> 文件保持简洁挺好。</strong></p>
<figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">' '</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">icon.png</span></span><br><span class="line">  <span class="attr">autodiscovery:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">template:</span></span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><code>type</code> 支持 <code>atom</code> 和 <code>rss2</code> ，默认 <code>atom</code> ，也可同时开启。</li>
</ul>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="comment"># Generate atom feed</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Generate both atom and rss2 feeds</span></span><br><span class="line">  <span class="attr">type:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">atom</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">rss2</span></span><br><span class="line">  <span class="attr">path:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">atom.xml</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">rss2.xml</span></span><br></pre></td></tr></tbody></table></figure>

<h4 id="RSS-客户端"><a href="#RSS-客户端" class="headerlink" title="RSS 客户端"></a>RSS 客户端</h4><ul>
<li><p>苹果手机</p>
<ul>
<li>ReadOn - 目前我是使用的是这款 App</li>
<li>Ego Reader</li>
</ul>
</li>
<li><p>安卓手机</p>
<ul>
<li>未完，待续…</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之访问量统计</title>
    <url>/posts/hexo/8f82a93c.html</url>
    <content><![CDATA[<p>为 hexo 博客添加访问量统计功能</p>
<hr>
<a id="more"></a>

<h4 id="不蒜子访问量统计"><a href="#不蒜子访问量统计" class="headerlink" title="不蒜子访问量统计"></a>不蒜子访问量统计</h4><p>Site: <a href="http://ibruce.info/2015/04/04/busuanzi/#more">不蒜子</a></p>
<p><code>next</code> 主题默认已内置不蒜子相关功能，具体路径：<code>themes/next/layout/_third-party/statistics/busuanzi-counter.swig</code>。</p>
<p>所以只需编辑 <code>主题配置文件：_config.next.yml</code> 启用即可。</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br></pre></td></tr></tbody></table></figure>

<p>共有两种计算方式：</p>
<ul>
<li><code>pv</code> ：单个用户连续点击n篇文章，记录n次访问量。</li>
<li><code>uv</code>：单个用户连续点击n篇文章，只记录1次访客数。</li>
</ul>
<h4 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h4><p>Site: <a href="https://tongji.baidu.com/">百度统计</a></p>
<p><strong>此方式只能通过百度统计平台查看访问量，将不会在博客中展示访问量</strong></p>
<p>首先通过百度统计 <code>新增网站</code> -&gt;<code>获取代码</code>：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> _hmt = _hmt || [];</span></span><br><span class="line"><span class="javascript">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> hm = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</span></span><br><span class="line"><span class="javascript">  hm.src = <span class="string">"https://hm.baidu.com/hm.js?6f8c4c7aa31d1ab010a0b34261fb2021"</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>]; </span></span><br><span class="line">  s.parentNode.insertBefore(hm, s);</span><br><span class="line">})();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>我们只需要将 <code>https://hm.baidu.com/hm.js?6f8c4c7aa31d1ab010a0b34261fb2021</code> 中的 <code>6f8c4c7aa31d1ab010a0b34261fb2021</code> 复制到 <code>主题配置文件：_config.next.yml</code> 中即可。</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Baidu Analytic`</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="string">6f8c4c7aa31d1ab010a0b34261fb2021</span></span><br></pre></td></tr></tbody></table></figure>

<p>之后，我们就可以通过百度统计平台查看博客访问量了。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之评论</title>
    <url>/posts/hexo/71551206.html</url>
    <content><![CDATA[<p>博客怎么能没有评论功能呢？安排~</p>
<a id="more"></a>

<h5 id="Disqus-账号注册"><a href="#Disqus-账号注册" class="headerlink" title="Disqus 账号注册"></a>Disqus 账号注册</h5><p>使用 <code>Disqus</code> 前，需要到 <a href="https://disqus.com/">官网</a> 注册账号，创建站点。</p>
<p><img data-src="71551206/image-20201128232352077.png" alt="image-20201128232352077"></p>
<h5 id="开启-Disqus"><a href="#开启-Disqus" class="headerlink" title="开启 Disqus"></a>开启 <code>Disqus</code></h5><p>编辑 <code>主题配置文件：_config.next.yml</code>，启用 <code>Disqus</code>。</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Disqus</span></span><br><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">shortname:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="https://www.jianshu.com/p/d68de067ea74">https://www.jianshu.com/p/d68de067ea74</a></li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之配置篇</title>
    <url>/posts/hexo/8defb0b8.html</url>
    <content><![CDATA[<p>hexo 默认是没有分类、标签页的，我们可以通过创建分类、标签页将不同文章归结到一个页面。</p>
<h4 id="本篇将介绍以下内容"><a href="#本篇将介绍以下内容" class="headerlink" title="本篇将介绍以下内容"></a>本篇将介绍以下内容</h4><ul>
<li>配置博客作者、语言</li>
<li>添加页面：标签、分类、关于</li>
<li>为 <code>github-pages</code> 仓库增加 <code>README.md</code> 文件</li>
</ul>
<blockquote>
<p>Tips:  </p>
<ul>
<li><p><code>站点配置文件</code> 是 <code>_config.yml</code>。</p>
</li>
<li><p><code>主题配置文件</code> 是 <code>_config.next.yml</code> （需手动创建，可从 <code>cp themes/next/_config.yml ./_config.next.yml</code> 拷贝一份用来更改）</p>
</li>
</ul>
<p><code>Hexo</code> 加载配置文件优先顺序: <code>_config.yml</code> &gt; <code>_config.next.yml</code> &gt; <code>themes/next/_config.yml</code> 。即：<code>_config.yml</code> 配置文件优先级最高。</p>
</blockquote>
<a id="more"></a>

<h4 id="基本信息设置"><a href="#基本信息设置" class="headerlink" title="基本信息设置"></a>基本信息设置</h4><p>编辑 <code>站点配置文件：_config.yml</code>，修改如下配置：</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">codezm</span> <span class="string">的个人博客</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">codezm</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">''</span></span><br></pre></td></tr></tbody></table></figure>

<p>头像、网站缩略图设置，编辑 <code>主题配置文件：_config.yml</code>：</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Custom Logo (Do not support scheme Mist)</span></span><br><span class="line"><span class="attr">custom_logo:</span> <span class="string">/images/avatar.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Site Information Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/getting-started/</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon.ico</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon.ico</span></span><br><span class="line">  <span class="comment">#apple_touch_icon: /images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="comment">#safari_pinned_tab: /images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="Next-主题样式设置"><a href="#Next-主题样式设置" class="headerlink" title="Next 主题样式设置"></a>Next 主题样式设置</h4><p>Next 有4种风格供我们选择，编辑 <code>主题配置文件：_config.next.yml</code></p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="添加「标签」页面"><a href="#添加「标签」页面" class="headerlink" title="添加「标签」页面"></a>添加「标签」页面</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></tbody></table></figure>

<p>执行以上命令，将创建 <code>source/tags/index.md</code> 文件，编辑文件内容为：</p>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2020-09-26 15:28:36</span><br><span class="line">type: "tags"</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>Tips:</p>
<ul>
<li><p>若开启 <code>disqus</code> 等文章评论功能，可在 <code>分类</code>、<code>标签</code> 页中增加 <code>comments: false</code> 来禁止评论。</p>
</li>
<li><p>这里的 <code>title</code> 可自定义设定，但 <code>type</code> 类型是固定，下同 <code>categories</code>。</p>
</li>
<li><p>一篇文章可以设置多个标签。标签是 <code>has a</code> 关系。</p>
</li>
</ul>
</blockquote>
<p>编辑 <code>source/_posts/hello-world.md</code> 文件，增加 <code>tags</code>。</p>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  -</span> hello-world</span><br><span class="line"><span class="bullet">  -</span> hexo</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure>

<p>在菜单中添加链接。编辑 <code>主题配置文件：_config.next.yml</code>：</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># External url should start with http:// or https://</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="comment">#about: /about/ || fa fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || fa fa-th</span></span><br><span class="line">  <span class="comment">#archives: /archives/ || fa fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="添加「分类」页面"><a href="#添加「分类」页面" class="headerlink" title="添加「分类」页面"></a>添加「分类」页面</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></tbody></table></figure>

<p>执行以上命令，将创建 <code>source/categories/index.md</code> 文件，编辑文件内容为：</p>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2020-09-26 15:38:52</span><br><span class="line">type: "categories"</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>注：一篇文章最多只采用一个分类，第一个设定分类。分类是 <code>is a</code> 关系。</p>
</blockquote>
<p>编辑 <code>source/_posts/hello-world.md</code> 文件，增加 <code>categories</code>。</p>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  -</span> hello-world</span><br><span class="line"><span class="bullet">  -</span> hexo</span><br><span class="line">categories: hello-world</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure>

<p>在菜单中添加链接。编辑 <code>主题配置文件：_config.next.yml</code>：</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># External url should start with http:// or https://</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="comment">#about: /about/ || fa fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="comment">#archives: /archives/ || fa fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></tbody></table></figure>

<p>更多样式图标，可参考：<a href="https://fontawesome.com/icons?from=io">https://fontawesome.com/icons?from=io</a></p>
<h4 id="添加「关于」页面"><a href="#添加「关于」页面" class="headerlink" title="添加「关于」页面"></a>添加「关于」页面</h4><p>添加 <code>关于</code> 页面与 <code>标签</code>、<code>分类</code> 类似，通过以下命令生成 <code>关于</code> 目录及文件： <code>source/about/index.md</code> 。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new page about</span><br></pre></td></tr></tbody></table></figure>

<p>之后，像创建 <code>标签</code> 一样，编辑 <code>主题配置文件：_config.next.yml</code> ：</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># External url should start with http:// or https://</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="comment">#archives: /archives/ || fa fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></tbody></table></figure>

<h4 id="为-github-pages-仓库增加-README-md-文件"><a href="#为-github-pages-仓库增加-README-md-文件" class="headerlink" title="为 github-pages 仓库增加 README.md 文件"></a>为 <code>github-pages</code> 仓库增加 <code>README.md</code> 文件</h4><p>如果你是用 <code>github-pages</code> 服务来展示博客的，那肯定知道 <code>README.md</code> 文件。那如何创建它呢？</p>
<p>首先在 <code>source</code> 目录下创建 <code>README.md</code> 文件，然后编辑 <code>站点配置文件：_config.yml</code> 跳过渲染引擎处理：</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">README.md</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h4><p><img data-src="8defb0b8/image-20200926202628778.png" alt="image-20200926202628778"></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-博客搭建之顶部加载进度条</title>
    <url>/posts/hexo/9d9af11a.html</url>
    <content><![CDATA[<p>当访问文章页时，会在网页顶部有个页面加载的进度条：<a href="https://github.com/theme-next/theme-next-pace">theme-next-pace</a>。</p>
<a id="more"></a>

<p>根据项目在 Github 中的提示，共有两种方法实现。</p>
<ul>
<li><p>第一种是将项目直接克隆到本地指定目录，然后修改配置文件开启。</p>
</li>
<li><p>第二种是通过配置 <code>cdn</code> ，然后接着修改配置文件启用。</p>
</li>
</ul>
<p>可以看出第二种方法更简单，直接修改 <code>主题配置文件：_config.next.yml</code> 即可。</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pace</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/HubSpot/pace</span></span><br><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Themes list:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">minimal</span></span><br><span class="line"></span><br><span class="line"><span class="attr">vendors:</span></span><br><span class="line"><span class="comment"># 此处省略中间代码...</span></span><br><span class="line">  <span class="attr">pace:</span> <span class="string">//cdn.jsdelivr.net/npm/pace-js@1/pace.min.js</span></span><br><span class="line">  <span class="attr">pace_css:</span> <span class="string">//cdn.jsdelivr.net/npm/pace-js@1/themes/blue/pace-theme-minimal.css</span></span><br></pre></td></tr></tbody></table></figure>



<p>这里我尝试配置过 <code>cdn.bootcdn.net</code> 源，但发现没有任何效果，估计与源库有关：<code>npm/pace-js@1</code>，在 <a href="https://www.bootcdn.cn/">BootCDN</a> 并未找到相同路径的库文件，在这儿也只是记录下足迹，也希望有了解的大佬告知下其他可配置的国内源。</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">vendors:</span></span><br><span class="line"><span class="comment"># 此处省略中间代码...</span></span><br><span class="line">  <span class="attr">pace:</span> <span class="string">//cdn.bootcdn.net/ajax/libs/pace/1.0.2/pace.js</span></span><br><span class="line">  <span class="attr">pace_css:</span> <span class="string">//cdn.bootcdn.net/ajax/libs/pace/1.0.2/themes/black/pace-theme-minimal.css</span></span><br></pre></td></tr></tbody></table></figure>



<blockquote>
<p>嗯… 因为加这玩意儿即耗电也费流量，我也给屏蔽了… 谁让我是节能减排、绿色环保人士来[哈嘿]。</p>
</blockquote>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>web安全之隐藏 nginx、php 版本号</title>
    <url>/posts/web-safe/4305d38b.html</url>
    <content><![CDATA[<p>web 服务的版本号对于恶意的攻击者无疑是有帮助的，因为不同版本号或多或少有其对应的漏洞，一旦被恶意的攻击者发现将对线上服务造成严重危害。而隐藏服务版本号则有助于提升 web 的安全性。</p>
<a id="more"></a>


<h4 id="隐藏-Nginx-版本号"><a href="#隐藏-Nginx-版本号" class="headerlink" title="隐藏 Nginx 版本号"></a>隐藏 Nginx 版本号</h4><h5 id="上游服务：php"><a href="#上游服务：php" class="headerlink" title="上游服务：php"></a>上游服务：php</h5><p>设置 <code>Server</code> 头部值，这将覆盖 <code>nginx</code> 的 <code>Server</code> 默认值。</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">header(<span class="string">'Server: codezm'</span>);</span><br></pre></td></tr></tbody></table></figure>

<p><img data-src="4305d38b/image-20210106122352102.png" alt="image-20210106122352102"></p>
<h5 id="nginx-层"><a href="#nginx-层" class="headerlink" title="nginx 层"></a>nginx 层</h5><ol>
<li>打开 <code>nginx.conf</code> 配置文件。</li>
<li>找到 <code>http</code> 块，增加 <code>server_tokens off;</code> 指令。</li>
<li>重启 nginx ：<code>nginx -s reload</code>。<br><img data-src="4305d38b/image-20210106122015268.png" alt="image-20210106122015268"></li>
</ol>
<h4 id="隐藏-PHP-版本号"><a href="#隐藏-PHP-版本号" class="headerlink" title="隐藏 PHP 版本号"></a>隐藏 PHP 版本号</h4><p>正常请求时，会响应 <code>X-Powered-By</code> 头部。</p>
<p><img data-src="4305d38b/image-20210106105138638.png" alt="image-20210106105138638"></p>
<h5 id="PHP-代码可通过设置-header-修改-X-Powered-By-头部响应值。"><a href="#PHP-代码可通过设置-header-修改-X-Powered-By-头部响应值。" class="headerlink" title="PHP 代码可通过设置 header 修改 X-Powered-By 头部响应值。"></a>PHP 代码可通过设置 <code>header</code> 修改 <code>X-Powered-By</code> 头部响应值。</h5><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">header(<span class="string">'X-Powered-By: codezm-1.0.1,ASP.NET'</span>);</span><br></pre></td></tr></tbody></table></figure>
<p><img data-src="4305d38b/image-20210106105921123.png" alt="image-20210106105921123"></p>
<h5 id="通过编辑-php-ini-文件，将-expose-php-Off-配置项设置为-Off-可关闭响应-X-Powered-By-头部，默认值是-On。"><a href="#通过编辑-php-ini-文件，将-expose-php-Off-配置项设置为-Off-可关闭响应-X-Powered-By-头部，默认值是-On。" class="headerlink" title="通过编辑 php.ini 文件，将 expose_php = Off 配置项设置为 Off 可关闭响应 X-Powered-By 头部，默认值是 On。"></a>通过编辑 <code>php.ini</code> 文件，将 <code>expose_php = Off</code> 配置项设置为 <code>Off</code> 可关闭响应 <code>X-Powered-By</code> 头部，默认值是 <code>On</code>。</h5><p><img data-src="4305d38b/image-20210106105403496.png" alt="image-20210106105403496"></p>
<h5 id="Nginx-忽略响应头部。"><a href="#Nginx-忽略响应头部。" class="headerlink" title="Nginx 忽略响应头部。"></a><code>Nginx</code> 忽略响应头部。</h5><h6 id="PHP-FPM-fastcgi-hide-header-X-Powered-By"><a href="#PHP-FPM-fastcgi-hide-header-X-Powered-By" class="headerlink" title="PHP-FPM: fastcgi_hide_header X-Powered-By;"></a>PHP-FPM: <code>fastcgi_hide_header X-Powered-By;</code></h6><figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">location</span> <span class="regexp">~ \.php$</span> {</span><br><span class="line">  <span class="attribute">root</span>           /data/htdocs;</span><br><span class="line">  <span class="attribute">fastcgi_hide_header</span> X-Powered-By;</span><br><span class="line">  <span class="attribute">fastcgi_pass</span>   <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">  <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">  <span class="attribute">include</span>        fastcgi.conf;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 重新加载配置文件</span></span><br><span class="line">nginx -s reload</span><br></pre></td></tr></tbody></table></figure>

<p><img data-src="4305d38b/image-20210106120847621.png" alt="image-20210106120847621"></p>
<h6 id="Proxy-proxy-hide-header-X-Powered-By"><a href="#Proxy-proxy-hide-header-X-Powered-By" class="headerlink" title="Proxy: proxy_hide_header X-Powered-By;"></a>Proxy: <code>proxy_hide_header X-Powered-By;</code></h6><p>配置 nginx 反向代理</p>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">location</span><span class="regexp"> ^~</span> /phpServer {</span><br><span class="line">  <span class="attribute">proxy_hide_header</span> X-Powered-By;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8000/;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 重新加载配置文件</span></span><br><span class="line">nginx -s reload</span><br><span class="line"><span class="comment"># 启动本地服务</span></span><br><span class="line">php -S 127.0.0.1:8000</span><br></pre></td></tr></tbody></table></figure>

<p><img data-src="4305d38b/image-20210106120353806.png" alt="image-20210106120353806"></p>
]]></content>
      <categories>
        <category>web-safe</category>
      </categories>
      <tags>
        <tag>web-safe</tag>
      </tags>
  </entry>
  <entry>
    <title>Apifox实现接口前置脚本与后置脚本</title>
    <url>/posts/%E6%8E%A5%E5%8F%A3%E7%AE%A1%E7%90%86/88ee64c7.html</url>
    <content><![CDATA[<h1 id="Apifox实现接口前置脚本与后置脚本"><a href="#Apifox实现接口前置脚本与后置脚本" class="headerlink" title="Apifox实现接口前置脚本与后置脚本"></a>Apifox实现接口前置脚本与后置脚本</h1><h3 id="环境变量配置"><a href="#环境变量配置" class="headerlink" title="环境变量配置"></a>环境变量配置</h3><ul>
<li>BASE_URL</li>
<li>username</li>
<li>password</li>
</ul>
<a id="more"></a>

<h4 id="Apifox-接口前置操作-自定义脚本："><a href="#Apifox-接口前置操作-自定义脚本：" class="headerlink" title="Apifox 接口前置操作 - 自定义脚本："></a>Apifox 接口前置操作 - 自定义脚本：</h4><p>当接口地址中包含 <code>/login</code> 字符时将不自动添加 <code>Authorization</code> 头。</p>
<p>当接口 <code>Auth</code> 设置为以下类型时，将不自动添加 <code>Authorization</code> 头：</p>
<ul>
<li><code>Bearer Token</code> ：自定义 token。</li>
<li><code>No Auth</code>：不需要身份认证。</li>
</ul>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> requestUrl = pm.request.url.getPath();</span><br><span class="line"><span class="keyword">if</span> (requestUrl.indexOf(<span class="string">"/login"</span>) === <span class="number">-1</span> &amp;&amp; pm.request.auth != <span class="literal">undefined</span>) {</span><br><span class="line">    <span class="keyword">if</span> (pm.request.auth.type === <span class="string">"bearer"</span> || pm.request.auth.type === <span class="string">"noauth"</span>) {</span><br><span class="line">        <span class="comment">// 使用接口自定义的token值</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">  	</span><br><span class="line">  	<span class="comment">// 一开始想通过环境变量设置哪些需要添加token的接口，然后通过正则表达式进行匹配。</span></span><br><span class="line">    <span class="comment">// 但发现正则表达式并不匹配。apifox中的动态正则表达式变量可能有问题。</span></span><br><span class="line"> 		<span class="comment">// if (pm.globals.get("auth_url") === "") {</span></span><br><span class="line">    <span class="comment">//     return;</span></span><br><span class="line">    <span class="comment">// }</span></span><br><span class="line">    <span class="comment">// var authUrls = pm.globals.get("auth_url").split(",");</span></span><br><span class="line">    <span class="comment">// var found = false;</span></span><br><span class="line">    <span class="comment">// for(var i = 0; i &lt; authUrls.length; i++) {</span></span><br><span class="line">    <span class="comment">//     if (authUrls[i] === requestUrl || requestUrl.indexOf(authUrls[i]) !== -1) {</span></span><br><span class="line">    <span class="comment">//         found = true;</span></span><br><span class="line">    <span class="comment">//         break;</span></span><br><span class="line">    <span class="comment">//     }</span></span><br><span class="line">    <span class="comment">//     if ((new RegExp(authUrls[i])).exec(requestUrl) !== null) {</span></span><br><span class="line">    <span class="comment">//         found = true;</span></span><br><span class="line">    <span class="comment">//         break;</span></span><br><span class="line">    <span class="comment">//     }</span></span><br><span class="line">    <span class="comment">// }</span></span><br><span class="line">    <span class="comment">// if (!found) {</span></span><br><span class="line">    <span class="comment">//     return;</span></span><br><span class="line">    <span class="comment">// }</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (!pm.environment.get(<span class="string">"username"</span>) || !pm.environment.get(<span class="string">"password"</span>)) {</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"设置TOKEN失败，缺少鉴权环境变量：username、password"</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!pm.environment.get(<span class="string">"authorization"</span>)</span><br><span class="line">            || pm.environment.get(<span class="string">"authorization"</span>) == <span class="string">"undefined"</span></span><br><span class="line">            || (</span><br><span class="line">                pm.environment.get(<span class="string">"expires_in"</span>) </span><br><span class="line">                &amp;&amp; (<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()) &gt; pm.environment.get(<span class="string">"expires_in"</span>)</span><br><span class="line">                )</span><br><span class="line">            ) {</span><br><span class="line">        pm.sendRequest({</span><br><span class="line">            url:  pm.environment.get(<span class="string">"BASE_URL"</span>) + <span class="string">"/login"</span>, </span><br><span class="line">            method: <span class="string">'POST'</span>,</span><br><span class="line">            header: {</span><br><span class="line">                <span class="string">'isToken'</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="string">'Content-Type'</span>: <span class="string">'application/json;charset=UTF-8'</span></span><br><span class="line">            },</span><br><span class="line">            body: {</span><br><span class="line">                mode: <span class="string">'raw'</span>,<span class="comment">// 此处为 raw</span></span><br><span class="line">                raw: <span class="built_in">JSON</span>.stringify({ <span class="attr">username</span>: pm.environment.get(<span class="string">"username"</span>), <span class="attr">password</span>: pm.environment.get(<span class="string">"password"</span>)}),</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        , <span class="function"><span class="keyword">function</span> (<span class="params">err, response</span>) </span>{</span><br><span class="line">            <span class="keyword">var</span> data = response.json();</span><br><span class="line">            <span class="keyword">if</span> (data.token) {</span><br><span class="line">                pm.environment.set(<span class="string">"authorization"</span>, data.token);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"First add Authorization headers, requestUrl: "</span> + requestUrl, data)</span><br><span class="line">                pm.request.headers.add({</span><br><span class="line">                    key: <span class="string">'Authorization'</span>,</span><br><span class="line">                    value: <span class="string">"Bearer "</span> + data.token</span><br><span class="line">                });</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Add Authorization headers, requestUrl: "</span> + requestUrl, pm.environment.get(<span class="string">"authorization"</span>))</span><br><span class="line">        pm.request.headers.add({</span><br><span class="line">            key: <span class="string">'Authorization'</span>,</span><br><span class="line">            value: <span class="string">"Bearer "</span> + pm.environment.get(<span class="string">"authorization"</span>)</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<h4 id="Apifox-接口后置操作-自定义脚本："><a href="#Apifox-接口后置操作-自定义脚本：" class="headerlink" title="Apifox 接口后置操作 - 自定义脚本："></a>Apifox 接口后置操作 - 自定义脚本：</h4><p>当响应的 <code>JSON</code> 数据中的 <code>msg</code> 包含 <code>认证失败，无法访问系统资源</code> 字符串时将自动设置最新 token 值。</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line">pm.test(<span class="string">"authorization 效验"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> jsonData = pm.response.json();</span><br><span class="line">  <span class="keyword">if</span> (jsonData.msg &amp;&amp; jsonData.msg.indexOf(<span class="string">"认证失败，无法访问系统资源"</span>) !== <span class="number">-1</span> &amp;&amp; pm.request.auth != <span class="literal">undefined</span>) {</span><br><span class="line">    <span class="keyword">if</span> (pm.request.auth.type === <span class="string">"bearer"</span> || pm.request.auth.type === <span class="string">"noauth"</span>) {</span><br><span class="line">      <span class="keyword">var</span> bearer = pm.request.auth.bearer.toJSON();</span><br><span class="line">      <span class="keyword">if</span> (bearer[<span class="number">0</span>].value !== pm.environment.get(<span class="string">"authorization"</span>)) {</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!pm.environment.get(<span class="string">"username"</span>) || !pm.environment.get(<span class="string">"password"</span>)) {</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"设置TOKEN失败，缺少鉴权环境变量：username、password"</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    pm.sendRequest({</span><br><span class="line">      url:  pm.environment.get(<span class="string">"BASE_URL"</span>) + <span class="string">"/login"</span>, </span><br><span class="line">      method: <span class="string">'POST'</span>,</span><br><span class="line">      header: {</span><br><span class="line">          <span class="string">'isToken'</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="string">'Content-Type'</span>: <span class="string">'application/json;charset=UTF-8'</span></span><br><span class="line">      },</span><br><span class="line">      body: {</span><br><span class="line">          mode: <span class="string">'raw'</span>,<span class="comment">// 此处为 raw</span></span><br><span class="line">          raw: <span class="built_in">JSON</span>.stringify({ <span class="attr">username</span>: pm.environment.get(<span class="string">"username"</span>), <span class="attr">password</span>: pm.environment.get(<span class="string">"password"</span>)}),</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    , <span class="function"><span class="keyword">function</span> (<span class="params">err, response</span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> data = response.json();</span><br><span class="line">        <span class="keyword">if</span> (data.token) {</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"设置新TOKEN"</span>, data)</span><br><span class="line">            pm.environment.set(<span class="string">"authorization"</span>, data.token);</span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line">  }</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>接口管理</category>
      </categories>
      <tags>
        <tag>Apifox</tag>
        <tag>接口管理</tag>
      </tags>
  </entry>
  <entry>
    <title>Postman利用Pre-request脚本实现自动登录接口Token设置</title>
    <url>/posts/%E6%8E%A5%E5%8F%A3%E7%AE%A1%E7%90%86/79d87208.html</url>
    <content><![CDATA[<h1 id="Postman利用Pre-request脚本实现自动登录接口Token设置"><a href="#Postman利用Pre-request脚本实现自动登录接口Token设置" class="headerlink" title="Postman利用Pre-request脚本实现自动登录接口Token设置"></a>Postman利用Pre-request脚本实现自动登录接口Token设置</h1><a id="more"></a>

<h2 id="Pre-request-Script"><a href="#Pre-request-Script" class="headerlink" title="Pre-request Script"></a>Pre-request Script</h2><figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line">pm.sendRequest({</span><br><span class="line">      url:  <span class="string">"http://www.codezm.com/api/admin_user/login"</span>, </span><br><span class="line">      method: <span class="string">'POST'</span>,</span><br><span class="line">      header: {</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>,</span><br><span class="line">      },</span><br><span class="line">      body: {</span><br><span class="line">          mode: <span class="string">'urlencoded'</span>,</span><br><span class="line">          urlencoded: [</span><br><span class="line">            {<span class="attr">key</span>: <span class="string">"username"</span>, <span class="attr">value</span>: <span class="string">"admin"</span>, <span class="attr">disabled</span>: <span class="literal">false</span>},</span><br><span class="line">            {<span class="attr">key</span>: <span class="string">"password"</span>, <span class="attr">value</span>: <span class="string">"admin"</span>, <span class="attr">disabled</span>: <span class="literal">false</span>},</span><br><span class="line">        ]</span><br><span class="line">      }</span><br><span class="line">  }</span><br><span class="line">  , <span class="function"><span class="keyword">function</span> (<span class="params">err, response</span>) </span>{</span><br><span class="line">    pm.environment.set(<span class="string">"X-TOKEN"</span>, response.json().result.token);</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure>



<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://blog.csdn.net/testdeveloper/article/details/80712273">https://blog.csdn.net/testdeveloper/article/details/80712273</a></li>
<li><a href="https://learnku.com/docs/composer/2018/scripts/2095">https://learnku.com/docs/composer/2018/scripts/2095</a></li>
<li><a href="https://www.cnblogs.com/52fhy/p/7102083.html">https://www.cnblogs.com/52fhy/p/7102083.html</a></li>
</ul>
]]></content>
      <categories>
        <category>接口管理</category>
      </categories>
      <tags>
        <tag>接口管理</tag>
        <tag>Postman</tag>
      </tags>
  </entry>
  <entry>
    <title>XPath使用汇总</title>
    <url>/posts/%E7%88%AC%E8%99%AB/878438cb.html</url>
    <content><![CDATA[<h2 id="XPath使用汇总"><a href="#XPath使用汇总" class="headerlink" title="XPath使用汇总"></a>XPath使用汇总</h2><p>XPath轴(XPath Axes)可定义某个相对于当前节点的节点集：<br>1、child 选取当前节点的所有子元素<br>2、parent 选取当前节点的父节点<br>3、descendant 选取当前节点的所有后代元素（子、孙等）<br>4、ancestor 选取当前节点的所有先辈（父、祖父等）<br>5、descendant-or-self 选取当前节点的所有后代元素（子、孙等）以及当前节点本身<br>6、ancestor-or-self 选取当前节点的所有先辈（父、祖父等）以及当前节点本身<br>7、preceding-sibling 选取当前节点之前的所有同级节点<br>8、following-sibling 选取当前节点之后的所有同级节点<br>9、preceding 选取文档中当前节点的开始标签之前的所有节点<br>10、following 选取文档中当前节点的结束标签之后的所有节点<br>11、self 选取当前节点<br>12、attribute 选取当前节点的所有属性<br>13、namespace 选取当前节点的所有命名空间节点 </p>
 <a id="more"></a>

<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>获取父级：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">response.xpath('//*[@class="ALink"]/parent::*')</span><br></pre></td></tr></tbody></table></figure>

<p>获取后面同级第一个元素</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">response.xpath('//*[@class="ALink"]/following-sibling::*[1]')</span><br></pre></td></tr></tbody></table></figure>

<p> 获取 a 标签中含有 rsjfont8 样式的</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">response.xpath('//a[@class="rsjfont8"]')</span><br></pre></td></tr></tbody></table></figure>

<p>获取 a 标签中除去 rsjfont8 样式的</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">response.xpath('//a[not(@class="rsjfont8")]')</span><br></pre></td></tr></tbody></table></figure>



<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://www.cnblogs.com/shuaichao/p/9262351.html">xpath 获取父级，和同级</a></li>
</ul>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>XPath</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>ddrk之m3u8视频源地址解码</title>
    <url>/posts/%E7%88%AC%E8%99%AB/b1a89355.html</url>
    <content><![CDATA[<p>ddrk m3u8视频源地址解码</p>
<p><code>低端影视</code> 网站可观看各种电影，网速及分辨率也满足需求，但唯独没有视频对应下载地址（网络高峰期不给力，经常卡顿，无法正常观影~），通过网络请求分析，应该是 m3u8 格式的资源。</p>
<h5 id="m3u8-index-文件"><a href="#m3u8-index-文件" class="headerlink" title="m3u8 index 文件"></a>m3u8 index 文件</h5><p>这里以星际迷航电影源解析为例：</p>
<p>打开链接地址 <a href="https://ddrk.me/star-trek-discovery/?ep=1%EF%BC%8C%E6%89%93%E5%BC%80">https://ddrk.me/star-trek-discovery/?ep=1，打开</a> chrome 开发者工具，在 network 面板中监听 <code>XHR</code> 异步网络请求，点击视频可观察到：</p>
<p><img data-src="b1a89355/image-20201115155154892.png" alt="image-20201115155154892"></p>
<p><img data-src="b1a89355/image-20201115155239705.png" alt="image-20201115155239705"></p>
<p>第一个 <code>video</code> 请求应该就是 m3u8 文件的 index，但响应值中的 <code>pin</code> 明显是加密过的。</p>
<p>接着通过 <code>Sources</code> 面板，全局搜索下源代码中的 <code>pin</code> 关键字，最终找到相关后续处理的 javascript 代码，里面有 <code>ungzip</code> 关键字，可得出是 <code>pin</code> 值通过 <code>gzip</code> 加密的。</p>
<p><img data-src="b1a89355/image-20201115155509206.png" alt="image-20201115155509206"></p>
<p>而这里也可以看出结果是通过第三方库 <code>pako</code>，接着我们本地搭建下开发环境，模拟解析下 <code>pin</code> 值，示例代码如下：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/pako/1.0.6/pako.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"decode()"</span>&gt;</span>decode<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ciphertext"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">decode</span>(<span class="params"></span>)</span>{</span></span><br><span class="line"><span class="javascript">            $.ajax({</span></span><br><span class="line"><span class="javascript">                <span class="comment">//headers: {  'origin': "https://ddrk.me" },</span></span></span><br><span class="line"><span class="javascript">                type: <span class="string">"get"</span>,</span></span><br><span class="line"><span class="javascript">                url: <span class="string">"http://test.codezm.com/test/cors"</span>,</span></span><br><span class="line">                data: {},</span><br><span class="line"><span class="javascript">                dataType: <span class="string">"json"</span></span></span><br><span class="line"><span class="javascript">            }).done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>{</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(data)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> encodedData = data.pin;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//var decodedData = window.atob(encodedData);</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> data = pako.ungzip(encodedData, {<span class="attr">to</span>: <span class="string">"string"</span>});</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#ciphertext'</span>).text(data);</span></span><br><span class="line"><span class="javascript">            }).fail(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span></span><br><span class="line">            </span><br><span class="line">            })</span><br><span class="line">    }</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>服务端对应做了个可跨域请求接口，<code>PHP</code> 代码如下：</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">corsAction</span>(<span class="params"></span>) </span>{</span><br><span class="line">    header(<span class="string">"Access-Control-Allow-Origin: *"</span>);</span><br><span class="line"></span><br><span class="line">    $result = Tools_help::getget(<span class="string">'https://v.ddrk.me:9543/video?id=lKwK4yQuvITOqPfIV5uAXv4YBvZ0qNX5owCjNlFG3JixIwBLvmOcfTj442xQP28mq17kzCVdO8BhYqQP4tHv36OKHGdc5oM5liL2h86V4j3CnHXFUF6W07W5%2BDu7LfwYXbdBDNqxxKahlDQIz7lZwQ%3D%3D&amp;type=mix'</span>);</span><br><span class="line">    $result = json_decode($result, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    Tools_help::ajaxReturn($result);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>此时访问前端页面，即可解出 index 地址。</p>
<p><img data-src="b1a89355/image-20201115154854708.png" alt="image-20201115154854708"></p>
<h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><ol>
<li><p>index 请求地址有时效性，过期后需要重新获取 index 地址。</p>
</li>
<li><p>index 地址做了 <code>origin</code> 限制，需要在服务端做个跨域中转请求，才能拿到其响应数据。</p>
</li>
<li><p>index 中的 ts 地址没有时间限制。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>ddrk之字幕处理</title>
    <url>/posts/%E7%88%AC%E8%99%AB/956a1f45.html</url>
    <content><![CDATA[<p>在将 <code>m3u8</code>、<code>ts</code> 等文件下载完毕后，通过以下命令转换成 <code>mp4</code> 格式视频。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ ffmpeg -allowed_extensions ALL -protocol_whitelist <span class="string">"file,https,tls,http,crypto,tcp"</span> -i ./index.m3u8_backup -c copy ~/Downloads/神奇女侠1984.mp4</span><br></pre></td></tr></tbody></table></figure>

<p>但播放 <code>mp4</code> 视频时，发现没有对应中文字幕。但源网站是有的，说明字幕是单独加载的，未添加到视频流中。</p>
<a id="more"></a>

<h4 id="查找字幕请求地址"><a href="#查找字幕请求地址" class="headerlink" title="查找字幕请求地址"></a>查找字幕请求地址</h4><p>为了验证字幕是单独加载的，并获取字幕请求地址。打开开发者工具面板，<code>Network</code> 面板，清除所有请求。</p>
<p>点击视频播放器按钮，发现除了正常请求 <code>m3u8</code> 和 <code>ts</code> 地址外，还有一条请求。对这个请求做 <code>Block request URL</code> ，视频可以正常播放，但也没有字幕了。</p>
<p><img data-src="956a1f45/image-20210110130837775.png" alt="image-20210110130837775"></p>
<h4 id="字幕文件下载"><a href="#字幕文件下载" class="headerlink" title="字幕文件下载"></a>字幕文件下载</h4><h5 id="正常流程"><a href="#正常流程" class="headerlink" title="正常流程"></a>正常流程</h5><p>在新页面中打开字幕文件链接地址下载后，文件内容是加密的，并非正常字体文件。</p>
<h5 id="字幕文件下载后解密"><a href="#字幕文件下载后解密" class="headerlink" title="字幕文件下载后解密"></a>字幕文件下载后解密</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install pako crypto-js</span><br><span class="line">$ node index.js</span><br></pre></td></tr></tbody></table></figure>

<p>文件 <code>index.js</code> 代码内容如下：</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> pako = <span class="built_in">require</span>(<span class="string">'pako'</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"><span class="keyword">const</span> CryptoJS = <span class="built_in">require</span>(<span class="string">"crypto-js"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//var eAB = fs.readFileSync("./Wonder.Woman.1984.ddr", "utf-8");</span></span><br><span class="line"><span class="keyword">var</span> eAB = fs.readFileSync(<span class="string">"./Wonder.Woman.1984.ddr"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> wordArray = CryptoJS.lib.WordArray.create(eAB.slice(<span class="number">16</span>));</span><br><span class="line"><span class="keyword">let</span> hexStr = <span class="built_in">Array</span>.prototype.map.call(<span class="keyword">new</span> <span class="built_in">Uint8Array</span>(eAB.slice(<span class="number">0</span>, <span class="number">16</span>)), <span class="function"><span class="params">x</span> =&gt;</span> (<span class="string">'00'</span> + x.toString(<span class="number">16</span>)).slice(<span class="number">-2</span>)).join(<span class="string">''</span>);</span><br><span class="line"><span class="keyword">let</span> wordArray2 = CryptoJS.enc.Hex.parse(hexStr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> jsdec = CryptoJS.AES.decrypt({<span class="attr">ciphertext</span>:wordArray},wordArray2,{</span><br><span class="line">    iv: wordArray2,</span><br><span class="line">    mode: CryptoJS.mode.CBC</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">//var binary_string = atob(jsdec.toString(CryptoJS.enc.Base64)).toString();</span></span><br><span class="line"><span class="comment">//let len = binary_string.length;</span></span><br><span class="line"><span class="comment">//let bytes = new Uint8Array(len);</span></span><br><span class="line"><span class="comment">//for (let i = 0; i &lt; len; i++) {</span></span><br><span class="line"><span class="comment">//    bytes[i] = binary_string.charCodeAt(i);</span></span><br><span class="line"><span class="comment">//}</span></span><br><span class="line"><span class="comment">//var data = pako.ungzip(bytes.buffer, {to:'string'});</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> binary_string = atob(jsdec.toString(CryptoJS.enc.Base64));</span><br><span class="line"><span class="keyword">var</span> data = pako.ungzip(binary_string, {<span class="attr">to</span>:<span class="string">'string'</span>});</span><br><span class="line">fs.writeFileSync(<span class="string">'./Wonder.Woman.1984.ddr.srt'</span>, data);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">btoa</span>(<span class="params">str</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> Buffer.from(str).toString(<span class="string">'base64'</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">atob</span>(<span class="params">b64Encoded</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> Buffer.from(b64Encoded, <span class="string">'base64'</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<h4 id="通过调试源网站方式解密字幕文件"><a href="#通过调试源网站方式解密字幕文件" class="headerlink" title="通过调试源网站方式解密字幕文件"></a>通过调试源网站方式解密字幕文件</h4><ol>
<li><p>利用 <code>chrome</code>  开发者工具，可以很容易找到调用此URL地址的 <code>js</code> 源码文件</p>
<p><img data-src="956a1f45/image-20210110134655580.png" alt="步骤一"></p>
</li>
<li><p>添加断点，获取解密后 <code>base64</code> 编码字符串。</p>
<p><img data-src="956a1f45/image-20210110132609589.png" alt="步骤二"></p>
</li>
</ol>
<ol start="3">
<li><p><code>Console</code> 面板中输入以下代码，打印 <code>base64</code> 编码字符串。在输出最后有个 <code>Copy</code> 按钮，可一键拷贝到剪贴板。</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(jsdec.toString(CryptoJS.enc.Base64));</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>解密字幕文件。</p>
<ul>
<li>将 <code>base64</code> 编码字符串保存到 <code>tmp.txt</code> 文件</li>
<li>解密后保存至字幕文件： <code>./Wonder.Woman.1984.ddr.srt</code></li>
</ul>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> pako = <span class="built_in">require</span>(<span class="string">'pako'</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> data = fs.readFileSync(<span class="string">"./tmp.txt"</span>, <span class="string">"utf-8"</span>);</span><br><span class="line"><span class="keyword">var</span> binary_string = atob(data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> data = pako.ungzip(binary_string, {<span class="attr">to</span>:<span class="string">'string'</span>});</span><br><span class="line">fs.writeFileSync(<span class="string">'./Wonder.Woman.1984.ddr.srt'</span>, data);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">btoa</span>(<span class="params">str</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> Buffer.from(str).toString(<span class="string">'base64'</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">atob</span>(<span class="params">b64Encoded</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> Buffer.from(b64Encoded, <span class="string">'base64'</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



</li>
</ol>
<p>   <img data-src="956a1f45/image-20210110133016367.png?xxx" alt="image-20210110133016367"></p>
<h4 id="生成带字幕的-mp4-视频文件"><a href="#生成带字幕的-mp4-视频文件" class="headerlink" title="生成带字幕的 mp4 视频文件"></a>生成带字幕的 mp4 视频文件</h4><h5 id="在-m3u8-转-mp4-视频时添加字幕"><a href="#在-m3u8-转-mp4-视频时添加字幕" class="headerlink" title="在 m3u8 转 mp4 视频时添加字幕"></a>在 <code>m3u8</code> 转 <code>mp4</code> 视频时添加字幕</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ ffmpeg -allowed_extensions ALL -protocol_whitelist <span class="string">"file,https,tls,http,crypto,tcp"</span> -i ./index.m3u8_backup -i ~/Downloads/Wonder.Woman.1984.ddr.srt -c:s mov_text -c:v copy -c:a copy ~/Downloads/神奇女侠1984.mp4</span><br></pre></td></tr></tbody></table></figure>

<h5 id="为-mp4-视频添加字幕"><a href="#为-mp4-视频添加字幕" class="headerlink" title="为 mp4 视频添加字幕"></a>为 <code>mp4</code> 视频添加字幕</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ ffmpeg -i ~/Downloads/神奇女侠1984.mp4 -i ~/Downloads/Wonder.Woman.1984.ddr.srt -c:s mov_text -c:v copy -c:a copy ~/Downloads/神奇女侠1984-中文字幕.mp4</span><br></pre></td></tr></tbody></table></figure>

<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li>ffmpeg 字幕相关<ul>
<li><a href="https://shuiyujie.com/post/20fed56f.html">https://shuiyujie.com/post/20fed56f.html</a></li>
<li><a href="https://blog.csdn.net/qq_21743659/article/details/109305411">https://blog.csdn.net/qq_21743659/article/details/109305411</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义whistle插件抓取抖音账号内视频数据</title>
    <url>/posts/%E7%88%AC%E8%99%AB/776a25d9.html</url>
    <content><![CDATA[<p>今天接到任务需要抓取下我司抖音号里所有视频的：点赞数、评论数、转发数 数据。大概是因为临近年终了。。。</p>
<h4 id="抓取流程解析"><a href="#抓取流程解析" class="headerlink" title="抓取流程解析"></a>抓取流程解析</h4><ol>
<li><p>开启代理工具</p>
</li>
<li><p>手机添加代理</p>
</li>
<li><p>打开抖音App，进入对应抖音账号，开始抓取数据，重复通过手势向上滑动以加载更多数据，直至显示所有视频。</p>
</li>
<li><p>抓包完毕。</p>
</li>
</ol>
<h4 id="工具准备篇"><a href="#工具准备篇" class="headerlink" title="工具准备篇"></a>工具准备篇</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm i -g whistle whistle.autosave mysql --registry=https://registry.npmmirror.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将源地址改为淘宝源</span></span><br><span class="line">$ npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br><span class="line"><span class="comment"># 将源地址改为官方源</span></span><br><span class="line">$ npm config <span class="built_in">set</span> registry https://registry.npmjs.org</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><code>whistle</code> 网络数据抓包。</li>
<li><code>whistle.autosave</code> whistle 官方插件，默认将 response 数据记录到文件。对其改造（仅获取需要的字段数据）并存储至数据库。</li>
<li><code>mysql</code> MySQL 数据库操作包，用于将数据存储到数据库。</li>
</ul>
<h4 id="抓包数据分析"><a href="#抓包数据分析" class="headerlink" title="抓包数据分析"></a>抓包数据分析</h4><p>通过 <code>w2 run</code> 启动 <code>whistle</code> 抓包工具。</p>
<p>在抓取数据之前需要找到对应数据 <code>URL</code> 和 <code>response</code> 字段。</p>
<h5 id="视频列表"><a href="#视频列表" class="headerlink" title="视频列表"></a>视频列表</h5><ul>
<li><code>https://api3-core-c-hl.amemv.com/aweme/v1/aweme/post/</code></li>
<li><code>https://api5-core-c-hl.amemv.com/aweme/v1/aweme/post/</code></li>
</ul>
<h5 id="视频分享地址"><a href="#视频分享地址" class="headerlink" title="视频分享地址"></a>视频分享地址</h5><ul>
<li><code>https://www.iesdouyin.com/share/video/${aweme_id}</code></li>
</ul>
<p>涉及字段</p>
<blockquote>
<p><code>resBody</code> 是 <code>JSON</code> 格式的 body 数据。</p>
</blockquote>
<ul>
<li><code>resBody.aweme_list[i].statistics.digg_count</code> 点赞数量</li>
<li><code>resBody.aweme_list[i].aweme_id</code> 视频ID</li>
<li><code>resBody.aweme_list[i].desc</code> 视频描述</li>
<li><code>resBody.aweme_list[i].statistics.comment_count</code> 评论数量</li>
<li><code>resBody.aweme_list[i].statistics.share_count</code> 转发数量</li>
<li><code>resBody.aweme_list[i].create_time</code> 发布时间</li>
<li><code>resBody.aweme_list[i].duration</code> 视频时长</li>
</ul>
<h4 id="添加匹配规则"><a href="#添加匹配规则" class="headerlink" title="添加匹配规则"></a>添加匹配规则</h4><p>通过 <code>抓包数据分析</code> 得知，<code>host</code> 是变动的，而剩下的 <code>URI</code> 是固定格式。</p>
<p>浏览器，打开 <code>http://127.0.01:8899/#plugins</code> 地址，添加<strong>过滤条件</strong> <code>/aweme\/v1\/aweme\/post/</code>，这时只有匹配到过滤条件的请求才会请求到 <code>whistle.autosave</code> 插件。</p>
<h4 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">CREATE TABLE `douyin` (</span><br><span class="line">  `id` bigint unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `sid` bigint unsigned NOT NULL DEFAULT '0' COMMENT '视频ID',</span><br><span class="line">  `name` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '视频描述',</span><br><span class="line">  `digg` int unsigned NOT NULL DEFAULT '0' COMMENT '点赞数量',</span><br><span class="line">  `comment` int unsigned NOT NULL DEFAULT '0' COMMENT '评论数量',</span><br><span class="line">  `share` int unsigned NOT NULL DEFAULT '0' COMMENT '分享数量',</span><br><span class="line">  `duration` int unsigned DEFAULT '0' COMMENT '视频时长',</span><br><span class="line">  `create_time` int unsigned DEFAULT '0' COMMENT '发布时间',</span><br><span class="line">  `update_time` int unsigned DEFAULT '0' COMMENT '更新时间',</span><br><span class="line">  PRIMARY KEY (`id`) USING BTREE,</span><br><span class="line">  UNIQUE KEY `id` (`sid`) USING BTREE</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;</span><br></pre></td></tr></tbody></table></figure>



<h4 id="whistle-autosave-插件改造"><a href="#whistle-autosave-插件改造" class="headerlink" title="whistle.autosave 插件改造"></a>whistle.autosave 插件改造</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> $(npm root -g)/whistle.autosave/lib</span><br><span class="line">$ vim resStatsServer.js</span><br></pre></td></tr></tbody></table></figure>

<p>编辑文件 <code>resStatsServer.js</code> ，代码修改如下：</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> { <span class="attr">check</span>: checkFilter, <span class="attr">update</span>: updateFilter } = <span class="built_in">require</span>(<span class="string">'./filter'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> MAX_LENGTH = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> noop = <span class="function">() =&gt;</span> {};</span><br><span class="line"><span class="keyword">var</span> mysql  = <span class="built_in">require</span>(<span class="string">'mysql'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> connection = mysql.createConnection({</span><br><span class="line">	host     : <span class="string">'127.0.0.1'</span>,</span><br><span class="line">	user     : <span class="string">'root'</span>,</span><br><span class="line">	password : <span class="string">'1234'</span>,</span><br><span class="line">	port: <span class="string">'3306'</span>,</span><br><span class="line">	database: <span class="string">'test'</span>,</span><br><span class="line">	charset: <span class="string">'UTF8MB4_BIN'</span></span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> formatDate = <span class="function"><span class="keyword">function</span> (<span class="params">now</span>) </span>{</span><br><span class="line">	<span class="keyword">var</span> year = now.getFullYear();</span><br><span class="line">	<span class="keyword">var</span> month = now.getMonth() + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">var</span> date = now.getDate();</span><br><span class="line">	<span class="keyword">var</span> hour = now.getHours();</span><br><span class="line">	<span class="keyword">var</span> minute = now.getMinutes();</span><br><span class="line">	<span class="keyword">var</span> second = now.getSeconds();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> year + <span class="string">"-"</span> + month + <span class="string">"-"</span> + date + <span class="string">" "</span> + hour + <span class="string">":"</span> + minute + <span class="string">":"</span> + second;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">connection.connect();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> insertSql = <span class="string">'INSERT INTO douyin(sid,name,digg,comment,share,create_time,duration,update_time) VALUES(?,?,?,?,?,?,?,?) ON DUPLICATE KEY UPDATE digg = ?, comment = ?, share = ?, create_time = ?, update_time = ?'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">server, { storage }</span>) =&gt;</span> {</span><br><span class="line">  <span class="keyword">let</span> sessions = [];</span><br><span class="line">  <span class="keyword">let</span> timer;</span><br><span class="line">  <span class="keyword">const</span> writeSessions = <span class="function">(<span class="params">dir</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">      <span class="keyword">const</span> text = <span class="built_in">JSON</span>.stringify(sessions.slice(), <span class="literal">null</span>, <span class="string">'  '</span>);</span><br><span class="line">      sessions = [];</span><br><span class="line">      <span class="comment">//dir = path.resolve(dir, `${Date.now()}.txt`);</span></span><br><span class="line">      dir = path.resolve(dir, <span class="string">`浪涨小青岛.txt`</span>);</span><br><span class="line">      fs.writeFile(dir, text, <span class="function">(<span class="params">err</span>) =&gt;</span> {</span><br><span class="line">        <span class="keyword">if</span> (err) {</span><br><span class="line">          fs.writeFile(dir, text, noop);</span><br><span class="line">        }</span><br><span class="line">      });</span><br><span class="line">    } <span class="keyword">catch</span> (e) {}</span><br><span class="line">  };</span><br><span class="line"></span><br><span class="line">  updateFilter(storage.getProperty(<span class="string">'filterText'</span>));</span><br><span class="line">  server.on(<span class="string">'request'</span>, <span class="function">(<span class="params">req</span>) =&gt;</span> {</span><br><span class="line">    <span class="comment">// filter</span></span><br><span class="line">    <span class="keyword">const</span> active = storage.getProperty(<span class="string">'active'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!active) {</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">const</span> dir = storage.getProperty(<span class="string">'sessionsDir'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!dir || <span class="keyword">typeof</span> dir !== <span class="string">'string'</span>) {</span><br><span class="line">      sessions = [];</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (!checkFilter(req.originalReq.url)) {</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    req.getSession(<span class="function">(<span class="params">s</span>) =&gt;</span> {</span><br><span class="line">      <span class="keyword">if</span> (!s) {</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> resBody = <span class="built_in">JSON</span>.parse(s.res.body);</span><br><span class="line">      <span class="comment">//var currentTime = Date.now().toString().substr(0, 10);</span></span><br><span class="line">      <span class="keyword">var</span> currentTime = <span class="built_in">parseInt</span>(<span class="built_in">Date</span>.now() / <span class="number">1000</span>);</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;resBody.aweme_list.length; i++) {</span><br><span class="line">	      <span class="built_in">console</span>.log(</span><br><span class="line">		      resBody.aweme_list[i].aweme_id,</span><br><span class="line">		      resBody.aweme_list[i].create_time,</span><br><span class="line">		      resBody.aweme_list[i].desc,</span><br><span class="line">		      resBody.aweme_list[i].statistics.digg_count,</span><br><span class="line">		      resBody.aweme_list[i].statistics.comment_count,</span><br><span class="line">		      resBody.aweme_list[i].statistics.share_count,</span><br><span class="line">		      formatDate(</span><br><span class="line">		      	<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">parseInt</span>(resBody.aweme_list[i].create_time + <span class="string">"000"</span>))</span><br><span class="line">		      )</span><br><span class="line">	      );</span><br><span class="line"></span><br><span class="line">		  <span class="keyword">var</span>  insertSqlData = [</span><br><span class="line">			  resBody.aweme_list[i].aweme_id,</span><br><span class="line">			  resBody.aweme_list[i].desc,</span><br><span class="line">			  resBody.aweme_list[i].statistics.digg_count,</span><br><span class="line">			  resBody.aweme_list[i].statistics.comment_count,</span><br><span class="line">			  resBody.aweme_list[i].statistics.share_count,</span><br><span class="line">			  resBody.aweme_list[i].create_time,</span><br><span class="line">			  resBody.aweme_list[i].duration,</span><br><span class="line">			  currentTime,</span><br><span class="line">        <span class="comment">// update</span></span><br><span class="line">			  resBody.aweme_list[i].statistics.digg_count,</span><br><span class="line">			  resBody.aweme_list[i].statistics.comment_count,</span><br><span class="line">			  resBody.aweme_list[i].statistics.share_count,</span><br><span class="line">			  resBody.aweme_list[i].create_time,</span><br><span class="line">			  currentTime,</span><br><span class="line">		  ];</span><br><span class="line">		  connection.query(insertSql, insertSqlData, <span class="function"><span class="keyword">function</span> (<span class="params">err, result</span>) </span>{</span><br><span class="line">			  <span class="keyword">if</span>(err){</span><br><span class="line">				  <span class="built_in">console</span>.log(<span class="string">'[SQL ERROR]'</span>, err.message);</span><br><span class="line">				  <span class="keyword">return</span>;</span><br><span class="line">			  }</span><br><span class="line"></span><br><span class="line">			  <span class="built_in">console</span>.log(<span class="string">'INSERT OR UPDATE:'</span>, result.insertId, result.affectedRows);</span><br><span class="line">		  });</span><br><span class="line">        </span><br><span class="line">    });</span><br><span class="line">  });</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>



<h4 id="启动抓包程序"><a href="#启动抓包程序" class="headerlink" title="启动抓包程序"></a>启动抓包程序</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ w2 run</span><br></pre></td></tr></tbody></table></figure>



<h4 id="蝉妈妈"><a href="#蝉妈妈" class="headerlink" title="蝉妈妈"></a>蝉妈妈</h4><p>我同事之前也做过类似的事情，但通过的是第三方平台再处理的数据。跟同事要来了一份数据，对比下第三方平台数据与原数据的差异：</p>
<ol>
<li>确认蝉妈妈90天数据，有无丢失视频</li>
</ol>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">		* </span><br><span class="line">FROM</span><br><span class="line">		douyin </span><br><span class="line">WHERE</span><br><span class="line">		-- 推算今天(2021-01-12) 近90天日期：(2020-10-14 00:00:00)</span><br><span class="line">		sid NOT IN ( SELECT aweme_id FROM dylist WHERE NAME = 'xxx' AND `publish_time` &gt; 1602604800 ) </span><br><span class="line">		-- 今日抓取蝉妈妈最后一个视频发布时间: (2021-01-12 05:33:55)</span><br><span class="line">		AND create_time &lt;= 1610400835 AND create_time &gt; 1602604800 </span><br><span class="line">ORDER BY</span><br><span class="line">		create_time DESC;</span><br><span class="line">	</span><br><span class="line">	-- 共丢失 184 条视频，最近一条视频发布时间：2020-12-17 09:30:48</span><br></pre></td></tr></tbody></table></figure>


<p>​<br>2. 计算差异</p>
  <figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">-- select count(*) from dylist where name = 'xxx' and `publish_time` &gt; 1602604800;</span><br><span class="line">-- 4419</span><br><span class="line">-- select count(*) from douyin where create_time &lt;= 1610400835 AND create_time &gt; 1602604800;</span><br><span class="line">-- 4603</span><br><span class="line"></span><br><span class="line">SELECT</span><br><span class="line">	a.NAME,</span><br><span class="line">	a.`comment`,</span><br><span class="line">	a.digg as "点赞A",</span><br><span class="line">	a.`comment` as "评论",</span><br><span class="line">	a.SHARE as "转发",</span><br><span class="line">	b.digg_count as "点赞B-蝉妈妈",</span><br><span class="line">	b.comment_count as "评论-蝉妈妈",</span><br><span class="line">	b.share_count as "转发-蝉妈妈",</span><br><span class="line">	( CONVERT ( a.digg, SIGNED ) - CONVERT ( b.digg_count, SIGNED ) ) AS "点赞差(A-B)",</span><br><span class="line">	( CONVERT ( a.comment, SIGNED ) - CONVERT ( b.comment_count, SIGNED ) ) AS "评论差",</span><br><span class="line">	( CONVERT ( a.share, SIGNED ) - CONVERT ( b.share_count, SIGNED ) ) AS "转发差",</span><br><span class="line">	FROM_UNIXTIME( a.create_time, '%Y-%m-%d %H' ) </span><br><span class="line">FROM</span><br><span class="line">	douyin AS a</span><br><span class="line">	right JOIN dylist AS b ON a.sid = b.aweme_id </span><br><span class="line">WHERE</span><br><span class="line">	b.NAME = 'xxx' </span><br><span class="line">	-- 今日抓取蝉妈妈最后一个视频发布时间: (2021-01-12 05:33:55)</span><br><span class="line">	AND a.create_time &lt;= 1610400835</span><br><span class="line">	AND a.create_time &gt; 1602604800</span><br><span class="line">	-- 推算今天(2021-01-12) 近90天日期：(2020-10-14 00:00:00)</span><br><span class="line">	AND `publish_time` &gt; 1602604800;</span><br><span class="line">ORDER BY a.create_time desc;</span><br></pre></td></tr></tbody></table></figure>



<h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><ol>
<li>第三方平台并不只是抓取 90 天之内的视频，有可能只是记录了，并显示出对应视频数据，在同事抓取时仅做了更新操作，并未对有差异的再做更新。</li>
<li>第三方平台视频数据缺少。</li>
<li>第三方平台可能对历史视频数据不再处理了，导致点赞数、评论数等数据统计不准确。</li>
</ol>
<h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h4><p><del>部分视频可以直接通过 <code>URL</code> 获取，有时限（过一段时间后将无法获取数据）。</del></p>
<ul>
<li><p><code>https://api3-core-c-hl.amemv.com/aweme/v1/aweme/post/?page_from=1&amp;user_id=3293759164133159&amp;publish_video_strategy_type=2</code></p>
</li>
<li><p><code>https://api3-core-c-hl.amemv.com/aweme/v1/aweme/post/?page_from=2&amp;user_id=68310389333&amp;publish_video_strategy_type=2</code></p>
</li>
<li><p><code>https://api3-core-c-hl.amemv.com/aweme/v1/aweme/post/?count=21&amp;publish_video_strategy_type=2&amp;page_from=2&amp;user_id=566969479994331</code></p>
</li>
</ul>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://www.runoob.com/nodejs/nodejs-mysql.html">nodejs-mysql</a></li>
<li><a href="https://github.com/whistle-plugins/whistle.autosave">whistle.autosave</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1008866">https://cloud.tencent.com/developer/article/1008866</a></li>
</ul>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
        <tag>whistle</tag>
      </tags>
  </entry>
  <entry>
    <title>Aria2 使用总结</title>
    <url>/posts/%E7%BD%91%E7%BB%9C/3ccf637f.html</url>
    <content><![CDATA[<p>Aria2 使用总结。</p>
<a id="more"></a>

<h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p><a href="https://aria2.github.io/">aria2官网</a>，在 mac 上用 <code>brew install aria2</code> 命令安装，安装完成后，可使用命令行工具： <code>aria2c</code> 进行操作。</p>
<h4 id="自定义配置文件"><a href="#自定义配置文件" class="headerlink" title="自定义配置文件"></a>自定义配置文件</h4><p><code>aria2</code> 安装完成后没有配置文件，需要我们来手动创建配置文件。    </p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 创建会话文件，用于保存 "错误/未完成" 的下载任务。</span></span><br><span class="line">mkdir ~/Downloads/aria2 &amp;&amp; touch ~/Downloads/aria2/aria2.session</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建配置文件</span></span><br><span class="line">mkdir ~/.aria2 &amp;&amp; touch ~/.aria2/aria2.conf</span><br></pre></td></tr></tbody></table></figure>



<p>Github 提供了最新的tracker, 每天更新一次，每个地址之间以逗号分开: <a href="https://github.com/ngosang/trackerslist%E3%80%82">https://github.com/ngosang/trackerslist。</a></p>
<p>更过配置参数可参考：</p>
<ul>
<li><a href="http://www.senra.me/aria2-conf-file-parameters-translation-and-explanation/">中文</a></li>
<li><a href="https://aria2.github.io/manual/en/html/aria2c.html#aria2-conf">官方</a></li>
<li><a href="https://github.com/mayswind/AriaNg/blob/master/src/langs/zh_Hans.txt">汉化</a>。</li>
</ul>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 可以先运行 aria2c 来检查错误，无误后可执行以下命令，以使其后台运行。</span></span><br><span class="line">aria2c --conf-path=/etc/aria2/aria2.conf -D</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p> 注：<code>Aria2</code> 默认使用 <code>~/.aria2/aria2.conf</code> 配置文件启动，在命令行中使用时，可通过 <code>--no-conf</code> 参数来临时禁止使用配置文件，详情见：<code>aria2c --help=#advanced</code>。</p>
</blockquote>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 将文件保存成 yy</span></span><br><span class="line">aria2c --out=yy http://xx.com/xx</span><br><span class="line">aria2c -o yy http://xx.com/xx</span><br></pre></td></tr></tbody></table></figure>



<p>使用<code>aria2</code> 的分段和多线程下载功能可以加快文件的下载速度，对于下载大文件时特别有用。-x 分段下载，-s 多线程下载，如</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">aria2c -s 2 -x 2 http://xx.com/xx</span><br></pre></td></tr></tbody></table></figure>

<h5 id="BT下载"><a href="#BT下载" class="headerlink" title="BT下载"></a>BT下载</h5><p>种子和磁力下载：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">aria2c "xxx.torrnet"</span><br><span class="line">aria2c '磁力连接'</span><br></pre></td></tr></tbody></table></figure>

<p>列出种子内容：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">aria2c -S xxxx.torrnet</span><br></pre></td></tr></tbody></table></figure>

<p>下载种子编号：1、3、4、5 文件：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">aria2c --select-file=1,3-5 xxx.torrnet</span><br></pre></td></tr></tbody></table></figure>

<p>设置 <code>bt</code> 端口：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">aria2c --listen-port=3653 <span class="string">'xxx.torrnet'</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="限速下载"><a href="#限速下载" class="headerlink" title="限速下载"></a>限速下载</h5><p>单个文件最大下载速度：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">aria2c --max-download-limit=300K -s10 -x10 <span class="string">'http://xx.com/xx'</span></span><br></pre></td></tr></tbody></table></figure>

<p>整体下载最大速度：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">aria2c --max-overall-download-limit=300k -s10 -x10 <span class="string">'http://xx.com/xx'</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="下载需-Cookie-验证文件"><a href="#下载需-Cookie-验证文件" class="headerlink" title="下载需 Cookie 验证文件"></a>下载需 Cookie 验证文件</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">aria2c --header=<span class="string">"Cookie:cookie名称=cookie内容"</span> <span class="string">'http://dl_dir.qq.com/qqfile/qq/QQ2011/QQ2011.exe'</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="Web-GUI"><a href="#Web-GUI" class="headerlink" title="Web GUI"></a>Web GUI</h4><ul>
<li><p>yaaw - <a href="https://aria2c.com/%E3%80%81http://binux.github.io/yaaw/demo/">https://aria2c.com/、http://binux.github.io/yaaw/demo/</a></p>
</li>
<li><p><a href="https://aria2.me/">aria2 集合</a> </p>
</li>
</ul>
<p>YAAW 使用说明 </p>
<p>在打开index.html后要配置JSON-RPC Path; 并且确保在aria2配置中开启了RPC, 已经端口号对应等; </p>
<ul>
<li>JSON-RPC Path JSON-RPC Path 默认为: <a href="http://localhost:6800/jsonrpc">http://localhost:6800/jsonrpc</a> 如果提示 Aria2 RPC 服务器错误，按照以下方法修改：<ul>
<li>host: 指运行 Aria2 所在机器的 IP 或者名字 </li>
<li>port: 使用 –rpc-listen-port 选项设置的端口, 未设置则是 6800 普通情况设置为: <a href="http://host:port/jsonrpc">http://host:port/jsonrpc</a> </li>
<li>使用 –rpc-secret=xxxxxx 选项设置为: <a href="http://token:xxxxxx@host:port/jsonrpc">http://token:xxxxxx@host:port/jsonrpc</a> </li>
<li>使用 –rpc-user=user –rpc-passwd=pwd 选项设置为: <a href="http://user:pwd@host:port/jsonrpc">http://user:pwd@host:port/jsonrpc</a> </li>
<li>以上 JSON-RPC Path 中的 http 可以用 ws 替代, 代表使用 WebSocket 协议</li>
<li>当使用 <a href="https://aria2c.com/">https://aria2c.com</a> 访问时, 需要使用 https 或 wss 协议 </li>
</ul>
</li>
</ul>
<blockquote>
<p> Tips ：</p>
<ul>
<li><p>在 YAAW 中对 Aria2 的设置会在 Aria2 重启后丢失, 必要的设置请写入配置文件</p>
</li>
<li><p>已经下载完成的任务会在 Aria2 重启后消失, 除非启用了 –force-save 选项</p>
</li>
<li><p>因界面已汉化, 其他不再赘述.</p>
</li>
</ul>
</blockquote>
<h4 id="Chrome-扩展程序"><a href="#Chrome-扩展程序" class="headerlink" title="Chrome 扩展程序"></a>Chrome 扩展程序</h4><ul>
<li><a href="https://chrome.google.com/webstore/detail/yaaw-for-chrome/dennnbdlpgjgbcjfgaohdahloollfgoc">YAAW for Chrome</a> 增加右键菜单下载选项，可一键添加到 rpc 下载队列中。安装完成后可通过 <a href="chrome-extension://dennnbdlpgjgbcjfgaohdahloollfgoc/options.html">配置</a> 进行个性化设置，添加后可通过 <code>web控制台</code> 查看正在进行下载的任务。</li>
</ul>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://jasonkayzk.github.io/2020/05/01/Aria2%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/">Aria2安装与配置</a></li>
</ul>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>Aria2</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>DNS域名</title>
    <url>/posts/%E7%BD%91%E7%BB%9C/f6c0c99e.html</url>
    <content><![CDATA[<p>网络相关命令</p>
<a id="more"></a>




<h4 id="查看链路"><a href="#查看链路" class="headerlink" title="查看链路"></a>查看链路</h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">traceroute -n www.baidu.com</span><br></pre></td></tr></tbody></table></figure>



<h4 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">nslookup www.baidu.com</span><br></pre></td></tr></tbody></table></figure>



<h4 id="查看路由表"><a href="#查看路由表" class="headerlink" title="查看路由表"></a>查看路由表</h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"># linux</span><br><span class="line">route -n</span><br><span class="line"></span><br><span class="line"># mac</span><br><span class="line">netstat -nr</span><br></pre></td></tr></tbody></table></figure>



<h4 id="探测某个IP开放的端口号"><a href="#探测某个IP开放的端口号" class="headerlink" title="探测某个IP开放的端口号"></a>探测某个IP开放的端口号</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ nmap 192.168.36.42</span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2024-05-11 16:35 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.36.42</span><br><span class="line">Host is up (0.00049s latency).</span><br><span class="line">Not shown: 994 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">80/tcp   open  http</span><br><span class="line">3306/tcp open  mysql</span><br><span class="line">5000/tcp open  upnp</span><br><span class="line">7000/tcp open  afs3-fileserver</span><br><span class="line">9001/tcp open  tor-orport</span><br><span class="line">9002/tcp open  dynamid</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 16.73 seconds</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>IP地址与子网掩码</title>
    <url>/posts/%E7%BD%91%E7%BB%9C/3ad5e3a1.html</url>
    <content><![CDATA[<p>通过学习 <code>IP地址与子网掩码</code> 主要为了解决两个疑问？</p>
<ol>
<li>我司一共有多少个可用的IP地址？</li>
<li>第一个可用的IP地址和最后一个可用的IP地址分别是多少?</li>
</ol>
<a id="more"></a>

<h4 id="子网掩码"><a href="#子网掩码" class="headerlink" title="子网掩码"></a>子网掩码</h4><p>用于区分主机所在子网，PC向外发包会首先判断目标IP与自己是否在同一网段，如在同一网段，则直接发送出去，不在同一网段，则发包给网关。</p>
<p>IP地址是以网络号和主机号来标示网络上的主机的，我们把网络号相同的主机称之为本地网络，网络号不相同的主机称之为远程网络主机，本地网络中的主机可以直接相互通信；远程网络中的主机要相互通信必须通过本地网关（Gateway）来传递转发数据。</p>
<h4 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h4><p>32位二进制分割成4个“8位二进制数”。表示成(A.B.C.D)其中ABCD是0-255十进制整数。</p>
<ul>
<li><p>网段：同一网段是指同一个网络号</p>
</li>
<li><p>子网：/26表示网络号 32-26=6表示主机号，子网号是从<strong>主机号</strong>里面借n位来表示子网。</p>
</li>
<li><p>子网掩码：32位二进制1代表子网位，0代表主机位。掩码位24表示前24位为1，后面均为主机位。<strong>子网掩码是用来截取子网号然后再比较的，不是说不同子网的子网掩码就要不同。</strong>划分子网要<strong>从主机号反推</strong>，不要直接算子网号。</p>
</li>
<li><p>IP地址总数：可用主机数(2的n次方)+2（网络地址和广播地址）</p>
</li>
<li><p>可用地址分配：下一个可用起始地址（要跳过2个不可用的地址和1个闭区间）—可用起始地址+最大可容纳数-2-1 总个数为2的n次方-2</p>
</li>
<li><p>网络地址：网络号+主机号全0的地址</p>
</li>
<li><p>广播地址：转换成网络地址，把主机号全置为1就是广播地址</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>类型</th>
<th>全部地址</th>
<th>私有地址</th>
<th>场景</th>
</tr>
</thead>
<tbody><tr>
<td>A类</td>
<td>1.0.0.1-126.255.255.254</td>
<td>10.0.0.0-10.255.255.255</td>
<td>大型规模网络</td>
</tr>
<tr>
<td>B类</td>
<td>128.0.0.1-191.255.255.254</td>
<td>172.16.0.0-172.31.255.255</td>
<td>中等规模网络</td>
</tr>
<tr>
<td>C类</td>
<td>192.0.0.1-233.255.255.254</td>
<td>192.168.0.0-192.168.255.255</td>
<td>小型规模网络</td>
</tr>
<tr>
<td>D类</td>
<td>224.0.0.1-239.255.255.254</td>
<td></td>
<td>多路广播网络</td>
</tr>
<tr>
<td>E类</td>
<td>240.0.0.1-255.255.255.255</td>
<td></td>
<td>保留地址</td>
</tr>
</tbody></table>
<p>IPV4大约有：2^32^ ≈ 42.28亿，由于一些地址有特殊的用途，所以被保留下来，不允许被大众所使用，那最后真正可用的IPV4可用大约有：36.47亿。</p>
<p>我公司电脑的IP地址是：<code>192.168.37.18</code>，子网掩码是：<code>255.255.254.0</code>。</p>
<p>可用总量：一共有 <code>9</code> 个 <code>0</code>，则是 $2^9$ = 512</p>
<p>可用地址量：512 - 1 个网络位 - 1 个广播位 = 510</p>
<p>网络位：192.168.36.0</p>
<p>广播位：192.168.37.255</p>
<p>第一可用：192.168.36.1</p>
<p>最后可用：192.168.37.254</p>
<pre class="mermaid">graph TD
A[255.255.254.0] --&gt; |对应二进制值|B(1111 1111.1111 1111.1111 1110.0000 0000)
C[192.168.37.18] --&gt; |对应二进制值|D(1100 0000.1010 1000.0010 0101.0001 0010)

B --&gt; F(一一对应做 `与` 运算, 即: 只有 1 &amp; 1 = 1, 其余都是 0)
D --&gt; F
F --&gt; H(1100 0000.1010 1000.0010 0100.0000 0000)
H --&gt; |转成十进制|I(192.168.36.0)</pre>

<p>只要IP地址与子网掩码做 <code>与</code> 运算后都是 <code>192.168.36.0</code>，则证明此IP地址与我的IP地址属统一网段。</p>
<p>而IP地址的总量是看子网掩码有多少个 0 即代表 2 的几次方个。此例中共有 9 个 0，即：总共有 2^9^ = 512 个。</p>
<p>IP的每个位上最大数值是 <code>255</code>，从 <code>0</code> 开始计数，范围是 <code>0~255</code> ，总共有 256 个。第 257 个，则需要第三位增1，即由 <code>192.168.36.255</code> 变成了 <code>192.168.37.0</code> ，所以最后一个IP地址则是 <code>192.168.37.255</code>。</p>
<p>网段中的两个保留位，不可用于分配IP地址。所以可用的IP地址数量是：<code>512 - 2 = 510</code>。</p>
<ul>
<li>网段中第一个的是网络位：<code>192.168.36.0</code>。</li>
<li>网段中最后一个是广播位：<code>192.168.37.255</code>。</li>
<li>子网掩码：<code>192.168.36.0/23</code>。</li>
</ul>
<h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><ul>
<li><a href="https://tool.chinaz.com/tools/subnetmask">站长工具 - 子网掩码</a></li>
</ul>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://blog.51cto.com/6930123/2112748">IP地址和子网划分学习笔记之《子网掩码详解》</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/349915600">面试系列 IP</a></li>
<li><a href="https://www.bilibili.com/video/BV1DD4y127r4">【硬件科普】IP地址是什么东西？IPV6和IPV4有什么区别？公网IP和私有IP又是什么？</a></li>
<li><a href="https://www.bilibili.com/video/BV1Rp4y1a7xQ">【硬件科普】能上QQ但是打不开网页？详解DNS服务，DNS解析，DNS劫持和污染</a></li>
</ul>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>tcpdump wireshark 使用</title>
    <url>/posts/%E7%BD%91%E7%BB%9C/8d21f815.html</url>
    <content><![CDATA[<p>利用 <code>tcpdump</code> 抓包，利用 <code>tcpdump/wireshark</code> 来分析网络数据。</p>
<a id="more"></a>

<h4 id="tcpdump-抓包"><a href="#tcpdump-抓包" class="headerlink" title="tcpdump 抓包"></a>tcpdump 抓包</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">tcpdump host example.com -w example.pcap</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li>dst host</li>
<li>src</li>
<li>tcp、udp</li>
<li>-i eth0</li>
</ul>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">tcpdump -n -i eth0 src host example.com and dst udp port 53</span><br></pre></td></tr></tbody></table></figure>



<h4 id="分析网络数据"><a href="#分析网络数据" class="headerlink" title="分析网络数据"></a>分析网络数据</h4><h5 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h5><p>可以通过 <code>tcpdump -n -r ~/example.pcap</code> 命令从文件读取数据来分析，显示的数据与 <code>tcpdump</code> 监听时数据展示一样。</p>
<p>显然通过命令行来分析数据不如桌面应用程序分析来的更直观、简便。</p>
<h5 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h5><p>软件可通过 <a href="https://www.wireshark.org/#download">官网地址</a> 下载，支持 windows、mac 版本。</p>
<p>可通过 <code>File</code> -&gt; <code>Open</code> -&gt; 选择 <code>tcpdump</code> 抓包 <code>example.pcap</code> 文件进行网络数据分析。</p>
<h6 id="过滤规则"><a href="#过滤规则" class="headerlink" title="过滤规则"></a>过滤规则</h6><blockquote>
<p>提示： 在Filter编辑框中，收入过虑规则时，如果语法有误，框会显红色，如正确，会是绿色。</p>
</blockquote>
<ol>
<li><p>过滤IP</p>
<ol>
<li>显示来源ip或目标ip：<code>ip.addr eq 172.16.96.4</code></li>
<li>显示来源ip：<code>ip.src eq 172.16.96.4</code></li>
<li>显示目标ip：<code>ip.dst eq 172.16.96.4</code></li>
</ol>
</li>
<li><p>过滤端口</p>
<ol>
<li>显示来源端口或目标端口：<code>tcp.port eq 80</code> 等同于 <code>tcp.port == 80</code></li>
<li>显示tcp协议目标端口：<code>tcp.dstport eq 80</code></li>
<li>显示udp协议源端口：<code>udp.srcport eq 80</code></li>
<li>过滤端口范围：<code>tcp.port &gt;= 80 and tcp.port &lt;= 443</code></li>
</ol>
</li>
<li><p>过滤协议</p>
<ol>
<li>tcp</li>
<li>udp</li>
<li>arp</li>
<li>icmp</li>
<li>http</li>
<li>smtp</li>
<li>ftp</li>
<li>dns</li>
<li>msnms</li>
<li>ip</li>
<li>ssl</li>
<li>oicq</li>
<li>bootp</li>
</ol>
<blockquote>
<p>示例：排除 icmp 包，!icmp 或者 not icmp</p>
</blockquote>
</li>
</ol>
<h6 id="导出符合条件的包"><a href="#导出符合条件的包" class="headerlink" title="导出符合条件的包"></a>导出符合条件的包</h6><p><code>tcpdump</code> 抓取的数据量非常大时，在通过 <code>filter</code> 过滤后，可以通过 <code>File -&gt; Export Specified Packets</code> 菜单，导出显示中的 <code>Displayed</code> 网络数据包到指定文件中。</p>
<p><img data-src="8d21f815/image-20201203172103351.png" alt="image-20201203172103351"></p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://arthurchiao.art/blog/tcpdump-practice-zh/">https://arthurchiao.art/blog/tcpdump-practice-zh/</a></li>
<li><a href="https://www.cnblogs.com/chyingp/p/linux-command-tcpdump.html">https://www.cnblogs.com/chyingp/p/linux-command-tcpdump.html</a></li>
<li><a href="https://blog.csdn.net/wojiaopanpan/article/details/69944970">https://blog.csdn.net/wojiaopanpan/article/details/69944970</a></li>
</ul>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>tcpdump</tag>
        <tag>wireshark</tag>
      </tags>
  </entry>
  <entry>
    <title>Alpine命令使用记录</title>
    <url>/posts/uncategorized/34a92cfd.html</url>
    <content><![CDATA[<h1 id="Alpine-命令使用记录"><a href="#Alpine-命令使用记录" class="headerlink" title="Alpine 命令使用记录"></a>Alpine 命令使用记录</h1><a id="more"></a>

<h4 id="查看本机IP地址"><a href="#查看本机IP地址" class="headerlink" title="查看本机IP地址"></a>查看本机IP地址</h4><ol>
<li>ip a</li>
</ol>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">d5f748a9901e:/<span class="comment"># ip a</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: tunl0@NONE: &lt;NOARP&gt; mtu 1480 qdisc noop state DOWN qlen 1000</span><br><span class="line">    link/ipip 0.0.0.0 brd 0.0.0.0</span><br><span class="line">3: ip6tnl0@NONE: &lt;NOARP&gt; mtu 1452 qdisc noop state DOWN qlen 1000</span><br><span class="line">    link/tunnel6 00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00 brd 00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00</span><br><span class="line">74: eth0@if75: &lt;BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN&gt; mtu 1500 qdisc noqueue state UP</span><br><span class="line">    link/ether 02:42:ac:11:00:03 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.17.0.3/16 brd 172.17.255.255 scope global eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></tbody></table></figure>

<ol start="2">
<li>ifconfig -a</li>
</ol>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">d5f748a9901e:/<span class="comment"># ifconfig -a</span></span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 02:42:AC:11:00:03</span><br><span class="line">          inet addr:172.17.0.3  Bcast:172.17.255.255  Mask:255.255.0.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:12 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0</span><br><span class="line">          RX bytes:936 (936.0 B)  TX bytes:0 (0.0 B)</span><br><span class="line"></span><br><span class="line">ip6tnl0   Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00</span><br><span class="line">          NOARP  MTU:1452  Metric:1</span><br><span class="line">          RX packets:0 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000</span><br><span class="line">          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback</span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:65536  Metric:1</span><br><span class="line">          RX packets:320 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:320 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000</span><br><span class="line">          RX bytes:26142 (25.5 KiB)  TX bytes:26142 (25.5 KiB)</span><br><span class="line"></span><br><span class="line">tunl0     Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00</span><br><span class="line">          NOARP  MTU:1480  Metric:1</span><br><span class="line">          RX packets:0 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000</span><br><span class="line">          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <tags>
        <tag>Alpine</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 8 基础配置</title>
    <url>/posts/CentOS/a80c8457.html</url>
    <content><![CDATA[<h4 id="常用工具汇总"><a href="#常用工具汇总" class="headerlink" title="常用工具汇总"></a>常用工具汇总</h4><ul>
<li><p><code>vim</code> 文件编辑工具。</p>
</li>
<li><p><code>net-tools</code> 网络工具包：<code>ifconfig</code>、<code>netstat</code>、<code>route</code>，详情见：<code>yum info net-tools</code></p>
</li>
<li><p><code>pcre2-tools</code> 工具包: <code>pcre2test</code>：可效验 <code>nginx</code> 路由正则规则。</p>
</li>
<li><p><code>tcpdump</code> 用于抓取、分析网络包。</p>
</li>
</ul>
<h4 id="配置-SSH-远程登录"><a href="#配置-SSH-远程登录" class="headerlink" title="配置 SSH 远程登录"></a>配置 SSH 远程登录</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[root@codezm ~]<span class="comment"># vi /etc/ssh/sshd_config</span></span><br></pre></td></tr></tbody></table></figure>

<p>vi <code>normal</code> 模式下，可使用 <code>/</code> 搜索关键字，示例：依次按键 <code>/</code> + <code>Port</code> +<code>Enter</code>。使用 <code>x</code> 删除 <code>#</code> 注释符号。</p>
<blockquote>
<p>Port 22<br>ListenAddress 0.0.0.0</p>
<p>ListenAddress ::</p>
<p>PermitRootLogin yes<br>PubkeyAuthentication yes</p>
</blockquote>
<p>更改完毕后键入 <code>:wq</code> 保存并退出文件编辑操作。</p>
<p>为使配置生效，需重启 <code>sshd</code> 服务。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ systemctl restart sshd</span><br></pre></td></tr></tbody></table></figure>

<h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ systemctl stop firewalld</span><br><span class="line">$ systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></tbody></table></figure>

<h4 id="关闭SELinux"><a href="#关闭SELinux" class="headerlink" title="关闭SELinux"></a>关闭SELinux</h4><ul>
<li><p>查看 <code>SELinux</code> 状态</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[root@codezm ~]<span class="comment"># /usr/sbin/sestatus -v</span></span><br><span class="line">SELinux status:                 disabled</span><br><span class="line">[root@codezm ~]<span class="comment"># getenforce</span></span><br><span class="line">Disabled</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li>Disabled 表示关闭</li>
<li>Enabled 表示开启</li>
</ul>
</li>
<li><p>临时关闭 <code>SELinux</code></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ setenforce 0</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>永久关闭 <code>SELinux</code>，更改配置文件之后需重启机器使之生效。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ sed -i <span class="string">'s/SELINUX=enforcing/SELINUX=disabled/'</span> /etc/selinux/config</span><br></pre></td></tr></tbody></table></figure>



</li>
</ul>
<h4 id="CentOS-系统没落后记"><a href="#CentOS-系统没落后记" class="headerlink" title="CentOS 系统没落后记"></a>CentOS 系统没落后记</h4><ul>
<li><a href="https://rockylinux.org/">https://rockylinux.org/</a> 将继续延续 CentOS ，并基于上游稳定 <code>RHEL</code> 版本构建。</li>
<li>迁移 CentOS 8、7、6 至 <code>Oracle Linux</code>。</li>
</ul>
]]></content>
      <categories>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 系统时间</title>
    <url>/posts/CentOS/f7b2779f.html</url>
    <content><![CDATA[<p>为保证各项服务正常运行，其中系统时间的准确性是至关重要的。在 CentOS-7 之后的版本默认使用 <code>chrony</code> 做系统时间同步服务，而 <code>CentOS-6</code> 版本中使用 <code>ntp</code> 服务来同步时间。</p>
<p><code>chrony</code> 采用 Client-Server(C/S) 架构，对应服务端： <code>chronyd</code>，客户端： <code>chronyc</code>。</p>
<a id="more"></a>

<p><strong>说明：本文是在 CentOS-8 系统上进行的测试</strong></p>
<h4 id="监听端口"><a href="#监听端口" class="headerlink" title="监听端口"></a>监听端口</h4><ul>
<li>323/udp</li>
</ul>
<h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p><code>vi /etc/chrony.conf</code></p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p><code>chrony</code> 服务默认已启动并已加入开启启动项，可通过 <code>systemctl status chronyd</code> 查看服务运行状态。</p>
<h5 id="1-设置时区"><a href="#1-设置时区" class="headerlink" title="1. 设置时区"></a>1. 设置时区</h5><p>​    可通过 <code>timedatectl</code> 命令，查看当前系统的时区。</p>
<p>​    若当前时区不是亚洲/上海时区，可以用如下命令设置</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></tbody></table></figure>



<h5 id="2-系统时间同步"><a href="#2-系统时间同步" class="headerlink" title="2. 系统时间同步"></a>2. 系统时间同步</h5><p>​    <code>vi /etc/chrony.conf</code> 配置使用 <a href="https://help.aliyun.com/document_detail/92704.html"><code>阿里云</code></a> 时间同步服务器。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"># Use public servers from the pool.ntp.org project.</span><br><span class="line"># Please consider joining the pool (http://www.pool.ntp.org/join.html).</span><br><span class="line">#pool 2.centos.pool.ntp.org iburst</span><br><span class="line">server ntp.aliyun.com iburst</span><br><span class="line"></span><br><span class="line"># Record the rate at which the system clock gains/losses time.</span><br><span class="line">driftfile /var/lib/chrony/drift</span><br><span class="line"></span><br><span class="line"># Allow the system clock to be stepped in the first three updates</span><br><span class="line"># if its offset is larger than 1 second.</span><br><span class="line">makestep 1.0 3</span><br><span class="line"></span><br><span class="line"># Enable kernel synchronization of the real-time clock (RTC).</span><br><span class="line">rtcsync</span><br><span class="line"></span><br><span class="line"># Enable hardware timestamping on all interfaces that support it.</span><br><span class="line">#hwtimestamp *</span><br><span class="line"></span><br><span class="line"># Increase the minimum number of selectable sources required to adjust</span><br><span class="line"># the system clock.</span><br><span class="line">#minsources 2</span><br><span class="line"></span><br><span class="line"># Allow NTP client access from local network.</span><br><span class="line">#allow 192.168.0.0/16</span><br><span class="line"></span><br><span class="line"># Serve time even if not synchronized to a time source.</span><br><span class="line">#local stratum 10</span><br><span class="line"></span><br><span class="line"># Specify file containing keys for NTP authentication.</span><br><span class="line">keyfile /etc/chrony.keys</span><br><span class="line"></span><br><span class="line"># Get TAI-UTC offset and leap seconds from the system tz database.</span><br><span class="line">leapsectz right/UTC</span><br><span class="line"></span><br><span class="line"># Specify directory for log files.</span><br><span class="line">logdir /var/log/chrony</span><br><span class="line"></span><br><span class="line"># Select which information is logged.</span><br><span class="line">#log measurements statistics tracking</span><br></pre></td></tr></tbody></table></figure>

<p>为使配置生效，重启服务 <code>systemctl restart chronyd</code>。</p>
<p>可通过 <code>date</code> 命令检查当前系统时间。</p>
<h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 查看时间同步源：</span></span><br><span class="line">chronyc sources -v</span><br><span class="line"><span class="comment"># 查看时间同步源状态：</span></span><br><span class="line">chronyc sourcestats -v</span><br><span class="line"><span class="comment"># 设置硬件时间</span></span><br><span class="line"><span class="comment"># 硬件时间默认为UTC：</span></span><br><span class="line">timedatectl set-local-rtc 1</span><br><span class="line"><span class="comment"># 启用NTP时间同步：</span></span><br><span class="line">timedatectl set-ntp yes</span><br><span class="line"><span class="comment"># 查看所有可用的时区</span></span><br><span class="line">timedatectl list-timezones</span><br><span class="line"><span class="comment"># 查看亚洲时区</span></span><br><span class="line">timedatectl list-timezones |  grep  -E <span class="string">"Asia/.*"</span></span><br><span class="line"><span class="comment"># 校准时间服务器：</span></span><br><span class="line">chronyc tracking</span><br></pre></td></tr></tbody></table></figure>

<h4 id="疑难杂症"><a href="#疑难杂症" class="headerlink" title="疑难杂症"></a>疑难杂症</h4><ul>
<li><p>若服务器时间正常，日志记录时间异常，可通过以下命令重启日志服务。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">systemctl restart rsyslog</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p><code>date</code> 需与 <code>timedatectl</code> 时间保持一致。 </p>
</li>
</ul>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://blog.51cto.com/14163901/2400181">centos7上使用chrony自动同步时间</a></li>
<li><a href="https://www.cnblogs.com/lei0213/p/8723106.html">centos7之关于时间和日期以及时间同步的应用</a></li>
</ul>
]]></content>
      <categories>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS-Launchd</title>
    <url>/posts/MacOS/d3444897.html</url>
    <content><![CDATA[<h1 id="MacOS-Launchd"><a href="#MacOS-Launchd" class="headerlink" title="MacOS Launchd"></a>MacOS Launchd</h1><p>传统的 UNIX 会使用 <code>/etc/rc.*</code> 或其他的机制来管理开机时要启动的启动服务，而现在的 OS X 则使用 <code>launchd</code> 来管理，它的启动服务称为 Launch Daemon/Agents, 利用 Launch Daemon/Agent，我们就可以令脚本程序在系统启动的时候在后台运行了。</p>
<h3 id="Launch-Daemon-和-Launch-Agent区别"><a href="#Launch-Daemon-和-Launch-Agent区别" class="headerlink" title="Launch Daemon 和 Launch Agent区别"></a>Launch Daemon 和 Launch Agent区别</h3><p>Launch Daemon 和 Launch Agent 是同一种东西在不同应用范围的名称。</p>
<p>Launch Daemon 是系统级别的服务，称为 daemon，在开机时会加载。</p>
<p>Launch Agent 是用户级别的服务，称为agent，在用户登录后才会加载。</p>
<a id="more"></a>

<h3 id="两种方式设置脚本执行时间"><a href="#两种方式设置脚本执行时间" class="headerlink" title="两种方式设置脚本执行时间"></a>两种方式设置脚本执行时间</h3><ul>
<li>StartInterval: 它指定脚本每间隔多长时间（单位：秒）执行一次。</li>
<li>StartCalendarInterval: 它可以指定脚本在多少分钟、小时、天、星期几、月时间上执行，类似如crontab的中的设置。</li>
</ul>
<h3 id="plist文件存放路径"><a href="#plist文件存放路径" class="headerlink" title="plist文件存放路径"></a>plist文件存放路径</h3><ul>
<li>~/Library/LaunchAgents</li>
<li>/Library/LaunchAgents</li>
</ul>
<h3 id="plist文件配置参数"><a href="#plist文件配置参数" class="headerlink" title="plist文件配置参数"></a>plist文件配置参数</h3><ul>
<li>Label (必须) 该项服务的名称(一般以plist文件名命名)</li>
<li>Program 指定可执行文件的路径和名称, 如果没有 ProgramArguments 的话, Program 是必选的</li>
<li>ProgramArguments (如果没指定 Program, 则必须指定)</li>
<li>RunAtLoad (可选) 标识launchd在加载完该项服务之后立即启动路径指定的可执行文件。默认值为 false,设置为 true 即可实现开机运行脚本文件。</li>
<li>StartCalendarInterval (可选) 该关键字可以用来设置定时执行可执行程序，可使用 Month, Day, Hour, Minute, Second等子关键字，它可以指定脚本在多少月，天，小时，分钟，秒，星期几等时间上执行，若缺少某个关键字则表示任意该时间点，类似于 Unix 的 Crontab 计划任务的设置方式。</li>
</ul>
<blockquote>
<p> 所有key关键字详细使用说明可以在终端下使用命令 <code>man launchd.plist</code> 查询。</p>
</blockquote>
<h3 id="载入配置"><a href="#载入配置" class="headerlink" title="载入配置"></a>载入配置</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">launchctl load /Library/LaunchDaemons/bugscan.plist</span><br></pre></td></tr></tbody></table></figure>



<h3 id="卸载配置"><a href="#卸载配置" class="headerlink" title="卸载配置"></a>卸载配置</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">launchctl unload /Library/LaunchDaemons/bugscan.plist</span><br><span class="line"></span><br><span class="line">launchctl unload ~/Library/LaunchAgents/com.synology.SynologyDrive.plist</span><br></pre></td></tr></tbody></table></figure>



<h3 id="检查语法是否正确"><a href="#检查语法是否正确" class="headerlink" title="检查语法是否正确"></a>检查语法是否正确</h3> <figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">plutil /Library/LaunchDaemons/bugscan.plist</span><br></pre></td></tr></tbody></table></figure>



<h3 id="查看服务运行状态"><a href="#查看服务运行状态" class="headerlink" title="查看服务运行状态"></a>查看服务运行状态</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">launchctl list</span><br></pre></td></tr></tbody></table></figure>



<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul>
<li>要让任务生效，必须先load命令加载这个plist</li>
<li>如果任务文件修改了，那么必须先unload，然后重新load</li>
<li>start可以测试任务，这个是立即执行，不管时间到了没有</li>
<li>执行start和unload前，任务必须先load过，否则报错</li>
<li>stop可以停止任务</li>
<li>ProgramArguments内不能直接写命令，只能通过shell脚本来执行</li>
</ul>
<p>摘自:<br><a href="http://blog.evalbug.com/2015/11/29/osx_plist_startup/">http://blog.evalbug.com/2015/11/29/osx_plist_startup/</a><br><a href="http://honglu.me/2014/09/20/OSX%E7%B3%BB%E7%BB%9F%E6%B7%BB%E5%8A%A0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/">http://honglu.me/2014/09/20/OSX%E7%B3%BB%E7%BB%9F%E6%B7%BB%E5%8A%A0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</a></p>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS之yum命令</title>
    <url>/posts/uncategorized/98223286.html</url>
    <content><![CDATA[<p>yum 源管理命令</p>
<a id="more"></a>

<hr>
<blockquote>
<p>[root@localhost ~]# yum config-manager –help<br>usage: yum config-manager [-c [config file]] [-q] [-v] [–version]<br>                       [–installroot [path]] [–nodocs] [–noplugins]<br>                       [–enableplugin [plugin]] [–disableplugin [plugin]]<br>                       [–releasever RELEASEVER] [–setopt SETOPTS]<br>                       [–skip-broken] [-h] [–allowerasing]<br>                       [-b | –nobest] [-C] [-R [minutes]]<br>                       [-d [debug level]] [–debugsolver]<br>                       [–showduplicates] [-e ERRORLEVEL] [–obsoletes]<br>                       [–rpmverbosity [debug level name]] [-y]<br>                       [–assumeno] [–enablerepo [repo]]<br>                       [–disablerepo [repo] | –repo [repo]]<br>                       [–enable | –disable] [-x [package]]<br>                       [–disableexcludes [repo]]<br>                       [–repofrompath [repo,path]] [–noautoremove]<br>                       [–nogpgcheck] [–color COLOR] [–refresh] [-4] [-6]<br>                       [–destdir DESTDIR] [–downloadonly]<br>                       [–comment COMMENT] [–bugfix] [–enhancement]<br>                       [–newpackage] [–security] [–advisory ADVISORY]<br>                       [–bz BUGZILLA] [–cve CVES]<br>                       [–sec-severity {Critical,Important,Moderate,Low}]<br>                       [–forcearch ARCH] [–save] [–add-repo URL]<br>                       [–dump] [–dump-variables]<br>                       [repo [repo …]]</p>
<p>manage yum configuration options and repositories</p>
<p>General YUM options:<br>-c [config file], –config [config file] 配置文件位置<br>-q, –quiet                                            静默执行<br>-v, –verbose                                       详尽执行<br>–version             show YUM version and exit<br>–installroot [path]                             设置目标根目录<br>–nodocs                                              不要安装文档<br>–noplugins                                         禁用所有插件<br>–enableplugin [plugin]                     启用指定名称的插件<br>–disableplugin [plugin]                    禁用指定名称的插件<br>–releasever RELEASEVER                 覆盖在配置文件和仓库文件中 $releasever 的值<br>–setopt SETOPTS                              设置任意配置和仓库选项<br>–skip-broken                                     通过跳过软件包来解决依赖问题<br>-h, –help, –help-cmd                        显示命令帮助<br>–allowerasing                                    允许解决依赖关系时删除已安装软件包<br>-b, –best                                             在事务中尝试最佳软件包版本。<br>–nobest                                              不用把事务限制在最佳选择<br>-C, –cacheonly                                   完全从系统缓存运行，不升级缓存<br>-R [minutes], –randomwait [minutes] 最大命令等待时间<br>-d [debug level], –debuglevel [debug level]<br>                     调试输出级别<br>–debugsolver         转储详细解决结果至文件<br>–showduplicates      在 list/search 命令下，显示仓库里重复的条目<br>-e ERRORLEVEL, –errorlevel ERRORLEVEL<br>                     错误输出级别<br>–obsoletes           enables yum’s obsoletes processing logic for upgrade<br>                     or display capabilities that the package obsoletes for<br>                     info, list and repoquery<br>–rpmverbosity [debug level name]<br>                     rpm调试输出等级<br>-y, –assumeyes       全部问题自动应答为是<br>–assumeno            全部问题自动应答为否<br>–enablerepo [repo]   Enable additional repositories. List option. Supports<br>                     globs, can be specified multiple times.<br>–disablerepo [repo]  Disable repositories. List option. Supports globs, can<br>                     be specified multiple times.<br>–repo [repo], –repoid [repo]<br>                     启用指定 id 或 glob 的仓库，可以指定多次<br>–enable, –set-enabled<br>                     使用 config-manager 命令启用 repos (自动保存)<br>–disable, –set-disabled<br>                     使用 config-manager 命令禁用 repos (自动保存)<br>-x [package], –exclude [package], –excludepkgs [package]<br>                     用全名或通配符排除软件包<br>–disableexcludes [repo], –disableexcludepkgs [repo]<br>                     禁用 excludepkgs<br>–repofrompath [repo,path]<br>                     label and path to an additional repository to use<br>                     (same path as in a baseurl), can be specified multiple<br>                     times.<br>–noautoremove        禁用删除不再被使用的依赖软件包<br>–nogpgcheck          禁用 gpg 签名检查 (如果 RPM 策略允许)<br>–color COLOR         配置是否使用颜色<br>–refresh             在运行命令之前将元数据标记为过期。<br>-4                    仅解析 IPv4 地址<br>-6                    仅解析 IPv6 地址<br>–destdir DESTDIR, –downloaddir DESTDIR<br>                     设置软件包要复制到的目录<br>–downloadonly        仅下载软件包<br>–comment COMMENT     为事务添加一个注释<br>–bugfix              在更新中包括与 bug 修复有关的软件包<br>–enhancement         在更新中包括与功能增强有关的软件包。<br>–newpackage          在更新中包括与新软件包有关的软件包<br>–security            在更新中包括与安全有关的软件包<br>–advisory ADVISORY, –advisories ADVISORY<br>                     在更新中包括修复指定公告所必须的软件包<br>–bz BUGZILLA, –bzs BUGZILLA<br>                     在更新中包括修复给定 BZ 所必须的软件包<br>–cve CVES, –cves CVES<br>                     在更新中包括修复给定 CVE 所必须的软件包<br>–sec-severity {Critical,Important,Moderate,Low}, –secseverity {Critical,Important,Moderate,Low}<br>                     在更新中包括匹配给定安全等级的安全相关的软件包<br>–forcearch ARCH      强制使用一个架构</p>
<p>Config-manager command-specific options:<br>–save                保存当前选项（与 –setopt 和用）<br>–add-repo URL        从指定文件或 URL 添加（并启用）仓库<br>–dump                打印当前配置值到标准输出<br>–dump-variables      打印变量值到标准输出</p>
<p>repo                  要修改的仓库</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>MacOS使用技巧</title>
    <url>/posts/MacOS/20a05160.html</url>
    <content><![CDATA[<p>MacOS使用技巧</p>
<hr>
<a id="more"></a>

<h4 id="恢复u盘实际容量"><a href="#恢复u盘实际容量" class="headerlink" title="恢复u盘实际容量"></a>恢复u盘实际容量</h4><blockquote>
<p>装机系统启动盘恢复</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 查看要回复的 U盘</span></span><br><span class="line">diskutil list</span><br><span class="line"></span><br><span class="line"><span class="comment">#sudo diskutil umountDisk /dev/disk2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里假设是 disk2</span></span><br><span class="line">diskutil eraseDisk JHFS+ Secure_HDD disk2</span><br></pre></td></tr></tbody></table></figure>



<h4 id="log-命令"><a href="#log-命令" class="headerlink" title="log 命令"></a>log 命令</h4><h6 id="查看过去一小时日志"><a href="#查看过去一小时日志" class="headerlink" title="查看过去一小时日志"></a>查看过去一小时日志</h6><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">log</span> show --info --start <span class="string">"<span class="subst">$(date -u -v-1H +%Y-%m-%d\ %H:%M:%S)</span>"</span></span><br></pre></td></tr></tbody></table></figure>

<h6 id="查看-sshd-进程最后10条记录"><a href="#查看-sshd-进程最后10条记录" class="headerlink" title="查看 sshd 进程最后10条记录"></a>查看 sshd 进程最后10条记录</h6><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">log</span> show --predicate <span class="string">'process == "sshd"'</span> --info --last 10</span><br></pre></td></tr></tbody></table></figure>



<h4 id="命令行操作远程登录"><a href="#命令行操作远程登录" class="headerlink" title="命令行操作远程登录"></a>命令行操作远程登录</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 查看远程登录是否开启</span></span><br><span class="line">sudo systemsetup -getremotelogin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启远程登录</span></span><br><span class="line">sudo systemsetup -setremotelogin on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭远程登录</span></span><br><span class="line">sudo systemsetup -setremotelogin off</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以通过 launchctl 来启动和关闭远程登录</span></span><br><span class="line"><span class="comment"># 开启远程登录</span></span><br><span class="line">sudo launchctl load -w /System/Library/LaunchDaemons/ssh.plist</span><br><span class="line"><span class="comment"># 关闭远程登录</span></span><br><span class="line">sudo launchctl unload /System/Library/LaunchDaemons/ssh.plist</span><br><span class="line">sudo launchctl list | grep sshd</span><br></pre></td></tr></tbody></table></figure>



<h4 id="命令行使用-typora-打开-markdown-文件"><a href="#命令行使用-typora-打开-markdown-文件" class="headerlink" title="命令行使用 typora 打开 markdown 文件"></a>命令行使用 typora 打开 markdown 文件</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'alias typora="open -a typora"'</span> &gt;&gt; ~/.zshrc</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line">typora README.md</span><br></pre></td></tr></tbody></table></figure>



<h4 id="iPhone、iPad-备份位置"><a href="#iPhone、iPad-备份位置" class="headerlink" title="iPhone、iPad 备份位置"></a>iPhone、iPad 备份位置</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ls -lah ~/Library/Application\ Support/MobileSync/Backup/</span><br></pre></td></tr></tbody></table></figure>



<h4 id="远程桌面管理"><a href="#远程桌面管理" class="headerlink" title="远程桌面管理"></a>远程桌面管理</h4><p>在 <code>访达</code> 中键入 <code>⌘ + K</code>  输入 <code>vnc://192.168.36.47</code>。</p>
<h4 id="命令行方式开启远程管理"><a href="#命令行方式开启远程管理" class="headerlink" title="命令行方式开启远程管理"></a>命令行方式开启远程管理</h4><h6 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h6><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 允许指定用户</span></span><br><span class="line">sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate -configure -access -on -restart -agent -privs -all  -users codezm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许所有用户</span></span><br><span class="line"><span class="comment"># sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate -configure -access -on -restart -agent -privs -all -allowAccessFor -allUsers</span></span><br></pre></td></tr></tbody></table></figure>

<h6 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h6><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -deactivate -configure -access -off</span><br></pre></td></tr></tbody></table></figure>



<h4 id="Mac-如何清除-dns-缓存"><a href="#Mac-如何清除-dns-缓存" class="headerlink" title="Mac 如何清除 dns 缓存"></a>Mac 如何清除 dns 缓存</h4><ul>
<li><p>10.11.5及以上</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo killall mDNSResponder</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>10.10.4</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder;say cache flushed</span><br></pre></td></tr></tbody></table></figure>



</li>
</ul>
<h4 id="tar-打包时存在多余-文件"><a href="#tar-打包时存在多余-文件" class="headerlink" title="tar 打包时存在多余 _ 文件"></a>tar 打包时存在多余 _ 文件</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">find . -name <span class="string">"._*"</span> | xargs rm -f</span><br><span class="line">find . -name <span class="string">".DS_Store"</span> | xargs rm -f</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">COPYFILE_DISABLE=1 tar -cvf inws.tar inws</span><br></pre></td></tr></tbody></table></figure>



<h4 id="Mac-开启远程登录"><a href="#Mac-开启远程登录" class="headerlink" title="Mac 开启远程登录"></a>Mac 开启远程登录</h4><ol>
<li>系统偏好设置</li>
<li>共享</li>
<li>勾选允许远程登陆 </li>
</ol>
<h4 id="xcode-无法升级-一直提示”无法连接到服务器”"><a href="#xcode-无法升级-一直提示”无法连接到服务器”" class="headerlink" title="xcode 无法升级 - 一直提示”无法连接到服务器”"></a>xcode 无法升级 - 一直提示”无法连接到服务器”</h4><p>访问官方网站 <a href="https://developer.apple.com/download/more">https://developer.apple.com/download/more</a> 下载<code>xcode</code>最新包.</p>
<h4 id="刚下载的-xx-app-运行时提示软件已损坏，无法打开"><a href="#刚下载的-xx-app-运行时提示软件已损坏，无法打开" class="headerlink" title="刚下载的 xx.app 运行时提示软件已损坏，无法打开"></a>刚下载的 xx.app 运行时提示软件已损坏，无法打开</h4><ol>
<li><p>设置允许任何来源</p>
<ul>
<li><p>系统偏好设置 -&gt; 安全性与隐私 -&gt; 任何来源</p>
</li>
<li><p><code>macOS Sierra 10.12</code>系统需要执行以下命令:</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
</li>
<li><p>修复 xxx.app</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo xattr -rd com.apple.quarantine /Applications/VLC.app</span><br></pre></td></tr></tbody></table></figure>





</li>
</ol>
<h3 id="git-diff-时出现的-M"><a href="#git-diff-时出现的-M" class="headerlink" title="git diff 时出现的 ^M"></a>git diff 时出现的 ^M</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 去除git diff 时出现的 ^M(只是git不再提醒了,内容并未变化)</span></span><br><span class="line">git config --global core.whitespace cr-at-eol</span><br><span class="line"><span class="comment"># 还原git diff 时出现的 ^M(只是git恢复提醒了,内容并未变化)</span></span><br><span class="line">git config --global core.whitespace crlr-at-eol</span><br></pre></td></tr></tbody></table></figure>



<h4 id="brew-install-Error-Your-Command-Line-Tools-are-too-outdated"><a href="#brew-install-Error-Your-Command-Line-Tools-are-too-outdated" class="headerlink" title="brew install Error: Your Command Line Tools are too outdated"></a>brew install Error: Your Command Line Tools are too outdated</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ softwareupdate --list</span><br><span class="line">Software Update Tool</span><br><span class="line"></span><br><span class="line">Finding available software</span><br><span class="line">No new software available.</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ sudo rm -rf /Library/Developer/CommandLineTools</span><br><span class="line">$ sudo xcode-select --install</span><br><span class="line">$ xcodebuild -version</span><br><span class="line">Xcode 12.5</span><br><span class="line">Build version 12E262</span><br></pre></td></tr></tbody></table></figure>



<h4 id="brew-切换至清华大学源。"><a href="#brew-切换至清华大学源。" class="headerlink" title="brew 切换至清华大学源。"></a>brew 切换至清华大学源。</h4><p><a href="https://juejin.cn/post/6844904069471928328">https://juejin.cn/post/6844904069471928328</a></p>
<h4 id="在执行-brew-install-命令时，自动升级旧版软件"><a href="#在执行-brew-install-命令时，自动升级旧版软件" class="headerlink" title="在执行 brew install 命令时，自动升级旧版软件"></a>在执行 brew install 命令时，自动升级旧版软件</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 防止升级所有软件</span></span><br><span class="line"><span class="built_in">export</span> HOMEBREW_NO_AUTO_UPDATE=1</span><br><span class="line"><span class="comment"># 防止自动清理</span></span><br><span class="line"><span class="built_in">export</span> HOMEBREW_NO_INSTALL_CLEANUP=1</span><br></pre></td></tr></tbody></table></figure>



<h4 id="切换至-root-用户"><a href="#切换至-root-用户" class="headerlink" title="切换至 root 用户"></a>切换至 root 用户</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></tbody></table></figure>



<h4 id="mount-hfs-Operation-not-permitted？"><a href="#mount-hfs-Operation-not-permitted？" class="headerlink" title="mount_hfs: Operation not permitted？"></a>mount_hfs: Operation not permitted？</h4><p>起因：iMac 默认配置是机械硬盘，为了提速换成了USB外接固态硬盘。并将硬盘划分了两块分区，第一块分区做系统盘，第二块分区做代码数据盘（区分大小写—为了与线上环境保持一致），第二块分区在开机未登录的时候是未挂载到系统上了，在用户登录后会自动进行挂载。目前一些文件做了软链至第二块分区，这就导致自启动脚本需依赖挂载第二块分区后才能正常运行。</p>
<p>本来是想放到 launchctl 自启动脚本中的，但尝试了各种办法未实现，但 crontab 确可以。</p>
<blockquote>
<p>mount 命令需要 sudo 权限，下面方法也是为了解决在使用 sudo 时不需要输入密码。</p>
<p>参考：<a href="https://apple.stackexchange.com/questions/117148/how-do-i-get-my-launchagent-to-run-as-root/288322#288322">https://apple.stackexchange.com/questions/117148/how-do-i-get-my-launchagent-to-run-as-root/288322#288322</a></p>
</blockquote>
<ol>
<li><p>创建 <code>mount-disk.sh</code> 脚本</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="subst">$(mount | grep 'work')</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> $(date <span class="string">'+%F %H:%M:%S'</span>)<span class="string">": try mount..."</span></span><br><span class="line">    mkdir /Volumes/work || mount -t hfs /dev/disk1s3 /Volumes/work</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> $(date <span class="string">'+%F %H:%M:%S'</span>)<span class="string">": mounted..."</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></tbody></table></figure>



</li>
</ol>
   <figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 添加执行权限</span></span><br><span class="line">chmod 755 mount-disk.sh</span><br></pre></td></tr></tbody></table></figure>

<ol start="2">
<li><p><code>crontab -e</code> 添加 crontab 任务</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">* * * * * /usr/bin/sudo /Users/codezm/intranet-penetration/mount-disk.sh &gt;&gt; /tmp/crontab-root.log 2&gt;&amp;1</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>sudo 取消密码输入</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo visudo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将以下内容</span></span><br><span class="line"><span class="comment"># root and users in group wheel can run anything on any machine as any user</span></span><br><span class="line">root        ALL = (ALL) ALL</span><br><span class="line">%admin      ALL = (ALL) ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换为</span></span><br><span class="line"><span class="comment"># root and users in group wheel can run anything on any machine as any user</span></span><br><span class="line">root        ALL = (ALL) ALL</span><br><span class="line">%admin      ALL = (ALL) ALL</span><br><span class="line">codezm ALL=(ALL) NOPASSWD: /Users/codezm/intranet-penetration/mount-disk.sh</span><br></pre></td></tr></tbody></table></figure>

</li>
</ol>
<h4 id="Crontab-Operation-not-permitted？"><a href="#Crontab-Operation-not-permitted？" class="headerlink" title="Crontab: Operation not permitted？"></a>Crontab: Operation not permitted？</h4><p>受Mac系统保护的影响，crontab 默认仅允许在用户主目录下执行脚本。</p>
<p>但脚本不在用户主目录下，则需要将 cron 添加到 <strong><code>完整磁盘访问权限</code></strong> 中，否则就会出现 <code>Operation not permitted</code> 错误。</p>
<img data-src="MacOS使用技巧/image-20210825095316669.png" alt="image-20210825095316669">

<p>具体操作步骤：</p>
<ol>
<li>系统偏好设置 -&gt; 安全与隐私 -&gt; 隐私 -&gt; 完全磁盘访问权限</li>
<li>点击 <code>点按锁按钮以进行更改。</code> ，输入账号及密码。</li>
<li>点击 <code>＋</code>，使用 <code>shift+command+G</code> 快捷键，输入 <code>/usr/bin/cron</code>，点击 <code>打开</code> 按钮。</li>
<li>点击 <code>点按锁按钮以防再次更改。</code>。</li>
</ol>
<p>查看crontab任务未执行原因：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ sudo launchctl list | grep <span class="string">'cron'</span></span><br><span class="line">307	0	com.vix.cron</span><br><span class="line">$ locate com.vix.cron</span><br><span class="line">/System/Library/LaunchDaemons/com.apple.locate.plist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看邮件内容，这里的 codezm 为用户名</span></span><br><span class="line">$ tail -f /var/mail/codezm</span><br></pre></td></tr></tbody></table></figure>



<p>参考：</p>
<ul>
<li><a href="https://apple.stackexchange.com/questions/378553/crontab-operation-not-permitted">https://apple.stackexchange.com/questions/378553/crontab-operation-not-permitted</a></li>
<li><a href="https://blog.humh.cn/?p=947">https://blog.humh.cn/?p=947</a></li>
</ul>
<h4 id="Mac-网络配置"><a href="#Mac-网络配置" class="headerlink" title="Mac 网络配置"></a>Mac 网络配置</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 查看路由表</span></span><br><span class="line">netstat -nr</span><br><span class="line"><span class="comment"># 查看所有网络链接方式</span></span><br><span class="line">networksetup -listallnetworkservices</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置静态IP</span></span><br><span class="line">networksetup -setmanual Ethernet 192.168.36.47 255.255.254.0 192.168.36.254</span><br><span class="line"><span class="comment"># 设置DHCP</span></span><br><span class="line">networksetup -setdhcp Ethernet</span><br><span class="line"><span class="comment"># 设置DHCP（手动设定地址）</span></span><br><span class="line">networksetup -setmanualwithdhcprouter Ethernet 192.168.36.47</span><br><span class="line">networksetup -setdnsservers Ethernet 223.5.5.5 114.114.114.114 8.8.8.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置DNS</span></span><br><span class="line">networksetup -setdnsservers Ethernet 192.168.36.254</span><br><span class="line"><span class="comment"># 清空DNS缓存</span></span><br><span class="line">dscacheutil -flushcache</span><br><span class="line"></span><br><span class="line">networksetup -setnetworkserviceenabled  Ethernet off</span><br><span class="line">networksetup -setnetworkserviceenabled  Ethernet on</span><br><span class="line"></span><br><span class="line">networksetup -setdhcp Ethernet</span><br><span class="line">networksetup -setmanualwithdhcprouter Ethernet 192.168.36.47</span><br></pre></td></tr></tbody></table></figure>



<h4 id="Mac-平台-tar-打包后，在其他平台解压时出现多余-文件"><a href="#Mac-平台-tar-打包后，在其他平台解压时出现多余-文件" class="headerlink" title="Mac 平台 tar 打包后，在其他平台解压时出现多余 ._ 文件"></a>Mac 平台 <code>tar</code> 打包后，在其他平台解压时出现多余 <code>._</code> 文件</h4><p>设置 <code>COPYFILE_DISABLE</code> 变量，使其在压缩时避免生成 <code>._</code> 文件。</p>
<h5 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">tar --disable-copyfile -zcvf files</span><br><span class="line"><span class="comment"># COPYFILE_DISABLE=1 tar -zcvf files.tar.gz files</span></span><br><span class="line"></span><br><span class="line">git diff e6bd106649ef0..69e2fc98b17 --name-only | grep -E <span class="string">"statics|phpcms|caches/caches_commons/caches_data/poster_template_1.cache.php"</span> | xargs -I {} tar --disable-copyfile -rvf <span class="string">"phpcms-<span class="subst">$(date +%Y-%m-%d)</span>.tar.gz"</span> {}</span><br><span class="line"><span class="comment"># 查看压缩包文件列表 --不解压</span></span><br><span class="line">tar -tvf phpcms-2021-04-30.tar.gz</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 创建包文件</span></span><br><span class="line">git show 9660d86 --name-only --oneline | grep <span class="string">"wap"</span> | xargs -I {} tar cvf vip-fixed.tar.gz {}</span><br><span class="line"><span class="comment"># 追加包文件</span></span><br><span class="line">git show 9660d86 --name-only --oneline | grep <span class="string">"wap"</span> | xargs -I {} tar rvf vip-fixed.tar.gz {}</span><br></pre></td></tr></tbody></table></figure>

<p>tar 中 <code>-z</code> 是压缩，<code>-c</code> 是归档，凡使用这两个参数创建的压缩包文件，则不能向其再追加文件。</p>
<h4 id="mysql-更改存储路径"><a href="#mysql-更改存储路径" class="headerlink" title="mysql 更改存储路径"></a>mysql 更改存储路径</h4><h5 id="更改配置文件"><a href="#更改配置文件" class="headerlink" title="更改配置文件"></a>更改配置文件</h5><p><code>vim /usr/local/opt/mysql/homebrew.mxcl.mysql.plist</code></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">将默认路径 `/usr/local/var/mysql` 更换为自定义路径 `/Volumes/work/web/databases/3306`</span><br><span class="line"></span><br><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span><br><span class="line">&lt;plist version="1.0"&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">  &lt;key&gt;KeepAlive&lt;/key&gt;</span><br><span class="line">  &lt;true/&gt;</span><br><span class="line">  &lt;key&gt;Label&lt;/key&gt;</span><br><span class="line">  &lt;string&gt;homebrew.mxcl.mysql&lt;/string&gt;</span><br><span class="line">  &lt;key&gt;ProgramArguments&lt;/key&gt;</span><br><span class="line">  &lt;array&gt;</span><br><span class="line">    &lt;string&gt;/usr/local/opt/mysql/bin/mysqld_safe&lt;/string&gt;</span><br><span class="line">    &lt;string&gt;--datadir=/Volumes/work/web/databases/3306&lt;/string&gt;</span><br><span class="line">  &lt;/array&gt;</span><br><span class="line">  &lt;key&gt;RunAtLoad&lt;/key&gt;</span><br><span class="line">  &lt;true/&gt;</span><br><span class="line">  &lt;key&gt;WorkingDirectory&lt;/key&gt;</span><br><span class="line">  &lt;string&gt;/Volumes/work/web/databases/3306&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/plist&gt;</span><br></pre></td></tr></tbody></table></figure>

<p><code>vim /usr/local/opt/mysql@5.7/homebrew.mxcl.mysql@5.7.plist</code></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">将默认路径 `/usr/local/var/mysql` 更换为自定义路径 `/Volumes/work/web/databases/3307`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span><br><span class="line">&lt;plist version="1.0"&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">  &lt;key&gt;KeepAlive&lt;/key&gt;</span><br><span class="line">  &lt;true/&gt;</span><br><span class="line">  &lt;key&gt;Label&lt;/key&gt;</span><br><span class="line">  &lt;string&gt;homebrew.mxcl.mysql@5.7&lt;/string&gt;</span><br><span class="line">  &lt;key&gt;ProgramArguments&lt;/key&gt;</span><br><span class="line">  &lt;array&gt;</span><br><span class="line">    &lt;string&gt;/usr/local/opt/mysql@5.7/bin/mysqld_safe&lt;/string&gt;</span><br><span class="line">    &lt;string&gt;--datadir=/Volumes/work/web/databases/3307 --defaults-file=/usr/local/etc/mysql@5.7/my.cnf&lt;/string&gt;</span><br><span class="line">  &lt;/array&gt;</span><br><span class="line">  &lt;key&gt;RunAtLoad&lt;/key&gt;</span><br><span class="line">  &lt;true/&gt;</span><br><span class="line">  &lt;key&gt;WorkingDirectory&lt;/key&gt;</span><br><span class="line">  &lt;string&gt;/Volumes/work/web/databases/3307&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/plist&gt;</span><br></pre></td></tr></tbody></table></figure>



<h5 id="删除默认数据存储目录"><a href="#删除默认数据存储目录" class="headerlink" title="删除默认数据存储目录"></a>删除默认数据存储目录</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">rm -rf /usr/local/var/mysql</span><br></pre></td></tr></tbody></table></figure>



<h5 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/Cellar/mysql/8.0.23/bin/mysqld --datadir=/Volumes/work/web/databases/3306 --initialize-insecure</span><br><span class="line"></span><br><span class="line"><span class="comment"># 相对于 mysql@5.7 版本，需要创建 /usr/local/etc/my@5.7.cnf 配置文件，否则将与 mysql@8.0 版本配置文件冲突</span></span><br><span class="line">vim /usr/<span class="built_in">local</span>/etc/my@5.7.cnf</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment"># Only allow connections from localhost</span></span><br><span class="line">bind-address = 127.0.0.1</span><br><span class="line">port=3307</span><br><span class="line">datadir=/Volumes/work/web/databases/3307</span><br><span class="line">socket=/Volumes/work/web/databases/3307/mysql.sock</span><br><span class="line">pid-file=/Volumes/work/web/databases/3307/mysql.pid</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/Cellar/mysql@5.7/5.7.32/bin/mysqld --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@5.7/my.cnf --datadir=/Volumes/work/web/databases/3307 --initialize-insecure  --explicit_defaults_for_timestamp</span><br></pre></td></tr></tbody></table></figure>



<h5 id="迁移数据"><a href="#迁移数据" class="headerlink" title="迁移数据"></a>迁移数据</h5><p><code>Got a packet bigger than 'max_allowed_packet' bytes</code></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"># 默认：4M = 4194304，此处调整为 100M。</span><br><span class="line">max_allowed_packet=104857600</span><br></pre></td></tr></tbody></table></figure>



<h4 id="brew"><a href="#brew" class="headerlink" title="brew"></a>brew</h4><h5 id="在使用-brew-list-grep-mysql-命令时，提示-Error-Cask-39-java-39-is-unreadable-undefined-method-39-undent-39-for-lt-String-0x00007f8685373738-gt-错误信息。"><a href="#在使用-brew-list-grep-mysql-命令时，提示-Error-Cask-39-java-39-is-unreadable-undefined-method-39-undent-39-for-lt-String-0x00007f8685373738-gt-错误信息。" class="headerlink" title="在使用 brew list | grep mysql 命令时，提示 Error: Cask 'java' is unreadable: undefined method 'undent' for #<String:0x00007f8685373738> 错误信息。"></a>在使用 <code>brew list | grep mysql</code> 命令时，提示 <code>Error: Cask 'java' is unreadable: undefined method 'undent' for #&lt;String:0x00007f8685373738&gt;</code> 错误信息。</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">find <span class="string">"<span class="subst">$(brew --prefix)</span>/Caskroom/"</span>*<span class="string">'/.metadata'</span> -<span class="built_in">type</span> f -name <span class="string">'*.rb'</span> | xargs grep <span class="string">'EOS.undent'</span> --files-with-matches | xargs sed -i <span class="string">''</span> <span class="string">'s/EOS.undent/EOS/'</span></span><br></pre></td></tr></tbody></table></figure>

<p><a href="https://github.com/Homebrew/homebrew-cask/issues/49716">详见</a></p>
<h4 id="在-Mac-上压缩含有中文名的文件后，再在-Windows-上解压时乱码"><a href="#在-Mac-上压缩含有中文名的文件后，再在-Windows-上解压时乱码" class="headerlink" title="在 Mac 上压缩含有中文名的文件后，再在 Windows 上解压时乱码"></a>在 Mac 上压缩含有中文名的文件后，再在 Windows 上解压时乱码</h4><blockquote>
<p>原因：Mac、Linux 默认使用的是 UTF-8 编码，而 Windows 使用的是 GBK 编码。</p>
</blockquote>
<p>安装并使用 <a href="https://www.keka.io/zh-cn/">Keka</a> 压缩软件，压缩格式设置为 <code>7z</code>。</p>
<p><code>Keka</code> 是一款免费且 <a href="https://github.com/aonez/Keka">开源</a> 的文件压缩、解压软件。</p>
<h4 id="禁止在移动存储设备上创建-Trashes、-Spotlight-V100、-fseventsd-目录"><a href="#禁止在移动存储设备上创建-Trashes、-Spotlight-V100、-fseventsd-目录" class="headerlink" title="禁止在移动存储设备上创建 .Trashes、.Spotlight-V100、.fseventsd 目录"></a>禁止在移动存储设备上创建 .Trashes、.Spotlight-V100、.fseventsd 目录</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭索引创建</span></span><br><span class="line">mdutil -i off /Volumes/yourUSBstick</span><br><span class="line"><span class="built_in">cd</span> /Volumes/yourUSBstick</span><br><span class="line">rm -rf .{,_.}{fseventsd,Spotlight-V*,Trashes}</span><br><span class="line">mkdir .fseventsd</span><br><span class="line">touch .fseventsd/no_log .metadata_never_index .Trashes</span><br><span class="line"><span class="built_in">cd</span> -</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><a href="https://apple.stackexchange.com/questions/6707/how-to-stop-os-x-from-writing-spotlight-and-trash-files-to-memory-cards-and-usb/7135">参考</a></li>
</ul>
<h4 id="显示通知"><a href="#显示通知" class="headerlink" title="显示通知"></a>显示通知</h4><p>脚本运行完后，来个提醒</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">osascript -e <span class="string">'display notification "hello world!"'</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="https://www.zixi.org/archives/notification_on_macos.html">在mac命令行执行显示通知</a></li>
</ul>
<h4 id="更新系统时间"><a href="#更新系统时间" class="headerlink" title="更新系统时间"></a>更新系统时间</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo sntp -sS time.apple.com</span><br></pre></td></tr></tbody></table></figure>



<h4 id="Mac-备份盘"><a href="#Mac-备份盘" class="headerlink" title="Mac 备份盘"></a>Mac 备份盘</h4><p>分区格式：<code>Mac OS 扩展（日志式）</code></p>
<p><img data-src="20a05160/image-20210123124020534.png" alt="image-20210123124020534"></p>
<h4 id="Mac-端重启-sshd-服务"><a href="#Mac-端重启-sshd-服务" class="headerlink" title="Mac 端重启 sshd 服务"></a>Mac 端重启 sshd 服务</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo <span class="built_in">kill</span> -SIGHUP $(ps aux | grep sshd | grep priv | awk <span class="string">'{print $2}'</span>)</span><br><span class="line"></span><br><span class="line">sudo launchctl load -w /System/Library/LaunchDaemons/ssh.plist</span><br></pre></td></tr></tbody></table></figure>



<h4 id="iTunes-在-Mac-上的备份"><a href="#iTunes-在-Mac-上的备份" class="headerlink" title="iTunes 在 Mac 上的备份"></a>iTunes 在 Mac 上的备份</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Library/Application Support/MobileSync/Backup</span><br></pre></td></tr></tbody></table></figure>



<h4 id="在-Finder-访达中显示-隐藏-前缀的隐藏文件快捷键"><a href="#在-Finder-访达中显示-隐藏-前缀的隐藏文件快捷键" class="headerlink" title="在 Finder 访达中显示/隐藏 . 前缀的隐藏文件快捷键"></a>在 <code>Finder</code> 访达中显示/隐藏 <code>.</code> 前缀的隐藏文件快捷键</h4><p><code>Shift + CMD + .</code></p>
<h4 id="访达"><a href="#访达" class="headerlink" title="访达"></a>访达</h4><h5 id="跳转目录"><a href="#跳转目录" class="headerlink" title="跳转目录"></a>跳转目录</h5><p><code>Command + shift + g</code> 输入目录路径。</p>
<h4 id="刷新网页、强制刷新网页快捷键"><a href="#刷新网页、强制刷新网页快捷键" class="headerlink" title="刷新网页、强制刷新网页快捷键"></a>刷新网页、强制刷新网页快捷键</h4><ul>
<li>刷新网页：<code>CMD + r</code> 。</li>
<li>强制刷新网页：<code>Shift + CMD + r</code> 。</li>
</ul>
<h4 id="查看文件权限、附加权限"><a href="#查看文件权限、附加权限" class="headerlink" title="查看文件权限、附加权限"></a>查看文件权限、附加权限</h4><p>普通文件可通过 <code>ls -l</code> 命令，查看文件所属用户、用户组。但部分文件增加了 <code>@</code> 符，是 Mac OS 追加的附加权限，可通过 <code>xattr -l</code> 命令查看。</p>
<h4 id="如何更改-Mac-文件的默认打开方式"><a href="#如何更改-Mac-文件的默认打开方式" class="headerlink" title="如何更改 Mac 文件的默认打开方式"></a>如何更改 Mac 文件的默认打开方式</h4><h5 id="更改某一文件的默认打开方式"><a href="#更改某一文件的默认打开方式" class="headerlink" title="更改某一文件的默认打开方式"></a>更改某一文件的默认打开方式</h5><ol>
<li>右键单击该文件</li>
<li>按住 <code>option</code> 键，在 <code>始终以此方式打开</code> 列表中选择要打开此文件的应用。</li>
</ol>
<p>以后再鼠标双击打开该文件时将使用配置的应用打开，但其他同类型文件则使用默认应用。</p>
<h5 id="更改同类型文件的默认打开方式"><a href="#更改同类型文件的默认打开方式" class="headerlink" title="更改同类型文件的默认打开方式"></a>更改同类型文件的默认打开方式</h5><ol>
<li>右键单击该文件</li>
<li>选择 <code>显示简介</code> 选项。</li>
<li>在 <code>打开方式</code> 中，选择此后缀文件默认打开的应用。</li>
<li>点击 <code>全部更改</code> 按钮。</li>
</ol>
<p>以后所有此后缀文件均有该应用打开，要想复原可再次通过以上步骤操作。</p>
<h4 id="如何禁止创建-DS-Store-文件"><a href="#如何禁止创建-DS-Store-文件" class="headerlink" title="如何禁止创建 .DS_Store 文件"></a>如何禁止创建 <code>.DS_Store</code> 文件</h4><blockquote>
<p>并未实践操作证明此项配置生效</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">defaults write com.apple.desktopservices DSDontWriteNetworkStores <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="Libaray-Developer-占用大量存储空间"><a href="#Libaray-Developer-占用大量存储空间" class="headerlink" title="~/Libaray/Developer 占用大量存储空间"></a><code>~/Libaray/Developer</code> 占用大量存储空间</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ du -d 1 -h</span><br></pre></td></tr></tbody></table></figure>



<h4 id="修改主机名：hostname"><a href="#修改主机名：hostname" class="headerlink" title="修改主机名：hostname"></a>修改主机名：hostname</h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">sudo scutil --set HostName codezm-Cicada</span><br><span class="line">hostname</span><br></pre></td></tr></tbody></table></figure>



<h4 id="MacBook-Pro-2015款"><a href="#MacBook-Pro-2015款" class="headerlink" title="MacBook Pro 2015款"></a>MacBook Pro 2015款</h4><p>随航❌：<a href="https://support.apple.com/zh-cn/HT210380">https://support.apple.com/zh-cn/HT210380</a></p>
<blockquote>
<p>随航：可以将 iPad 用作显示屏，从而扩展或镜像 Mac 桌面。</p>
</blockquote>
<p>通用控制❌：<a href="https://support.apple.com/zh-cn/HT212757">https://support.apple.com/zh-cn/HT212757</a></p>
<p>接力✅：<a href="https://support.apple.com/zh-cn/HT209455">https://support.apple.com/zh-cn/HT209455</a></p>
<p><a href="https://support.apple.com/zh-cn/HT210380">Mac、iPhone、iPad、iPod touch 和 Apple Watch 上“连续互通”的系统要求</a></p>
<h4 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h4><ul>
<li><p><a href="https://stackoverflow.com/questions/29930198/can-i-delete-data-from-the-ios-devicesupport-directory">Can I delete data from the iOS DeviceSupport directory?</a></p>
</li>
<li><p><a href="https://sspai.com/post/28394">基础教程：如何更改 Mac 文件的默认打开方式</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS开机自动挂载硬盘&amp;frpc</title>
    <url>/posts/MacOS/7b492236.html</url>
    <content><![CDATA[<h1 id="MacOS开机自动挂载硬盘-amp-frpc"><a href="#MacOS开机自动挂载硬盘-amp-frpc" class="headerlink" title="MacOS开机自动挂载硬盘&amp;frpc"></a>MacOS开机自动挂载硬盘&amp;frpc</h1><h4 id="开启-断电后自动启动-功能"><a href="#开启-断电后自动启动-功能" class="headerlink" title="开启 断电后自动启动 功能"></a>开启 <code>断电后自动启动</code> 功能</h4><p><code>系统偏好设置</code> -&gt; <code>节能</code> -&gt; <code>断电后自动启动</code>。</p>
<h4 id="配置开机自动运行脚本"><a href="#配置开机自动运行脚本" class="headerlink" title="配置开机自动运行脚本"></a>配置开机自动运行脚本</h4><ul>
<li>用户登录运行：<code>/Library/LaunchAgents/</code></li>
<li>不需要用户登录运行：<code>/Library/LaunchDaemons/</code></li>
<li>用户身份运行：<code>～/Library/LaunchAgents/</code></li>
</ul>
<p><code>macOS</code> 自动运行是通过 <code>launchd</code> 工具管理的，<code>launchd</code> 配置文件是以 <code>.plist</code> 结尾的格式文件。</p>
<blockquote>
<p>注意：配置文件的拥有者必须是 <code>root:wheel</code> ，命令：<code>sudo chown root:wheel com.codezm.frpc.plist</code>。读写权限需为 <code>644</code> ，命令：<code>sudo chmod 644 com.codezm.frpc.plist</code></p>
</blockquote>
<a id="more"></a>

<p>为达到全自动运行效果，不需要用户登录即可运行脚本，创建 <code>vim /Library/LaunchDaemons/com.codezm.frpc.plist</code> 文件，内容如下：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span><br><span class="line">&lt;plist version="1.0"&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">    &lt;key&gt;Label&lt;/key&gt;</span><br><span class="line">    &lt;string&gt;com.codezm.frpc&lt;/string&gt;</span><br><span class="line">    &lt;key&gt;KeepAlive&lt;/key&gt;</span><br><span class="line">    &lt;true/&gt;</span><br><span class="line">    &lt;key&gt;RunAtLoad&lt;/key&gt;</span><br><span class="line">    &lt;true/&gt;</span><br><span class="line">    &lt;key&gt;ProgramArguments&lt;/key&gt;</span><br><span class="line">    &lt;array&gt;</span><br><span class="line">        &lt;string&gt;/bin/sh&lt;/string&gt;</span><br><span class="line">        &lt;string&gt;ping.sh&lt;/string&gt;</span><br><span class="line">    &lt;/array&gt;</span><br><span class="line">    &lt;key&gt;WorkingDirectory&lt;/key&gt;</span><br><span class="line">    &lt;string&gt;/Users/codezm&lt;/string&gt;</span><br><span class="line">		&lt;key&gt;StandardOutPath&lt;/key&gt;</span><br><span class="line">		&lt;string&gt;/tmp/com.codezm.frpc.plist.log&lt;/string&gt;</span><br><span class="line">		&lt;key&gt;StandardErrorPath&lt;/key&gt;</span><br><span class="line">		&lt;string&gt;/tmp/com.codezm.frpc.plist.log&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/plist&gt;</span><br></pre></td></tr></tbody></table></figure>

<p>创建 <code>vim /Users/codezm/ping.sh</code> 脚本文件，内容如下：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">ping_success_status</span></span>() {</span><br><span class="line">    <span class="keyword">if</span> ping -c 1 <span class="variable">$IP</span> &gt;/dev/null; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$IP</span> Ping is successful."</span></span><br><span class="line">        /Users/codezm/frp/frpc -c /Users/codezm/frp/frpc.ini</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$IP</span> Ping is failed."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">}</span><br><span class="line">IP=<span class="string">"192.168.36.254"</span></span><br><span class="line">n=1</span><br><span class="line"><span class="keyword">while</span> (( <span class="variable">$n</span> &lt;= 60 )); <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Ping <span class="variable">$n</span> times."</span></span><br><span class="line">    ping_success_status</span><br><span class="line">    sleep 1</span><br><span class="line">    (( n++ ))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></tbody></table></figure>

<p><code>frp</code> 服务需要先联网，此脚本的作用是在保证网络连通的情况下再启动 <code>frp</code> 服务。</p>
<p>执行加载命令：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 加载</span></span><br><span class="line">sudo launchctl load -w /Library/LaunchDaemons/com.codezm.frpc.plist</span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">sudo launchctl unload -w /Library/LaunchDaemons/com.codezm.frpc.plist</span><br><span class="line"><span class="comment"># 查看服务状态</span></span><br><span class="line">sudo launchctl list | grep codezm</span><br><span class="line"><span class="comment"># 会显示进程号 和 状态码, 进程号 非 - 表示启动了, 状态码 非 0 表示发生了错误</span></span><br></pre></td></tr></tbody></table></figure>

<p>执行成功后，重启电脑，在手机端通过 <code>Termius</code>  软件测试外网是否成功登陆。</p>
<h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><h5 id="挂载磁盘问题"><a href="#挂载磁盘问题" class="headerlink" title="挂载磁盘问题"></a>挂载磁盘问题</h5><p>电脑使用的是通过USB接口连接外置移动硬盘，并分成了两个分区，其中一个分区是系统盘，另一个分区主要用于区分大小写格式代码盘，即: <code>work</code>，在通过以上步骤操作部署后，再次登入系统时，发现 <code>work</code> 磁盘未自动挂载，而通过用户登录则会自动挂载改分区。这显然不是我想要的，以下是手动挂载改分区的操作步骤。</p>
<blockquote>
<p> 经测试，网上流传的，通过编辑文件 <code>sudo vim /etc/fstab</code> 增加挂载项目的方式无效，脚本如下：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo <span class="built_in">echo</span> <span class="string">"UUID=`diskutil info /dev/disk1s3 | grep "</span>Volume UUID<span class="string">" | awk '{print <span class="variable">$3</span>}'` /Volumes/work hfs rw,auto"</span> &gt;&gt; /etc/fstab</span><br></pre></td></tr></tbody></table></figure>
</blockquote>
<p>首先打开 <code>磁盘工具</code> 查看外置硬盘 <code>设备</code> 名称，然后执行以下挂载命令：</p>
<blockquote>
<p>示例中设置名是：<code>/dev/disk1s3</code>，注意更改。</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">mkdir /Volumes/work &amp;&amp; mount -t hfs /dev/disk1s3 /Volumes/work</span><br></pre></td></tr></tbody></table></figure>

<p>追加此命令至 <code>vim ping.sh</code> 文件，内容如下：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">ping_success_status</span></span>() {</span><br><span class="line">    <span class="keyword">if</span> ping -c 1 <span class="variable">$IP</span> &gt;/dev/null; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$IP</span> Ping is successful."</span></span><br><span class="line">        mkdir /Volumes/work &amp;&amp; mount -t hfs /dev/disk1s3 /Volumes/work</span><br><span class="line">        /Users/codezm/frp/frpc -c /Users/codezm/frp/frpc.ini</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$IP</span> Ping is failed."</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">}</span><br><span class="line">IP=<span class="string">"192.168.36.254"</span></span><br><span class="line">n=1</span><br><span class="line"><span class="keyword">while</span> (( <span class="variable">$n</span> &lt;= 60 )); <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Ping <span class="variable">$n</span> times."</span></span><br><span class="line">    ping_success_status</span><br><span class="line">    sleep 1</span><br><span class="line">    (( n++ ))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://www.easyulife.com/2019/11/12/%E4%BD%BF%E7%94%A8-launchd-%E5%9C%A8-macOS-%E4%B8%8B%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E6%9C%AA%E7%99%BB%E5%BD%95%E7%8A%B6%E6%80%81%E4%B8%8B%E8%87%AA%E5%90%AF%E8%BD%AF%E4%BB%B6/">使用-launchd-在-macOS-下设置开机未登录状态下自启软件</a></li>
</ul>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>MacOS</tag>
        <tag>frpc</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS快捷键</title>
    <url>/posts/MacOS/kjj.html</url>
    <content><![CDATA[<h1 id="MacOS快捷键"><a href="#MacOS快捷键" class="headerlink" title="MacOS快捷键"></a>MacOS快捷键</h1><table>
<thead>
<tr>
<th>功能</th>
<th>快捷键</th>
</tr>
</thead>
<tbody><tr>
<td>截全屏图</td>
<td>Command+Shift+3</td>
</tr>
<tr>
<td>自定义截图</td>
<td>Command+Shift+4</td>
</tr>
<tr>
<td>截屏或录屏</td>
<td>Command+Shift+5</td>
</tr>
<tr>
<td>立即锁定屏幕</td>
<td>Control + Command + Q</td>
</tr>
<tr>
<td>退出登录你的 macOS 用户账户。系统将提示你进行确认。<br>要在不确认的情况下立即退出登录，请按下 Option-Shift-Command-Q。</td>
<td>Command + Shift + Q</td>
</tr>
<tr>
<td>将最前方的窗口最小化至程序坞。</td>
<td>Command-M</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>访达</td>
<td></td>
</tr>
<tr>
<td>创建一个新文件夹</td>
<td>Shift-Command-N</td>
</tr>
<tr>
<td>推出所选磁盘或宗卷。</td>
<td>Command-E</td>
</tr>
<tr>
<td>打开“桌面”文件夹</td>
<td>Shift-Command-D</td>
</tr>
<tr>
<td>打开“最近使用”窗口，其中会显示你最近查看或更改过的所有文件。</td>
<td>Shift-Command-F</td>
</tr>
<tr>
<td>打开“前往文件夹”窗口。</td>
<td>Shift-Command-G</td>
</tr>
<tr>
<td>打开当前 macOS 用户账户的个人文件夹。</td>
<td>Shift-Command-H</td>
</tr>
<tr>
<td>打开“网络”窗口</td>
<td>Shift-Command-K</td>
</tr>
<tr>
<td>打开“下载”文件夹</td>
<td>Option-Command-L</td>
</tr>
<tr>
<td>前往上一个文件夹。</td>
<td>Command-左中括号 ([)</td>
</tr>
<tr>
<td>前往下一个文件夹。</td>
<td>Command-右中括号 (])</td>
</tr>
<tr>
<td>打开包含当前文件夹的文件夹。</td>
<td>Command-上箭头</td>
</tr>
<tr>
<td>在一个新窗口中打开包含当前文件夹的文件夹。</td>
<td>Command-Control-上箭头</td>
</tr>
<tr>
<td>打开所选项目。</td>
<td>Command-下箭头</td>
</tr>
</tbody></table>
<p><a href="https://support.apple.com/zh-cn/102650">Mac 键盘快捷键</a></p>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS设置sshd服务免密登录</title>
    <url>/posts/MacOS/8dd9e79a.html</url>
    <content><![CDATA[<h1 id="MacOS设置sshd服务免密登录"><a href="#MacOS设置sshd服务免密登录" class="headerlink" title="MacOS设置sshd服务免密登录"></a>MacOS设置sshd服务免密登录</h1><p>本篇将介绍如何使用免密证书的方式登录 MacOS 系统。</p>
<a id="more"></a>



<h2 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -c "codezm@163.com"</span><br></pre></td></tr></tbody></table></figure>



<h2 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h2><blockquote>
<p>将公钥证书安装到 <code>192.168.36.47</code> MacOS 机器。</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub codezm@192.168.36.47</span><br></pre></td></tr></tbody></table></figure>



<h2 id="确认免密登录"><a href="#确认免密登录" class="headerlink" title="确认免密登录"></a>确认免密登录</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 若私钥文件名是 id_rsa，那么 -i ~/.ssh/id_rsa 参数可省略。</span></span><br><span class="line">ssh -i ~/.ssh/id_rsa codezm@192.168.36.47</span><br><span class="line"></span><br><span class="line"><span class="comment"># 若私钥文件名不是 id_rsa，今后登录时也不想指定证书文件。</span></span><br><span class="line"><span class="comment"># 有以下两种方式：</span></span><br><span class="line"><span class="comment"># 1. 可以将私钥添加到身份验证密钥管理工具：ssh-add。之后登录就不需要指定私钥路径了。</span></span><br><span class="line">ssh-add -K id_rsa</span><br><span class="line"><span class="comment"># 2.编辑文件： ~/.ssh/config</span></span><br><span class="line">Host 192.168.36.47</span><br><span class="line">    HostName 192.168.36.47</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></tbody></table></figure>



<h2 id="关闭账号密码登录"><a href="#关闭账号密码登录" class="headerlink" title="关闭账号密码登录"></a>关闭账号密码登录</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></tbody></table></figure>

<p>向文件尾部追加以下内容：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"># 禁用密码认证</span><br><span class="line">PasswordAuthentication no</span><br><span class="line"></span><br><span class="line"># 禁用键盘交互认证</span><br><span class="line">KbdInteractiveAuthentication no</span><br><span class="line"></span><br><span class="line"># 确保启用公钥认证</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line"></span><br><span class="line"># 禁用挑战-响应认证</span><br><span class="line">ChallengeResponseAuthentication no</span><br></pre></td></tr></tbody></table></figure>



<p>重启 sshd 服务，使配置生效。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo launchctl unload /System/Library/LaunchDaemons/ssh.plist</span><br><span class="line">sudo launchctl load -w /System/Library/LaunchDaemons/ssh.plist</span><br></pre></td></tr></tbody></table></figure>



<h2 id="记录免密登录失败分析思路"><a href="#记录免密登录失败分析思路" class="headerlink" title="记录免密登录失败分析思路"></a>记录免密登录失败分析思路</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ <span class="built_in">log</span> show --predicate <span class="string">'process == "sshd"'</span> --info --last 10</span><br><span class="line"></span><br><span class="line">Filtering the <span class="built_in">log</span> data using <span class="string">"process == "</span>sshd<span class="string">""</span></span><br><span class="line">Skipping debug messages, pass --debug to include.</span><br><span class="line">Timestamp                       Thread     Type        Activity             PID    TTL</span><br><span class="line">2024-05-28 09:59:33.732102+0800 0x7ff0     Info        0x0                  6224   0    sshd: Authentication refused: bad ownership or modes <span class="keyword">for</span> directory /Volumes/work</span><br></pre></td></tr></tbody></table></figure>



<p>问题原因是由软链引起的。</p>
<blockquote>
<p>初衷是想将 .ssh 目录放到 dotfile 中由 Git 统一管理维护，但万万没想到竟然造成 sshd 无法实现免密证书登录。</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ln -s /Users/codezm/.config/dotfile/.ssh ~/.ssh</span><br><span class="line">ln -s /Volumes/work/envconfig ~/.config</span><br></pre></td></tr></tbody></table></figure>



]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS软件推荐</title>
    <url>/posts/MacOS/53e158f1.html</url>
    <content><![CDATA[<p>MacOS软件推荐</p>
<hr>
<a id="more"></a>

<h3 id="支持窗口置顶的软件"><a href="#支持窗口置顶的软件" class="headerlink" title="支持窗口置顶的软件"></a>支持窗口置顶的软件</h3><ul>
<li>Typora<ul>
<li>显示 - 保持窗口在最前端</li>
</ul>
</li>
<li>IINA<ul>
<li><code>ctrl + command + t</code></li>
</ul>
</li>
</ul>
<h3 id="实时显示键盘按键"><a href="#实时显示键盘按键" class="headerlink" title="实时显示键盘按键"></a>实时显示键盘按键</h3><ul>
<li><a href="https://github.com/keycastr/keycastr/releases">Keycastr</a> 实时显示键盘按键，Windows: <code>Carnac</code>。</li>
</ul>
<h3 id="截图、长截图、录屏"><a href="#截图、长截图、录屏" class="headerlink" title="截图、长截图、录屏"></a>截图、长截图、录屏</h3><ul>
<li><p><a href="https://apps.apple.com/cn/app/picsee-%E7%9C%8B%E5%9B%BE-%E6%88%AA%E5%9B%BE/id1454805783?mt=12">picsee</a></p>
<ul>
<li><a href="https://gitee.com/chitaner/picsee">https://gitee.com/chitaner/picsee</a></li>
<li><a href="https://chitaner.com/">https://chitaner.com/</a><ul>
<li><a href="https://apps.apple.com/cn/app/longshot-screenshot-paste/id6450262949?l=cn&amp;mt=12">Longshot</a> - 截图 &amp; 贴图</li>
<li><a href="https://apps.apple.com/cn/app/picview-%E5%9B%BE%E7%89%87%E6%B5%8F%E8%A7%88%E5%99%A8/id6452016140?mt=12">Picview</a> - 图片浏览器</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="https://apps.apple.com/cn/app/xnip-%E6%88%AA%E5%9B%BE-%E6%A0%87%E6%B3%A8/id1221250572?mt=12">xnip</a></p>
<ul>
<li><a href="https://zh.xnipapp.com/">https://zh.xnipapp.com/</a></li>
</ul>
</li>
<li><details>
  <summary><a href="https://zh.snipaste.com/">snipaste</a></summary>
  <pre>不支持OCR、无法滚动截图</pre>
  <pre>如何使用?</pre>
  <pre>  <li>
  文档：https://docs.snipaste.com/zh-cn/
  </li>
  <li>
  F1截图、F3钉图
  </li><li>
  </li><li>
  Alt取色：c复制、shift切换rbg/hex
  </li>
  </pre>
  </details>
</li>
<li><p><a href="https://apps.apple.com/cn/app/ishot-%E4%BC%98%E7%A7%80%E7%9A%84%E6%88%AA%E5%9B%BE%E5%BD%95%E5%B1%8F%E5%B7%A5%E5%85%B7/id1485844094?mt=12">iShot</a></p>
<ul>
<li>付费功能：钉图、OCR</li>
<li>免费功能：滚动截图（免费版有软件水印）、</li>
</ul>
</li>
<li><p><a href="https://v2ex.com/t/989393#reply54">PixPin</a></p>
<ul>
<li>目前仅支持Windows版</li>
</ul>
</li>
<li><p><a href="https://getsharex.com/">ShareX</a></p>
<ul>
<li>开源：<a href="https://github.com/ShareX/ShareX">https://github.com/ShareX/ShareX</a></li>
<li>仅支持Windows版 </li>
</ul>
</li>
</ul>
<h3 id="代理工具"><a href="#代理工具" class="headerlink" title="代理工具"></a>代理工具</h3><ul>
<li><p><a href="https://github.com/yanue/V2rayU/releases">v2ray</a></p>
</li>
<li><p><a href="https://github.com/yichengchen/clashX">clashX</a></p>
<ul>
<li><p>Github 使用 ssh 代理：</p>
<p>编辑 <code>~/.ssh/config</code> 文件：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"># 必须是 github.com</span><br><span class="line">Host github.com</span><br><span class="line">   HostName github.com</span><br><span class="line">   User git</span><br><span class="line">   # 走 HTTP 代理</span><br><span class="line">   # ProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport=1087</span><br><span class="line">   #</span><br><span class="line">   # 走 socks5 代理（如 Shadowsocks）</span><br><span class="line">   # ProxyCommand nc -v -x 127.0.0.1:1080 %h %p</span><br><span class="line">   # 对于Windows用户，要使用socks5代理却没有 nc 的</span><br><span class="line">   # ProxyCommand connect -S 127.0.0.1:1080 %h %p</span><br><span class="line">   # 参考：https://gist.github.com/chuyik/02d0d37a49edc162546441092efae6a1</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>Github 使用 http 代理</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">git config --global http.https://github.com.proxy.proxy http://127.0.0.1:1087</span><br><span class="line">git config --global https.https://github.com.proxy https://127.0.0.1:1087</span><br></pre></td></tr></tbody></table></figure>



</li>
</ul>
</li>
</ul>
<ul>
<li><p>Github 使用加速镜像源</p>
<ul>
<li><p>创建个人Token</p>
<p><strong>Settings =&gt; **Developer Settings</strong> =&gt; <strong>Personal Access Token</strong> =&gt; <strong>Generate New Token</strong> (Give your password) =&gt; <strong>Fillup the form（）</strong> =&gt; click <strong>Generate token</strong> =&gt; <strong>Copy the generated Token</strong></p>
</li>
<li><p>配置 Token</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">git remote set-url origin https://&lt;githubtoken&gt;@github.com/&lt;username&gt;/&lt;repositoryname&gt;.git</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>改成镜像源</p>
<ul>
<li><code>https://&lt;githubtoken&gt;@github.com.cnpmjs.org/&lt;username&gt;/&lt;repositoryname&gt;.git</code></li>
<li><code>https://&lt;githubtoken&gt;@hub.fastgit.org/&lt;username&gt;/&lt;repositoryname&gt;.git</code></li>
</ul>
</li>
</ul>
</li>
<li><p>Github raw 资源加速</p>
<p>将 <code>raw.githubusercontent.com</code> 替换为 <code>raw.staticdn.net</code> 即可加速。</p>
</li>
<li><p>Github 走hosts</p>
<blockquote>
<p>由于国内环境github的cdn不稳定导致解析失败，所以我们可以在本地host中直接指定</p>
</blockquote>
<ol>
<li><p>打开 <a href="https://ipaddress.com/">IPAddress.com</a>， 分别查询 <a href="https://github.com.ipaddress.com/#ipinfo">github.com</a> 和 <a href="https://fastly.net.ipaddress.com/github.global.ssl.fastly.net#ipinfo">github.global-ssl.fastly.net</a> 两个域名对应的IP地址。</p>
</li>
<li><p>在 <code>/etc/hosts</code> 配置文件中添加：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">140.82.113.4 github.com</span><br><span class="line">199.232.69.194 github.global-ssl.fastly.net</span><br></pre></td></tr></tbody></table></figure>

</li>
</ol>
</li>
</ul>
<h3 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h3><ul>
<li><p><a href="https://pinyin.sogou.com/mac/">搜狗输入法</a></p>
<blockquote>
<p>想要的效果是，当切换到终端时自动切换至英文输入法。之前使用的是 <a href="https://apps.apple.com/cn/app/%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2%E8%BE%93%E5%85%A5%E6%B3%95/id1470350547?mt=12">自动切换输入法</a> 应用，但只能临时试用，需付费。后来发现搜狗输入法自带这个功能，最重要的还是free！！！</p>
<p>设置方法：</p>
<ol>
<li>搜狗拼音 -&gt; 偏好设置 -&gt; 高级 -&gt; 智能输入 -&gt; 勾选 “自动切换到英文状态”。</li>
<li>在 <code>App 清单...</code> 中，添加需要切换至英文状态的应用。</li>
</ol>
</blockquote>
</li>
</ul>
<h3 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h3><ul>
<li><a href="https://www.notion.so/zh-cn">Notion</a></li>
<li><a href="https://www.wolai.com/">wolai</a></li>
<li><del><a href="https://typora.io/releases/all">Typora</a> 自 1.0.0 版本开始收费</del></li>
</ul>
<h3 id="App快速切换软件"><a href="#App快速切换软件" class="headerlink" title="App快速切换软件"></a>App快速切换软件</h3><ul>
<li><a href="https://apps.apple.com/cn/app/thor/id1120999687?mt=12">Thor</a></li>
</ul>
<h3 id="代码片段软件"><a href="#代码片段软件" class="headerlink" title="代码片段软件"></a>代码片段软件</h3><p>可以脱离任何IDE编辑器</p>
<ul>
<li><a href="https://www.renfei.org/snippets-lab/">SnippetsLab</a> <a href="https://apps.apple.com/us/app/snippetslab/id1006087419">Mac App Store</a> 是收费版，破解版： <a href="https://xclient.info/s/snippetslab.html#versions">Xclient.info</a></li>
</ul>
<h3 id="压缩、解压软件"><a href="#压缩、解压软件" class="headerlink" title="压缩、解压软件"></a>压缩、解压软件</h3><ul>
<li><a href="https://ezip.awehunt.com/">MacZip</a> 免费，更名之前是 <code>ezip</code>。</li>
<li>The Unarchiver 免费</li>
</ul>
<h3 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h3><ul>
<li>Virtual Box</li>
<li><a href="https://www.vmware.com/">VMware</a><ul>
<li><a href="http://softwareupdate.vmware.com/cds/vmw-desktop/fusion/">VMware 客户端各版本下载地址</a></li>
<li><code>ls -la /Applications/VMware\ Fusion.app/Contents/Library/isoimages/</code></li>
</ul>
</li>
</ul>
<h3 id="CPU监控工具"><a href="#CPU监控工具" class="headerlink" title="CPU监控工具"></a>CPU监控工具</h3><ul>
<li><p><a href="https://software.intel.com/content/www/us/en/develop/articles/intel-power-gadget.html">Intel Power Gadget</a></p>
<ul>
<li>待机：功率：3-5W 频率：1.4-1.8Ghz</li>
<li>触控板：功率：10W 频率：2.4-2.5Ghz</li>
</ul>
<table>
<thead>
<tr>
<th>名称</th>
<th>释义</th>
</tr>
</thead>
<tbody><tr>
<td>Power</td>
<td>当前 CPU 的功率</td>
</tr>
<tr>
<td>Frequency</td>
<td>当前 CPU 的频率</td>
</tr>
<tr>
<td>Temperature</td>
<td>当前 CPU 的温度，此温度是内核温度</td>
</tr>
<tr>
<td>Utilization</td>
<td>当前 CPU 的占用率</td>
</tr>
</tbody></table>
</li>
</ul>
<h3 id="Gif-图片制作"><a href="#Gif-图片制作" class="headerlink" title="Gif 图片制作"></a>Gif 图片制作</h3><ul>
<li><a href="https://getkap.co/">kap</a></li>
<li><del><a href="https://www.cockos.com/licecap/">licecap</a></del></li>
</ul>
<h3 id="投屏"><a href="#投屏" class="headerlink" title="投屏"></a>投屏</h3><h5 id="将-iPhone-设备屏幕投屏到-iMac，在-iMac-上观看-iPhone-上的视频"><a href="#将-iPhone-设备屏幕投屏到-iMac，在-iMac-上观看-iPhone-上的视频" class="headerlink" title="将 iPhone 设备屏幕投屏到 iMac，在 iMac 上观看 iPhone 上的视频"></a>将 iPhone 设备屏幕投屏到 iMac，在 iMac 上观看 iPhone 上的视频</h5><ul>
<li>QickTime Player<ul>
<li>仅限投屏，不能通过通过 iMac 反向操作 iPhone。</li>
<li>不支持语音同步</li>
<li>可通过蓝牙耳机连接 iPhone 听视频声音，通过蓝牙耳机播放或暂停视频。</li>
</ul>
</li>
<li>AirServer</li>
</ul>
<h6 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h6><ul>
<li><a href="https://zhuanlan.zhihu.com/p/73015222">https://zhuanlan.zhihu.com/p/73015222</a></li>
</ul>
<h4 id="效率工具"><a href="#效率工具" class="headerlink" title="效率工具"></a>效率工具</h4><ul>
<li><p><a href="https://xclient.info/s/alfred.html">Alfred5</a></p>
</li>
<li><p><a href="https://iterm2.com/">iTerm2</a></p>
<ul>
<li><h4 id="ohmysh"><a href="#ohmysh" class="headerlink" title="ohmysh"></a><a href="https://ohmyz.sh/">ohmysh</a></h4></li>
</ul>
</li>
<li><p>Microsoft Remote Desktop</p>
</li>
<li><p>FillZilla</p>
</li>
<li><p>OBS</p>
</li>
<li><p>IINA</p>
</li>
<li><p>Apifox</p>
</li>
</ul>
<h4 id="命令行无法执行脚本命令，需安装"><a href="#命令行无法执行脚本命令，需安装" class="headerlink" title="命令行无法执行脚本命令，需安装"></a>命令行无法执行脚本命令，需安装</h4><p><a href="https://developer.apple.com/download/more/">https://developer.apple.com/download/more/</a></p>
<p>下载并安装 <code>Command Line Tools for Xcode 14</code></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 安装成功后会有此目录信息</span></span><br><span class="line">ls -la /Library/Developer/CommandLineTools</span><br></pre></td></tr></tbody></table></figure>



<h4 id="nvm"><a href="#nvm" class="headerlink" title="nvm"></a>nvm</h4><p><a href="https://github.com/ineo6/nvm">nvm</a>是node版本切换工具。</p>
<h4 id="办公软件"><a href="#办公软件" class="headerlink" title="办公软件"></a>办公软件</h4><ul>
<li>微信</li>
<li>WPS Office</li>
<li>钉钉</li>
</ul>
<h2 id="Mac-软件下载网站"><a href="#Mac-软件下载网站" class="headerlink" title="Mac 软件下载网站"></a>Mac 软件下载网站</h2><ul>
<li><p><a href="https://lemon.qq.com/lab/">腾讯柠檬</a></p>
</li>
<li><p><a href="https://xclient.info/">Xclient</a></p>
</li>
<li><p><a href="https://www.better365.cn/apps.html?statId=5">https://www.better365.cn/apps.html?statId=5</a></p>
</li>
<li><p><a href="https://macwk.com/">https://macwk.com/</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows-Dos命令</title>
    <url>/posts/Windows/b3fd2482.html</url>
    <content><![CDATA[<h1 id="Windows-Dos命令"><a href="#Windows-Dos命令" class="headerlink" title="Windows-Dos命令"></a>Windows-Dos命令</h1><h3 id="切换磁盘"><a href="#切换磁盘" class="headerlink" title="切换磁盘"></a>切换磁盘</h3><figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Administrator</span>&gt;<span class="title">d</span>:</span></span><br><span class="line"><span class="function"><span class="title">D</span>:&gt;</span></span><br></pre></td></tr></tbody></table></figure>



<h3 id="查看当前目录下所有的文件和目录"><a href="#查看当前目录下所有的文件和目录" class="headerlink" title="查看当前目录下所有的文件和目录"></a>查看当前目录下所有的文件和目录</h3><figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function">D:&gt; <span class="title">dir</span></span></span><br></pre></td></tr></tbody></table></figure>



<h3 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h3><figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function">D:&gt; <span class="title">md</span> <span class="title">java</span></span></span><br></pre></td></tr></tbody></table></figure>



<h3 id="切换文件夹"><a href="#切换文件夹" class="headerlink" title="切换文件夹"></a>切换文件夹</h3><figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function">D:&gt; <span class="title">cd</span> <span class="title">java</span></span></span><br><span class="line"><span class="function"><span class="title">D</span>:\<span class="title">java</span>&gt; <span class="title">cd</span>..</span></span><br><span class="line"><span class="function"><span class="title">D</span>:&gt; <span class="title">cd</span>..</span></span><br><span class="line"><span class="function"><span class="title">D</span>:&gt; <span class="title">cd</span> <span class="title">java</span></span></span><br><span class="line"><span class="function"><span class="title">D</span>:\<span class="title">java</span>&gt; <span class="title">cd</span>/</span></span><br><span class="line"><span class="function"><span class="title">D</span>:&gt;</span></span><br></pre></td></tr></tbody></table></figure>



<h3 id="写创建文件"><a href="#写创建文件" class="headerlink" title="写创建文件"></a>写创建文件</h3><figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> name:Tom,age:<span class="number">12</span>&gt;<span class="number">1</span>.doc</span><br></pre></td></tr></tbody></table></figure>



<h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">del</span> <span class="number">1</span>.doc</span><br><span class="line"># 删除所有以 .txt 为结尾的文件</span><br><span class="line"><span class="built_in">del</span> *.txt</span><br></pre></td></tr></tbody></table></figure>



<h3 id="删除文件夹-remove-directory"><a href="#删除文件夹-remove-directory" class="headerlink" title="删除文件夹 remove directory"></a>删除文件夹 <code>remove directory</code></h3><figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line"># 删除空目录</span><br><span class="line"><span class="built_in">rd</span> java-empty</span><br><span class="line"></span><br><span class="line"># 删除非空目录</span><br><span class="line"><span class="built_in">del</span> java</span><br><span class="line"><span class="built_in">rd</span> java</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Dos</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows-Web开发环境部署</title>
    <url>/posts/Windows/d4656774.html</url>
    <content><![CDATA[<p>Windows-Web开发环境部署</p>
<hr>
<a id="more"></a>

<h5 id="扩展-dll"><a href="#扩展-dll" class="headerlink" title="扩展 dll"></a>扩展 dll</h5><p><a href="https://windows.php.net/downloads/releases/archives/">https://windows.php.net/downloads/releases/archives/</a></p>
<h5 id="memcache"><a href="#memcache" class="headerlink" title="memcache"></a>memcache</h5><h6 id="下载扩展库的dll"><a href="#下载扩展库的dll" class="headerlink" title="下载扩展库的dll"></a>下载扩展库的dll</h6><ul>
<li>PHP &lt; 7.0 ：<a href="http://pecl.php.net/package/memcache/3.0.8/windows">http://pecl.php.net/package/memcache/3.0.8/windows</a></li>
<li>PHP &gt;= 7.0 ：<a href="https://github.com/nono303/PHP7-memcache-dll">https://github.com/nono303/PHP7-memcache-dll</a></li>
</ul>
<h6 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h6><ul>
<li><a href="https://www.luoluolzb.cn/articles/77/installing-memcache-extension-of-php-under-windows">Windows下安装PHP的memcache扩展</a></li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10自定义右键菜单</title>
    <url>/posts/Windows/4bd4e2a3.html</url>
    <content><![CDATA[<h3 id="Windows10自定义右键菜单"><a href="#Windows10自定义右键菜单" class="headerlink" title="Windows10自定义右键菜单"></a>Windows10自定义右键菜单</h3><p>将以添加 <code>git/bash.exe</code> 为例，因为我本机使用的是 git 解压缩纯净版本，并未自动添加至右键菜单中。</p>
<p>使用 <code>Win + r</code> 打开命令行工具，输入 <code>regedit</code> 打开注册表编辑器。在右侧文件树中以此查找 <code>HKEY_CLASSES_ROOT\Directory</code>。</p>
<a id="more"></a>

<h4 id="添加-Git-Bash-Here-至右键空白处菜单中"><a href="#添加-Git-Bash-Here-至右键空白处菜单中" class="headerlink" title="添加 Git Bash Here 至右键空白处菜单中"></a>添加 <code>Git Bash Here</code> 至右键空白处菜单中</h4><p>在 <code>HKEY_CLASSES_ROOT\Directory\Background\shell</code> 目录下新建项并命名为 <code>Git Bash Here</code>。</p>
<p>为右键菜单 <code>Git Bash Here</code> 增加图标：在右侧空白处右击 <code>新建 -&gt; 字符串值</code> 输入 <code>Icon</code> ，设置数据值为 <code>E:\development_tools\Git-2.33.1\git-bash.exe</code>。</p>
<p>再在 <code>Git Bash Here</code> 项下新建项为 <code>command</code>， 双击右侧的 <code>默认</code> 项，设置数据值为 <code>E:\development_tools\Git-2.33.1\bin\bash.exe</code>。</p>
<h4 id="添加-Git-Bash-Here-至右键文件夹菜单中"><a href="#添加-Git-Bash-Here-至右键文件夹菜单中" class="headerlink" title="添加 Git Bash Here 至右键文件夹菜单中"></a>添加 <code>Git Bash Here</code> 至右键文件夹菜单中</h4><p>在 <code>HKEY_CLASSES_ROOT\Directory\shell</code> 目录下新建项并命名为 <code>Git Bash Here</code>。</p>
<p>为右键菜单 <code>Git Bash Here</code> 增加图标：在右侧空白处右击 <code>新建 -&gt; 字符串值</code> 输入 <code>Icon</code> ，设置数据值为 <code>E:\development_tools\Git-2.33.1\git-bash.exe</code>。</p>
<p>再在 <code>Git Bash Here</code> 项下新建项为 <code>command</code>， 双击右侧的 <code>默认</code> 项，设置数据值为 <code>E:\development_tools\Git-2.33.1\bin\bash.exe</code>。</p>
<h4 id="将-Git-工具添加至系统环境变量"><a href="#将-Git-工具添加至系统环境变量" class="headerlink" title="将  Git 工具添加至系统环境变量"></a>将  Git 工具添加至系统环境变量</h4><ol>
<li><p>桌面右击 <code>我的电脑</code> 选择 <code>属性</code>。</p>
</li>
<li><p>点击 <code>高级系统设置</code> ，打开 <code>系统设置</code> 选项卡。</p>
</li>
<li><p>点击 <code>环境变量</code> ，打开 <code>环境变量</code> 选项卡。</p>
</li>
<li><p>选中 <code>Path</code> 环境变量（默认已选中），点击 <code>编辑</code> 按钮， 打开 <code>编辑环境变量</code> 选项卡。</p>
</li>
<li><p>点击 <code>新建</code> 按钮，输入 Git 安装目录中的 bin 目录路径：<code>E:\development_tools\Git-2.33.1\bin</code>，点击 <code>确定</code> 按钮。</p>
</li>
<li><p>最后，关闭已打开的选项卡。</p>
</li>
<li><p>验证：<code>Win + r</code> 打开命令行工具，输入 <code>cmd</code> ，打开命令窗口，输入 <code>bash</code> 切换至 bash 命令。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10远程开关机</title>
    <url>/posts/uncategorized/eaf83685.html</url>
    <content><![CDATA[<h1 id="Windows10远程开关机"><a href="#Windows10远程开关机" class="headerlink" title="Windows10远程开关机"></a>Windows10远程开关机</h1><a id="more"></a>

<h2 id="BIOS-配置"><a href="#BIOS-配置" class="headerlink" title="BIOS 配置"></a>BIOS 配置</h2><p><code>SETTTINGS</code> -&gt; <code>高级</code> -&gt;  唤醒事件设置<code>-&gt; 将</code>PCIE设备唤醒<code>和</code>网络唤醒<code>设置为</code>允许<code> (Enable)，</code>F10` 保存重启。</p>
<h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><ol>
<li><p>打开 <code>设备管理器</code></p>
<p>右击 <code>我的电脑</code> -&gt; <code>属性</code> -&gt; <code>设备管理器</code>。</p>
<p>在设备驱动管理器中，找到 <code>网络适配器</code> ，在第一个驱动 <code>右键</code> -&gt; <code>属性</code>。</p>
</li>
<li><p>在 <code>高级</code> 菜单中的属性找到 <code>Wake on magic packet when system </code> 设置为 <code>启用</code>。</p>
</li>
</ol>
<p>   <img data-src="eaf83685/image-20210416074301453.png" alt="image-20210416074301453"></p>
<ol start="3">
<li><p>在 <code>电源管理</code> 中 <code>勾选</code> <code>允许此设备唤醒计算机</code></p>
<p><img data-src="eaf83685/image-20210416074327990.png" alt="image-20210416074327990"></p>
</li>
<li><p>关闭 <code>启用快速启动</code></p>
<ol>
<li><p>右击 <code>Windows 图标</code> -&gt; <code>电源选项</code>，点击 <code>其他电源设置</code>。</p>
<p><img data-src="eaf83685/image-20210416074851819.png" alt="image-20210416074851819"></p>
</li>
</ol>
</li>
</ol>
<pre><code>  ![image-20210416074612532](eaf83685/image-20210416074612532.png)



  ![image-20210416074537417](eaf83685/image-20210416074537417.png)</code></pre>
<ol start="2">
<li><p><code>选择电源按钮功能</code> -&gt; <code>更改当前不可用的设置</code> -&gt; 取消勾选 <code>启用快速启动(推荐)</code>。</p>
<p><img data-src="eaf83685/image-20210416074514982.png" alt="image-20210416074514982"></p>
</li>
</ol>
<pre><code>  ![image-20210416074430178](eaf83685/image-20210416074430178.png)</code></pre>
<h3 id="开启远程桌面"><a href="#开启远程桌面" class="headerlink" title="开启远程桌面"></a>开启远程桌面</h3><ol>
<li><p>右击 <code>我的电脑</code> -&gt; <code>属性</code> -&gt; <code>远程设置</code></p>
</li>
<li><p>在 <code>远程桌面</code> 配置栏中，勾选 <code>允许远程连接到此计算机</code>，点击 <code>确定</code> 按钮。</p>
<p>说明：默认即可使用管理员账号和密码远程桌面此计算机了，也通过 <code>选择用户</code> 添加指定账户，设置登录远程桌面账号。</p>
</li>
</ol>
<p><img data-src="eaf83685/image-20210416074152081.png" alt="image-20210416074152081"></p>
<h2 id="windows10-休眠后无法唤醒"><a href="#windows10-休眠后无法唤醒" class="headerlink" title="windows10 休眠后无法唤醒"></a>windows10 休眠后无法唤醒</h2><p>右键单击【此电脑】，选择【管理】<br>在左边点开【设备管理器】，然后在右边找到【系统设备】，下拉内容中右键单击【Intel Management Engine Interface】，选择【属性】。</p>
<p>在属性对话框中，切换选项卡到【电源管理】项上，取消勾选【允许计算机关闭此设备以节约电源】后系统在休眠后就可以正确的唤醒了。</p>
<p><img data-src="eaf83685/841693-20181112225139291-1379148903.png" alt="img"></p>
<h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="https://www.cnblogs.com/chenmingjun/p/9949979.html">https://www.cnblogs.com/chenmingjun/p/9949979.html</a></li>
</ul>
]]></content>
      <tags>
        <tag>Windows10</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10连接smb服务</title>
    <url>/posts/Windows/a69089f3.html</url>
    <content><![CDATA[<p>Windows10连接smb服务</p>
<hr>
<a id="more"></a>

<p>windows 若要连接非445端口的smb服务，需在本地转发445端口。</p>
<h4 id="查看-445-端口占用情况"><a href="#查看-445-端口占用情况" class="headerlink" title="查看 445 端口占用情况"></a>查看 445 端口占用情况</h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">netstat -nao | findstr 445</span><br></pre></td></tr></tbody></table></figure>

<h4 id="禁用-Windows-共享服务"><a href="#禁用-Windows-共享服务" class="headerlink" title="禁用 Windows 共享服务"></a>禁用 Windows 共享服务</h4><p>Windows 共享服务的显示名称为 <code>Server</code>，实际服务名为 <code>LanmanServer</code>；</p>
<p>开始 -&gt; 运行 -&gt; <code>services.msc</code> 禁用以下两个服务：</p>
<ul>
<li>Computer Browser</li>
<li>Server</li>
</ul>
<p>也可以使用命令行方式禁用共享服务：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sc config Browser start= disabled</span><br><span class="line">sc stop Browser</span><br><span class="line"></span><br><span class="line">sc config LanmanServer start= disabled</span><br><span class="line">sc stop LanmanServer</span><br></pre></td></tr></tbody></table></figure>

<p>若禁用后还是有监听 445 端口，需重启电脑。</p>
<h3 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h3><h4 id="查看所有转发列表"><a href="#查看所有转发列表" class="headerlink" title="查看所有转发列表"></a>查看所有转发列表</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">netsh interface portproxy show all</span><br></pre></td></tr></tbody></table></figure>

<h4 id="添加端口转发"><a href="#添加端口转发" class="headerlink" title="添加端口转发"></a>添加端口转发</h4><p>在 192.168.1.8 主机上，执行以下命令。将访问 192.168.1.8:14941 的请求转发到 192.168.1.118:1494 上。</p>
<figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">netsh interface portproxy add v4tov4 listenaddress=127.0.0.1 listenport=8848 connectaddress=192.168.1.118 connectport=1494</span><br></pre></td></tr></tbody></table></figure>

<h4 id="删除端口转发"><a href="#删除端口转发" class="headerlink" title="删除端口转发"></a>删除端口转发</h4><figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">netsh interface portproxy delete v4tov4 listenaddress=192.168.1.8 listenport=14941</span><br></pre></td></tr></tbody></table></figure>

<h4 id="查看端口转发规则"><a href="#查看端口转发规则" class="headerlink" title="查看端口转发规则"></a>查看端口转发规则</h4><figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">netsh interface portproxy show v4tov4</span><br></pre></td></tr></tbody></table></figure>

<h4 id="查找端口占用的应用程序"><a href="#查找端口占用的应用程序" class="headerlink" title="查找端口占用的应用程序"></a>查找端口占用的应用程序</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">netstat -ano | findstr <span class="string">"80"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找PID: 9088</span></span><br><span class="line">tasklist|findstr <span class="string">"9088"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 结束进程PID:9088</span></span><br><span class="line">taskkill /T /F /PID 9088 </span><br></pre></td></tr></tbody></table></figure>

<h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="访问smb服务"><a href="#访问smb服务" class="headerlink" title="访问smb服务"></a>访问smb服务</h4><p>在文件管理器地址栏中输入：<code>\\127.0.0.1</code> 即可。</p>
<h4 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h4><ul>
<li><a href="https://www.zhihu.com/question/59814912">https://www.zhihu.com/question/59814912</a></li>
<li><a href="https://www.cnblogs.com/niewd/p/10948803.html">https://www.cnblogs.com/niewd/p/10948803.html</a></li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>smb</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows系统常用快捷键</title>
    <url>/posts/Windows/kjj.html</url>
    <content><![CDATA[<h1 id="Windows系统常用快捷键"><a href="#Windows系统常用快捷键" class="headerlink" title="Windows系统常用快捷键"></a>Windows系统常用快捷键</h1><table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>win</td>
<td>打开开始屏幕</td>
</tr>
<tr>
<td>win+r</td>
<td>打开运行窗口</td>
</tr>
<tr>
<td>win+d</td>
<td>快速回桌面</td>
</tr>
<tr>
<td>win+i</td>
<td>设置</td>
</tr>
<tr>
<td>win+e</td>
<td>资源管理器，类似我的电脑</td>
</tr>
<tr>
<td>win+l</td>
<td>快速锁屏</td>
</tr>
<tr>
<td>win+s</td>
<td>快速小娜搜索，比浏览器查百度好多了</td>
</tr>
<tr>
<td>win+p</td>
<td>映射</td>
</tr>
<tr>
<td>win+tab</td>
<td>多工作区域切换</td>
</tr>
<tr>
<td>win+pause</td>
<td>电脑信息</td>
</tr>
<tr>
<td>win+x</td>
<td>快捷菜单</td>
</tr>
<tr>
<td>win+prtsc</td>
<td>全屏截图 截图在资源管理器图片</td>
</tr>
<tr>
<td>win+shift+s</td>
<td>win10最骚截图功能</td>
</tr>
<tr>
<td>ctrl+p</td>
<td>快速打印，甚至网页内容都可以打印</td>
</tr>
<tr>
<td>ctrl+alt+delete</td>
<td>任务管理器，系统软中断</td>
</tr>
<tr>
<td>shift+delete</td>
<td>彻底删除</td>
</tr>
<tr>
<td>alt+tab</td>
<td>任务切换</td>
</tr>
<tr>
<td>f1</td>
<td>windows应用程序帮助页面</td>
</tr>
<tr>
<td>f2</td>
<td>快速重命名</td>
</tr>
<tr>
<td>f3</td>
<td>资源管理器内快速搜索文件</td>
</tr>
<tr>
<td>f4</td>
<td>资源管理器中显示地址列表</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>以下功能全部基于win+r</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>cmd</td>
<td>命令提示符</td>
</tr>
<tr>
<td>winver</td>
<td>windows版本信息</td>
</tr>
<tr>
<td>calc</td>
<td>计算器</td>
</tr>
<tr>
<td>dxdiag</td>
<td>dx检测工具</td>
</tr>
<tr>
<td>mspaint</td>
<td>画图</td>
</tr>
<tr>
<td>msconfig</td>
<td>修改启动引导</td>
</tr>
<tr>
<td>regedit</td>
<td>注册表编辑器</td>
</tr>
<tr>
<td>gpedit.msc</td>
<td>策略组编辑器</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows软件推荐</title>
    <url>/posts/Windows/22dee00c.html</url>
    <content><![CDATA[<h1 id="Windows软件推荐"><a href="#Windows软件推荐" class="headerlink" title="Windows软件推荐"></a>Windows软件推荐</h1><a id="more"></a>

<h4 id="Wox"><a href="#Wox" class="headerlink" title="Wox"></a>Wox</h4><p>Windows 平台下的启动器，类似于 <code>MacOS</code> 平台的 <code>Alfred</code>。</p>
<ul>
<li><a href="https://github.com/Wox-launcher/Wox">https://github.com/Wox-launcher/Wox</a></li>
<li>插件，安装示例：<code>wpm install/uninstal</code><ul>
<li>有道翻译</li>
</ul>
</li>
<li>搜索<ul>
<li>谷歌：<code>g hello</code></li>
<li>百度：<code>bd 你好</code></li>
</ul>
</li>
</ul>
<h4 id="代理软件"><a href="#代理软件" class="headerlink" title="代理软件"></a>代理软件</h4><ul>
<li><a href="https://github.com/Fndroid/clash_for_windows_pkg">https://github.com/Fndroid/clash_for_windows_pkg</a></li>
</ul>
<h4 id="IETester"><a href="#IETester" class="headerlink" title="IETester"></a>IETester</h4><p>使用系统环境：WinXP/Vista/Win7/Win8</p>
<ul>
<li><a href="https://www.my-debugbar.com/wiki/IETester/HomePage">https://www.my-debugbar.com/wiki/IETester/HomePage</a></li>
<li><a href="https://www.debugbar.com/softwaredata/install-debugbar-v7.5.1.exe">https://www.debugbar.com/softwaredata/install-debugbar-v7.5.1.exe</a> debugbar是一个插件，安装后可以查看ie不支持哪些语法，便于调试。</li>
<li><a href="http://www.my-debugbar.com/ietester/install-ietester-v0.5.4.exe">http://www.my-debugbar.com/ietester/install-ietester-v0.5.4.exe</a></li>
</ul>
<h4 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h4><ul>
<li><a href="https://github.com/electerm/electerm">electerm</a></li>
</ul>
<h4 id="PDF阅读器"><a href="#PDF阅读器" class="headerlink" title="PDF阅读器"></a>PDF阅读器</h4><ul>
<li><a href="https://www.foxitsoftware.cn/pdf-reader/">福昕阅读器</a></li>
</ul>
<h4 id="编码工具"><a href="#编码工具" class="headerlink" title="编码工具"></a>编码工具</h4><h5 id="纯文本编辑器"><a href="#纯文本编辑器" class="headerlink" title="纯文本编辑器"></a>纯文本编辑器</h5><ul>
<li><p>记事本</p>
</li>
<li><p>UltraEdit</p>
</li>
<li><p>TextPad</p>
</li>
<li><p><a href="https://www.editplus.com/">EditPlus</a></p>
</li>
<li><p><a href="https://notepad-plus-plus.org/">Notepad++</a></p>
</li>
<li><p><a href="http://www.sublimetext.com/">Sublime Text</a></p>
</li>
<li><p><a href="https://code.visualstudio.com/">Virtual Studio Code</a></p>
</li>
</ul>
<h5 id="集成开发环境（Integrated-Development-Environment）"><a href="#集成开发环境（Integrated-Development-Environment）" class="headerlink" title="集成开发环境（Integrated Development Environment）"></a>集成开发环境（<strong>I</strong>ntegrated <strong>D</strong>evelopment <strong>E</strong>nvironment）</h5><ul>
<li>Eclipse - IBM (免费版)</li>
<li><a href="www.myeclipsecn.com">MyEclipse</a> (免费版、收费版)</li>
<li><a href="https://www.jetbrains.com/zh-cn/idea/">IntelliJ IDEA</a> - JetBrains</li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Atom</title>
    <url>/posts/Atom/80724a45.html</url>
    <content><![CDATA[<h1 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a>Atom</h1><p>查看是否有安装插件终端执行<code>apm ls</code></p>
<p>命令行安装插件<br>cd ~/.atom/packages<br><a href="https://atom.io/packages">atom安装包搜索页</a><br>git clone <a href="https://github.com/gepoch/vim-surround.git">https://github.com/gepoch/vim-surround.git</a></p>
<p>cd vim-surround<br>apm install</p>
<p>也可在<code>~/.atom/packages</code>目录下执行<code>apm install vim-surround</code></p>
<p>vim ~/.atom/.apmrc<br>registry = <a href="https://registry.npmmirror.com/">https://registry.npmmirror.com</a></p>
]]></content>
      <categories>
        <category>Atom</category>
      </categories>
      <tags>
        <tag>Atom</tag>
        <tag>编码工具</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA快捷键</title>
    <url>/posts/IDEA/kjj.html</url>
    <content><![CDATA[<h3 id="IDEA-快捷键"><a href="#IDEA-快捷键" class="headerlink" title="IDEA 快捷键"></a>IDEA 快捷键</h3><table>
<thead>
<tr>
<th>功能</th>
<th>MacOS快捷键</th>
<th>Windows快捷键</th>
</tr>
</thead>
<tbody><tr>
<td>选择要粘贴的内容</td>
<td>⇧⌘V</td>
<td>Shift+Ctrl+V</td>
</tr>
<tr>
<td>使用 Hippie 补全</td>
<td>⌥/</td>
<td>Alt+/</td>
</tr>
<tr>
<td>重新格式化代码</td>
<td>⌥⌘L</td>
<td>Ctrl+Alt+L</td>
</tr>
<tr>
<td>按文件结构导航</td>
<td>⌘F12</td>
<td>Ctrl+F12</td>
</tr>
<tr>
<td>选择多次出现的内容</td>
<td>⌃G</td>
<td>Alt+J</td>
</tr>
<tr>
<td>移动行</td>
<td>⌘⇧↑/↓</td>
<td>Alt +Shift+↑/↓</td>
</tr>
<tr>
<td>复制行</td>
<td>⌘D</td>
<td>Ctrl+D</td>
</tr>
<tr>
<td>添加助记书签</td>
<td>⌥ F3</td>
<td>Ctrl+F11</td>
</tr>
<tr>
<td>更改视图模式</td>
<td>^`</td>
<td>Ctrl+`</td>
</tr>
<tr>
<td>转到行:列</td>
<td>⌘L</td>
<td>Ctrl+G</td>
</tr>
<tr>
<td>收起和展开代码块</td>
<td>⌘-/+</td>
<td>Ctrl -/+</td>
</tr>
<tr>
<td>生成变量</td>
<td>⌥+Enter</td>
<td></td>
</tr>
<tr>
<td>显示 “Generate” 菜单</td>
<td>⌘+N</td>
<td></td>
</tr>
</tbody></table>
<h3 id="MacOS-键盘符号与修饰键对应关系"><a href="#MacOS-键盘符号与修饰键对应关系" class="headerlink" title="MacOS 键盘符号与修饰键对应关系"></a>MacOS 键盘符号与修饰键对应关系</h3><table>
<thead>
<tr>
<th>键盘符号</th>
<th>修饰键说明</th>
</tr>
</thead>
<tbody><tr>
<td>⌥</td>
<td>Option</td>
</tr>
<tr>
<td>⇧</td>
<td>Shift</td>
</tr>
<tr>
<td>⌃</td>
<td>Ctrl</td>
</tr>
<tr>
<td>⌘</td>
<td>Command</td>
</tr>
<tr>
<td>⇥</td>
<td>Tab 右制表符</td>
</tr>
<tr>
<td>⇤</td>
<td>Shift+Tab 左制表符</td>
</tr>
</tbody></table>
<ul>
<li><a href="https://www.jianshu.com/p/f46a5f5dfed7">Mac键盘符号和修饰键说明</a></li>
</ul>
<p>参考</p>
<ul>
<li><a href="https://blog.jetbrains.com/zh-hans/idea/2022/11/intellij-idea-3/">IntelliJ IDEA 中最被低估的快捷键</a></li>
<li><a href="https://gist.github.com/zchee/9c78f91cc5ad771c1f5d">https://gist.github.com/zchee/9c78f91cc5ad771c1f5d</a></li>
<li><a href="https://github.com/liuchengxu/dotfiles/blob/master/ideavimrc">https://github.com/liuchengxu/dotfiles/blob/master/ideavimrc</a></li>
</ul>
]]></content>
      <categories>
        <category>IDEA</category>
      </categories>
      <tags>
        <tag>编码工具</tag>
        <tag>IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA插件</title>
    <url>/posts/IDEA/ee604b16.html</url>
    <content><![CDATA[<h2 id="IDEA插件"><a href="#IDEA插件" class="headerlink" title="IDEA插件"></a>IDEA插件</h2><h4 id="Vuesion-Theme"><a href="#Vuesion-Theme" class="headerlink" title="Vuesion Theme"></a>Vuesion Theme</h4><p>皮肤</p>
<h4 id="Atom-Material-Icons"><a href="#Atom-Material-Icons" class="headerlink" title="Atom Material Icons"></a>Atom Material Icons</h4><p>给不同文件添加 icon 图标。</p>
<h4 id="File-Expander"><a href="#File-Expander" class="headerlink" title="File Expander"></a>File Expander</h4><p>在 idea 里面直接打开 Jar包，反编译进行查看，还能查看 tar 包、gz包、zip包</p>
<h4 id="GitToolBox"><a href="#GitToolBox" class="headerlink" title="GitToolBox"></a>GitToolBox</h4><p>提示有哪些文件没有commit，远程有多少个文件没有更新，在每一行代码上提示上次提交的时间。</p>
<h4 id="Maven-Helper"><a href="#Maven-Helper" class="headerlink" title="Maven Helper"></a>Maven Helper</h4><p>排查Jar包的依赖问题。提供了快捷指令，右键直接打开maven的指令。</p>
<h4 id="arthas-idea"><a href="#arthas-idea" class="headerlink" title="arthas idea"></a>arthas idea</h4><p>诊断线上Java工具。右键点击arthas的命令，选择一下即可自动生成命令。</p>
]]></content>
      <categories>
        <category>IDEA</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode快捷键</title>
    <url>/posts/VSCode/kjj.html</url>
    <content><![CDATA[<h1 id="VSCode快捷键"><a href="#VSCode快捷键" class="headerlink" title="VSCode快捷键"></a>VSCode快捷键</h1><table>
<thead>
<tr>
<th>功能</th>
<th>MacOS快捷键</th>
<th>Windows快捷键</th>
</tr>
</thead>
<tbody><tr>
<td>打开命令面板</td>
<td>Shift+Command+P</td>
<td><em>Ctrl</em>+<em>Shift</em>+<em>P</em></td>
</tr>
<tr>
<td>显示可用的代码修复/操作建议</td>
<td>Command+.</td>
<td>Ctrl + .</td>
</tr>
<tr>
<td>将当前行上移或下移</td>
<td>Alt + ↑ 或 Alt + ↓</td>
<td></td>
</tr>
<tr>
<td>在打开的文件之间切换</td>
<td>Ctrl + tab</td>
<td></td>
</tr>
<tr>
<td>快速导航到符号（类、方法、变量等）</td>
<td>Shift+Command+O</td>
<td>Ctrl + Shift + O</td>
</tr>
<tr>
<td>在整个工作区查找</td>
<td>Command + Shift + F</td>
<td>Ctrl + Shift + F</td>
</tr>
<tr>
<td>在整个工作区替换</td>
<td>Command + Shift + H</td>
<td>Ctrl + Shift + H</td>
</tr>
<tr>
<td>启动或继续调试</td>
<td>F5</td>
<td></td>
</tr>
<tr>
<td>停止调试</td>
<td>Shift + F5</td>
<td></td>
</tr>
<tr>
<td>切换集成终端</td>
<td>Ctrl + `</td>
<td></td>
</tr>
</tbody></table>
<a id="more"></a>

<h4 id="Bookmarks插件快捷键"><a href="#Bookmarks插件快捷键" class="headerlink" title="Bookmarks插件快捷键"></a>Bookmarks插件快捷键</h4><table>
<thead>
<tr>
<th>功能</th>
<th>MacOS快捷键</th>
<th>Windows快捷键</th>
</tr>
</thead>
<tbody><tr>
<td>创建或消除书签</td>
<td>Command+Option+K</td>
<td>Ctrl+alt+K</td>
</tr>
<tr>
<td>跳转到前一个书签</td>
<td>Command+Option+J</td>
<td>Ctrl+alt+J</td>
</tr>
<tr>
<td>跳转到后一个书签</td>
<td>Command+Option+L</td>
<td>Ctrl+alt+L</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>VSCode</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Virtual Studio Code 配置</title>
    <url>/posts/VSCode/37714644.html</url>
    <content><![CDATA[<h2 id="Virtual-Studio-Code-Setup"><a href="#Virtual-Studio-Code-Setup" class="headerlink" title="Virtual Studio Code Setup"></a>Virtual Studio Code Setup</h2><p>vscode 提供了两种设置方式：</p>
<ul>
<li><strong>User Settings（用户设置）</strong>：全局设置，对任意一个运行的 VS Code 都会起作用。</li>
<li><strong>Workspace Settings（项目设置）</strong>：只对当前项目的设置。</li>
</ul>
<blockquote>
<p> Workspace Settings 会覆盖 User Settings。</p>
</blockquote>
<p>打开用户设置和项目设置的方法如下：</p>
<ul>
<li>Windows/Linux： <code>File &gt; Preferences &gt; Settings</code></li>
<li>macOS：<code>Code &gt; Preferences &gt; Settings</code></li>
</ul>
<p>或直接通过命令行面板（**<code>Ctrl/Command+Shift+P</code>**）输入 <code>Open Settings (JSON)</code> 进行调出</p>
<p>vscode 中的 <strong>设置选项</strong> 都配置在一个 <code>settings.json</code> 文件中。<br> 其中，<em>用户设置（User Settings）</em> 的路径为：</p>
<ul>
<li>Windows <code>%APPDATA%\Code\User\settings.json</code></li>
<li>macOS <code>$HOME/Library/Application Support/Code/User/settings.json</code></li>
<li>Linux <code>$HOME/.config/Code/User/settings.json</code></li>
</ul>
<p>而 <em>项目设置（Workspace Settings）</em> 的路径为：根目录下的 <code>.vscode</code> 中。</p>
<a id="more"></a>

<h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><table>
<thead>
<tr>
<th>Marketplace</th>
<th>Repository</th>
<th>功能描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://marketplace.visualstudio.com/items?itemName=vscodevim.vim">Vim</a></td>
<td><a href="https://github.com/VSCodeVim/Vim">https://github.com/VSCodeVim/Vim</a></td>
<td>提供了 Vim 的基础功能，<a href="https://github.com/VSCodeVim/Vim/blob/master/ROADMAP.md">ROADMAP</a>。</td>
</tr>
<tr>
<td><a href="https://marketplace.visualstudio.com/items?itemName=VSpaceCode.whichkey">Which Key</a></td>
<td><a href="https://github.com/VSpaceCode/vscode-which-key">https://github.com/VSpaceCode/vscode-which-key</a></td>
<td></td>
</tr>
<tr>
<td><a href="https://marketplace.visualstudio.com/items?itemName=bmewburn.vscode-intelephense-client">PHP Intelephense</a></td>
<td><a href="https://github.com/bmewburn/vscode-intelephense">https://github.com/bmewburn/vscode-intelephense</a></td>
<td></td>
</tr>
<tr>
<td><a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync">Settings Sync</a></td>
<td><a href="https://github.com/shanalikhan/code-settings-sync">https://github.com/shanalikhan/code-settings-sync</a></td>
<td>将配置上传到 Gist, 到另一台机器只需要 <code>Sync:Download</code> 下载配置, 就会下载插件, 自动化安装。</td>
</tr>
<tr>
<td><a href="https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio">Draw.io Integration</a></td>
<td><a href="https://github.com/hediet/vscode-drawio">https://github.com/hediet/vscode-drawio</a></td>
<td>在 vscode 中画流程图。</td>
</tr>
</tbody></table>
<h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><ul>
<li><p><code>Ctrl + Command + P</code> 打开vscode的命令框</p>
</li>
<li><p>insert模式： <code>jk</code> =&gt; <code>Esc</code> 退出到normal模式</p>
</li>
<li><p><code>&lt;leader&gt; + w</code> 保存文件</p>
</li>
<li><p>normal模式：<code>Ctrl + n</code> 关闭高亮搜索</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>功能描述</th>
<th>快捷键</th>
<th>适用模式：normal、insert、visual</th>
</tr>
</thead>
<tbody><tr>
<td>保存文件</td>
<td>leader w</td>
<td>normal</td>
</tr>
<tr>
<td>多行注释</td>
<td>leader c c</td>
<td>normal</td>
</tr>
<tr>
<td><del>删除当前行</del></td>
<td>leader d</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>多选</td>
<td><code>Ctrl + m</code></td>
<td>normal、visual</td>
</tr>
<tr>
<td>关闭高亮检索</td>
<td><code>Ctrl + n</code></td>
<td>normal</td>
</tr>
<tr>
<td>vscode命令窗口</td>
<td>;</td>
<td>normal</td>
</tr>
<tr>
<td>导航栏跳</td>
<td><code>Ctrl + hjkl</code></td>
<td>h：左侧<br>j：下方<br>k：上方<br>l：右侧</td>
</tr>
<tr>
<td>行首、行尾</td>
<td><code>H</code>、<code>L</code></td>
<td><code>H,L</code> 替代 <code>^$</code></td>
</tr>
<tr>
<td><strong>VSCode内置常用快捷键</strong></td>
<td></td>
<td></td>
</tr>
<tr>
<td>开启、关闭侧边栏</td>
<td><code>Command + B</code></td>
<td></td>
</tr>
<tr>
<td>开启、关闭终端</td>
<td>``Ctrl + ```</td>
<td></td>
</tr>
<tr>
<td>显示命令面板</td>
<td><code>Shift + Command + P</code></td>
<td></td>
</tr>
<tr>
<td>快速打开</td>
<td><code>Command + P</code></td>
<td></td>
</tr>
<tr>
<td>拆分编辑器</td>
<td><code>Command + \</code></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>模式</th>
<th>Vim 键位绑定命令</th>
<th>VSCode 键位绑定命令</th>
</tr>
</thead>
<tbody><tr>
<td>正常模式：normal</td>
<td>nmap、nnoremap</td>
<td>vim.normalModeKeyBindings、vim.normalModeKeyBindingsNonRecursive</td>
</tr>
<tr>
<td>插入模式：insert</td>
<td>imap、inoremap</td>
<td>vim.insertModeKeyBindings、vim.insertModeKeyBindingsNonRecursive</td>
</tr>
<tr>
<td>可视模式：visual</td>
<td>vmap、vnoremap</td>
<td>vim.visualModeKeyBindings、vim.visualModeKeyBindingsNonRecursive</td>
</tr>
</tbody></table>
<p>视图模式，多选</p>
<ol>
<li><code>Command + V</code> 列式多选。</li>
<li><code>Command + D</code> 或者 <code>gb</code> 进行多选，<code>c</code> + <code>要修改的文字</code>。</li>
<li><code>Option + 鼠标单击</code>，添加光标。 </li>
</ol>
<p><a href="https://github.com/tpope/vim-surround">Surround</a></p>
<p>vim 提供了 3 个基本模式：normal ， insert , visual。</p>
<p>在 normal 模式下转 insert 模式，有三种途径。</p>
<ol>
<li>a 光标之后插入 A 行尾插入。</li>
<li>i 光标之前插入 I 行首插入。</li>
<li>o 下一行插入 O 上一行插入。</li>
</ol>
<p>在 insert 模式下通过：</p>
<ul>
<li>ctrl+h 删除前一个字符</li>
<li>ctrl+w 删除前一个单词</li>
<li>ctrl+u 删除前面一行所有字符</li>
</ul>
<h4 id="Settings-Sync-配置"><a href="#Settings-Sync-配置" class="headerlink" title="Settings Sync 配置"></a>Settings Sync 配置</h4><h5 id="步骤一：生成可创建-gist-权限的token"><a href="#步骤一：生成可创建-gist-权限的token" class="headerlink" title="步骤一：生成可创建 gist 权限的token"></a>步骤一：生成可创建 <code>gist</code> 权限的token</h5><ol>
<li>登录 Github，点击用户头图，选择 <code>Settings -&gt; Developer settings -&gt; Personal access tokens</code>。</li>
<li>输入token备注，设置token过期时间，权限勾选 <code>gist</code>，点击 <code>Generate token</code> 按钮。</li>
</ol>
<h5 id="步骤二："><a href="#步骤二：" class="headerlink" title="步骤二："></a>步骤二：</h5><ol>
<li>点击用户头图，选择 <code>Your gists</code>，点击 <code>+</code> 按钮，创建一个 <code>gists</code>。</li>
<li>创建后，复制url地址栏中 <code>https://gist.github.com/{Your-github-user-name}/{gist-id}</code> {gist-id}。<code>https://gist.github.com/codezm/af60b7d911df15dc0fc5bfc20b55355e</code></li>
</ol>
<h5 id="步骤三："><a href="#步骤三：" class="headerlink" title="步骤三："></a>步骤三：</h5><ol>
<li>在 VSCode 中配置 <code>Settings Sync</code>，点击 <code>Edit CONFIGRATION</code>，输入 <code>Gist ID</code> 及 <code>Token</code> ，即可完成配置。</li>
</ol>
<h5 id="相关操作"><a href="#相关操作" class="headerlink" title="相关操作"></a>相关操作</h5><p>打开VSCode的命令框，输入 <code>Sync:</code>。</p>
<ol>
<li>上传配置：<code>Sync: Update/Upload Settings</code></li>
<li>下载配置：<code>Sync: Download Settings</code></li>
</ol>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://zhuanlan.zhihu.com/p/302568011%E3%80%81https://github.com/Imymirror/mirror-vscode%E3%80%81https://github.com/Imymirror/mirror-vscode/blob/main/cheat-sheet.md">https://zhuanlan.zhihu.com/p/302568011、https://github.com/Imymirror/mirror-vscode、https://github.com/Imymirror/mirror-vscode/blob/main/cheat-sheet.md</a></li>
<li>VSpaceCode Default Keybindings: <a href="https://vspacecode.github.io/docs/default-keybindings/">https://vspacecode.github.io/docs/default-keybindings/</a></li>
<li><a href="https://www.jianshu.com/p/21c99e461ad3">https://www.jianshu.com/p/21c99e461ad3</a></li>
<li><a href="https://juejin.cn/post/6864802520024399879">https://juejin.cn/post/6864802520024399879</a></li>
</ul>
]]></content>
      <categories>
        <category>VSCode</category>
      </categories>
      <tags>
        <tag>编码工具</tag>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>vim 使用插件篇</title>
    <url>/posts/Vim/bf56016c.html</url>
    <content><![CDATA[<h4 id="代码自动补全"><a href="#代码自动补全" class="headerlink" title="代码自动补全"></a>代码自动补全</h4><ul>
<li><p><a href="https://github.com/neoclide/coc.nvim">neoclide/coc.nvim</a></p>
<ul>
<li><p><a href="https://github.com/neoclide/coc.nvim/wiki/Using-coc-extensions#implemented-coc-extensions">编程语言扩展</a></p>
</li>
<li><p>教程</p>
<ul>
<li></li>
<li><a href="https://zhuanlan.zhihu.com/p/39302327">Coc.nvim 系列（一）： 为了更好的补全体验</a></li>
<li><a href="https://www.jianshu.com/p/cbe374491da4">coc.nvim：让 Vim 具备 VSCode 的编辑效果</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://zhuanlan.zhihu.com/p/345554183">神级编辑器 Vim 使用-插件篇</a></li>
</ul>
<h4 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h4><p>可到<a href="https://github.com/powerline/fonts">这里</a>下载powerline字体, 我使用的是<a href="https://github.com/powerline/fonts/tree/master/UbuntuMono">UbuntuMono</a>, 配合<code>vim-airline</code>使用。</p>
<h4 id="Ack-用于检索关键字"><a href="#Ack-用于检索关键字" class="headerlink" title="Ack - 用于检索关键字"></a>Ack - 用于检索关键字</h4><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">brew install ack</span><br></pre></td></tr></tbody></table></figure>



<blockquote>
<ol>
<li><p>Neovim</p>
</li>
<li><p>Vim Plug to install extensions</p>
</li>
<li><p>coc.nvim for autocompletion and imports and type definitions</p>
<ol>
<li><code>ctrl-space</code> autocompletion</li>
<li><code>gd</code> goto definition</li>
<li><code>F2</code> rename</li>
<li><code>K</code> show tooltip</li>
<li>created coc-pref.json</li>
<li>:CocInstall coc-snippets<ol>
<li>:CocCommand snippets.editSnippets</li>
</ol>
</li>
</ol>
</li>
<li><p>Gruvbox theme</p>
</li>
<li><p>yats for typescript syntax</p>
</li>
<li><p>nerdtree for file tree</p>
<ol>
<li>auto open</li>
<li>install fira font</li>
</ol>
<p>Plug ‘tsony-tsonev/nerdtree-git-plugin’ Plug ‘tiagofumo/vim-nerdtree-syntax-highlight’ Plug ‘ryanoasis/vim-devicons’</p>
</li>
<li><p>nerdcommenter</p>
<ol>
<li><code>cmd /</code> comment out code</li>
<li>(mapped to ++ so cmd / can be mapped)</li>
</ol>
</li>
<li><p>ctrlp.vim for fuzzy file finder</p>
<ol>
<li><code>cmd p</code> open</li>
</ol>
</li>
<li><p>cmd keybindings required iTerm2 remappings</p>
</li>
<li><p>vim-gitgutter tells you what lines you modified</p>
</li>
</ol>
</blockquote>
<p>参考自：<a href="https://www.notion.so/Vim-Setup-0586a2ae8466442daa293ad1297bdcd0">https://www.notion.so/Vim-Setup-0586a2ae8466442daa293ad1297bdcd0</a></p>
]]></content>
      <categories>
        <category>Vim</category>
      </categories>
      <tags>
        <tag>编码工具</tag>
        <tag>Vim</tag>
      </tags>
  </entry>
  <entry>
    <title>vim基础</title>
    <url>/posts/Vim/d16c64e7.html</url>
    <content><![CDATA[<p><img data-src="d16c64e7/vim.png"></p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><p><a href="https://zhuanlan.zhihu.com/p/143260180">VIM学习笔记 4种Magic模式</a></p>
</li>
<li><p><a href="https://zhuanlan.zhihu.com/p/55330855">Vim搜索字符转义与very magic搜索模式</a></p>
</li>
<li><p><a href="https://vimjc.com/">https://vimjc.com/</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Vim</category>
      </categories>
      <tags>
        <tag>编码工具</tag>
        <tag>Vim</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-JSON数据处理</title>
    <url>/posts/Java/95f35a88.html</url>
    <content><![CDATA[<p>Java-JSON数据处理</p>
<a id="more"></a>

<h2 id="Jackson"><a href="#Jackson" class="headerlink" title="Jackson"></a>Jackson</h2><p>Jackson使用详解: <a href="https://juejin.cn/post/6844904166809157639">https://juejin.cn/post/6844904166809157639</a></p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line">JsonNode jsonNode = objectMapper.readValue(callbackBodyStr, JsonNode.class);</span><br><span class="line">oss.setUserPort(jsonNode.get(<span class="string">"port"</span>).asInt());</span><br><span class="line">oss.setUserIp(jsonNode.get(<span class="string">"ip"</span>).asText());</span><br><span class="line">oss.setUid(jsonNode.get(<span class="string">"uid"</span>).asLong());</span><br><span class="line">oss.setImageAve(jsonNode.get(<span class="string">"imageAve"</span>).toString());</span><br><span class="line">oss.setImageInfo(jsonNode.get(<span class="string">"imageInfo"</span>).toString());</span><br><span class="line">oss.setAvinfo(jsonNode.get(<span class="string">"avinfo"</span>).toString());</span><br><span class="line">oss.setFsize(jsonNode.get(<span class="string">"fsize"</span>).asInt());</span><br><span class="line">oss.setStatus(<span class="number">10</span>);</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">//允许使用未带引号的字段名</span></span><br><span class="line">mapper.configure(Feature.ALLOW_UNQUOTED_FIELD_NAMES, <span class="keyword">true</span>);</span><br><span class="line"><span class="comment">//允许使用单引号</span></span><br><span class="line">mapper.configure(Feature.ALLOW_SINGLE_QUOTES, <span class="keyword">true</span>);</span><br><span class="line"><span class="comment">// 忽略pojo类属性中缺少的json字段</span></span><br><span class="line">objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, <span class="keyword">false</span>);</span><br></pre></td></tr></tbody></table></figure>



<h2 id="fastjson2"><a href="#fastjson2" class="headerlink" title="fastjson2"></a>fastjson2</h2><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line">Oss oss = JSONObject.parseObject(callbackBodyStr, Oss.class);</span><br><span class="line"></span><br><span class="line">JSONObject jsonObject = JSON.parseObject(callbackBodyStr);</span><br><span class="line">Oss oss = <span class="keyword">new</span> Oss();</span><br><span class="line">oss.setBucket(jsonObject.getString(<span class="string">"bucket"</span>));</span><br><span class="line">oss.setEtag(jsonObject.getString(<span class="string">"etag"</span>));</span><br><span class="line">oss.setKey(jsonObject.getString(<span class="string">"key"</span>));</span><br><span class="line">oss.setPersistentId(jsonObject.getString(<span class="string">"persistentId"</span>));</span><br><span class="line">oss.setFsize(Integer.getInteger(jsonObject.getString(<span class="string">"fsize"</span>)));</span><br><span class="line">oss.setFname(jsonObject.getString(<span class="string">"fname"</span>));</span><br><span class="line">oss.setMimeType(jsonObject.getString(<span class="string">"mimeType"</span>));</span><br><span class="line">oss.setEndUser(jsonObject.getString(<span class="string">"endUser"</span>));</span><br><span class="line"><span class="comment">//            oss.setImageAve(jsonObject.getJSONObject("imageAve").toJSONString());</span></span><br><span class="line"><span class="comment">//            oss.setImageInfo(jsonObject.getJSONObject("imageInfo").toJSONString());</span></span><br><span class="line"><span class="comment">//            oss.setAvinfo(jsonObject.getJSONObject("avinfo").toJSONString());</span></span><br><span class="line">oss.setImageAve(jsonObject.getString(<span class="string">"imageAve"</span>));</span><br><span class="line"><span class="comment">//            oss.setImageInfo(jsonObject.getString("imageInfo"));</span></span><br><span class="line">oss.setExt(jsonObject.getString(<span class="string">"ext"</span>));</span><br><span class="line">oss.setExif(jsonObject.getString(<span class="string">"exif"</span>));</span><br><span class="line">oss.setUuid(jsonObject.getString(<span class="string">"uuid"</span>));</span><br><span class="line">oss.setRemark(jsonObject.getString(<span class="string">"remark"</span>));</span><br><span class="line">oss.setUserIp(jsonObject.getString(<span class="string">"ip"</span>));</span><br><span class="line">oss.setUserPort(jsonObject.getInteger(<span class="string">"port"</span>));</span><br><span class="line">oss.setUid(jsonObject.getLong(<span class="string">"uid"</span>));</span><br><span class="line">oss.setStatus(<span class="number">10</span>);</span><br><span class="line">oss.setDomain(jsonObject.getString(<span class="string">"domain"</span>));</span><br><span class="line"></span><br><span class="line">oss.setAvinfo(JSON.toJSONString(oss.getAvinfo()));</span><br><span class="line">oss.setImageAve(JSON.toJSONString(oss.getImageAve()));</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-Stream流操作</title>
    <url>/posts/Java/f9a3d724.html</url>
    <content><![CDATA[<p>Java-Stream流操作</p>
<a id="more"></a>

<h4 id="将-list-中所有的元素转成-String-类型并以-分隔组成-String-字符串。"><a href="#将-list-中所有的元素转成-String-类型并以-分隔组成-String-字符串。" class="headerlink" title="将 list 中所有的元素转成 String 类型并以 , 分隔组成 String 字符串。"></a>将 list 中所有的元素转成 String 类型并以 <code>,</code> 分隔组成 String 字符串。</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">String s = list.stream().map(Object::toString).collect(Collectors.joining(<span class="string">","</span>));</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java接收Axios-GET请求中的数组参数</title>
    <url>/posts/Java/ccd8dc99.html</url>
    <content><![CDATA[<p>Java接收Axios-GET请求中的数组参数</p>
<hr>
<p>今天前端在发起API接口请求时提示跨域问题，但同域名其他API接口请求正常，很是奇怪。</p>
<a id="more"></a>

<h4 id="异常接口请求示例"><a href="#异常接口请求示例" class="headerlink" title="异常接口请求示例"></a>异常接口请求示例</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">/api/course/getPageList?trainCyclep[]=40&amp;scope=</span><br></pre></td></tr></tbody></table></figure>

<h4 id="1-安装-qs-库"><a href="#1-安装-qs-库" class="headerlink" title="1. 安装 qs 库"></a>1. 安装 <code>qs</code> 库</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">npm install qs</span><br></pre></td></tr></tbody></table></figure>

<h4 id="2-引用-qs-库，并修改GET请求参数中数组参数的格式"><a href="#2-引用-qs-库，并修改GET请求参数中数组参数的格式" class="headerlink" title="2. 引用 qs 库，并修改GET请求参数中数组参数的格式"></a>2. 引用 qs 库，并修改GET请求参数中数组参数的格式</h4><figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> qs = <span class="built_in">require</span>(<span class="string">'qs'</span>);</span><br><span class="line"></span><br><span class="line">axios.get(url, {</span><br><span class="line">  params,</span><br><span class="line">  paramsSerializer: <span class="function">(<span class="params">params</span>) =&gt;</span> {</span><br><span class="line">    <span class="comment">// 将数组 a[]=1&amp;a[]=2 形式改为 a=1&amp;a=2</span></span><br><span class="line">    <span class="keyword">return</span> qs.stringify(params, {<span class="attr">arrayFormat</span>: <span class="string">'repeat'</span>});</span><br><span class="line">  }</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 形式：ids=1&amp;ids=2&amp;ids=3</span></span><br><span class="line">qs.stringify({<span class="attr">ids</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]}, {<span class="attr">arrayFormat</span>: <span class="string">'repeat'</span>})</span><br><span class="line"></span><br><span class="line"><span class="comment">// 形式：ids[]=1&amp;ids[]=2&amp;ids[]=3</span></span><br><span class="line">qs.stringify({<span class="attr">ids</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]}, {<span class="attr">arrayFormat</span>: <span class="string">'brackets'</span>})</span><br><span class="line"></span><br><span class="line"><span class="comment">// 形式： ids[0]=1&amp;aids[1]=2&amp;ids[2]=3 @RequestParam无法接收</span></span><br><span class="line">qs.stringify({<span class="attr">ids</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]}, {<span class="attr">arrayFormat</span>: <span class="string">'indices'</span>})</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 List&lt;Long&gt; 和 Long[] 是没有区别的，区别在于 @RequestParam 中的参数是否加[]</span></span><br><span class="line"><span class="comment">// @RequestParam("tagIdList[]") List&lt;Long&gt; or @RequestParam("tagIdList[]") List&lt;Long&gt; 可以接收 brackets</span></span><br><span class="line"><span class="comment">// @RequestParam Long[] or @RequestParam List&lt;Long&gt; 可以接收 repeat</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://blog.csdn.net/yujin0213/article/details/88309662">https://blog.csdn.net/yujin0213/article/details/88309662</a></li>
<li><a href="https://blog.csdn.net/pifutan/article/details/86320705">https://blog.csdn.net/pifutan/article/details/86320705</a></li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Axios</tag>
        <tag>qs</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringSecurity中的鉴权注解</title>
    <url>/posts/Java/1b0c8994.html</url>
    <content><![CDATA[<p>SpringSecurity中的鉴权注解</p>
<hr>
<h3 id="注解的作用"><a href="#注解的作用" class="headerlink" title="注解的作用"></a>注解的作用</h3><ul>
<li>anonymous() 允许匿名用户访问,不允许已登入用户访问</li>
<li>permitAll() 不管登入,不登入都能访问 Always evaluates to true</li>
<li>isAnonymous(): Returns true if the current principal is an anonymous user</li>
</ul>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">@PreAuthorize("isAnonymous()")</span></span><br></pre></td></tr></tbody></table></figure>



<a id="more"></a>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot项目开发热部署</title>
    <url>/posts/Java/602c057d.html</url>
    <content><![CDATA[<p>SpringBoot项目开发热部署</p>
<a id="more"></a>



<h2 id="devtools-热部署"><a href="#devtools-热部署" class="headerlink" title="devtools 热部署"></a>devtools 热部署</h2><h4 id="1-项目中引入依赖"><a href="#1-项目中引入依赖" class="headerlink" title="1. 项目中引入依赖"></a>1. 项目中引入依赖</h4><figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- devtools 热部署 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<h4 id="2-IDEA-配置"><a href="#2-IDEA-配置" class="headerlink" title="2. IDEA 配置"></a>2. IDEA 配置</h4><p>在修改了类文件代码后，IDEA 不会自动编译，需开启 IDEA 配置。</p>
<ol>
<li>IntelliJ IDEA -&gt; Perferences -&gt; Build -&gt; Compiler：<code>Build project automatically</code></li>
<li>IntelliJ IDEA -&gt; Perferences -&gt; Advanced Settings -&gt; <code>Allow auto-make to start even if developed application is currently running</code></li>
</ol>
<h2 id="JRebel插件实现热部署"><a href="#JRebel插件实现热部署" class="headerlink" title="JRebel插件实现热部署"></a>JRebel插件实现热部署</h2><p>…</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>jar包运行时指定环境变量及systemd服务</title>
    <url>/posts/Java/c31a905b.html</url>
    <content><![CDATA[<p>jar包运行时指定环境变量及systemd服务</p>
<hr>
<a id="more"></a>

<h4 id="使用-jar-包时指定环境变量-profile"><a href="#使用-jar-包时指定环境变量-profile" class="headerlink" title="使用 jar 包时指定环境变量 profile"></a>使用 jar 包时指定环境变量 profile</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Java System Properties (VM Arguments)</span></span><br><span class="line">java -jar -Dspring.profiles.active=prod ruoyi-admin/target/ruoyi-admin.jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># Program arguments</span></span><br><span class="line">java -jar application.jar --spring.profiles.active=prod --spring.config.location=c:\config</span><br></pre></td></tr></tbody></table></figure>



<h5 id="使用mvn启动spring"><a href="#使用mvn启动spring" class="headerlink" title="使用mvn启动spring"></a>使用mvn启动spring</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">mvn spring-boot:run -Dspring-boot.run.profiles=<span class="built_in">local</span>,foo,bar</span><br></pre></td></tr></tbody></table></figure>



<h4 id="创建-systemd-服务"><a href="#创建-systemd-服务" class="headerlink" title="创建 systemd 服务"></a>创建 systemd 服务</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">yum install -y jre nginx telnet</span><br><span class="line">vim /usr/lib/systemd/system/news.service</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="comment"># 开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> news</span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">systemctl start news</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=news</span><br><span class="line">After=network.target syslog.target</span><br><span class="line">[Service]</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">Restart=always</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/data/news</span><br><span class="line">ExecStart=/usr/bin/java -jar app.jar --spring.profiles.active=prod -Xms128m -Xmx256m</span><br><span class="line">ExecStop=/usr/bin/<span class="built_in">kill</span> -15&nbsp;&nbsp;<span class="variable">$MAINPID</span></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></tbody></table></figure>



<h5 id="查看-news-服务日志"><a href="#查看-news-服务日志" class="headerlink" title="查看 news 服务日志"></a>查看 news 服务日志</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">journalctl -u news -f</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>jar包运行时指定环境变量及systemd服务</title>
    <url>/posts/Java/c31a905b.html</url>
    <content><![CDATA[<p>jar包运行时指定环境变量及systemd服务</p>
<hr>
<a id="more"></a>

<h4 id="使用-jar-包时指定环境变量-profile"><a href="#使用-jar-包时指定环境变量-profile" class="headerlink" title="使用 jar 包时指定环境变量 profile"></a>使用 jar 包时指定环境变量 profile</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Java System Properties (VM Arguments)</span></span><br><span class="line">java -jar -Dspring.profiles.active=prod ruoyi-admin/target/ruoyi-admin.jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># Program arguments</span></span><br><span class="line">java -jar application.jar --spring.profiles.active=prod --spring.config.location=c:\config</span><br></pre></td></tr></tbody></table></figure>



<h5 id="使用mvn启动spring"><a href="#使用mvn启动spring" class="headerlink" title="使用mvn启动spring"></a>使用mvn启动spring</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">mvn spring-boot:run -Dspring-boot.run.profiles=<span class="built_in">local</span>,foo,bar</span><br></pre></td></tr></tbody></table></figure>



<h4 id="创建-systemd-服务"><a href="#创建-systemd-服务" class="headerlink" title="创建 systemd 服务"></a>创建 systemd 服务</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">yum install -y jre nginx telnet</span><br><span class="line">vim /usr/lib/systemd/system/news.service</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="comment"># 开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> news</span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">systemctl start news</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=news</span><br><span class="line">After=network.target syslog.target</span><br><span class="line">[Service]</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">Restart=always</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/data/news</span><br><span class="line">ExecStart=/usr/bin/java -jar app.jar --spring.profiles.active=prod -Xms128m -Xmx256m</span><br><span class="line">ExecStop=/usr/bin/<span class="built_in">kill</span> -15&nbsp;&nbsp;<span class="variable">$MAINPID</span></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></tbody></table></figure>



<h5 id="查看-news-服务日志"><a href="#查看-news-服务日志" class="headerlink" title="查看 news 服务日志"></a>查看 news 服务日志</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">journalctl -u news -f</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>mapper中使用list作为参数实现批量插入</title>
    <url>/posts/Java/b6906cc5.html</url>
    <content><![CDATA[<h1 id="mapper中使用list作为参数实现批量插入"><a href="#mapper中使用list作为参数实现批量插入" class="headerlink" title="mapper中使用list作为参数实现批量插入"></a>mapper中使用list作为参数实现批量插入</h1><a id="more"></a>

<h4 id="Mapper-java"><a href="#Mapper-java" class="headerlink" title="Mapper.java"></a>Mapper.java</h4><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insertBatch</span><span class="params">(<span class="meta">@Param("customerChangeRecordList")</span> List&lt;CustomerChangeRecord&gt; customerChangeRecordList)</span></span>;</span><br></pre></td></tr></tbody></table></figure>



<h4 id="mapper-xml"><a href="#mapper-xml" class="headerlink" title="mapper.xml"></a>mapper.xml</h4><figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insertBatch"</span> <span class="attr">parameterType</span>=<span class="string">"java.util.List"</span>&gt;</span></span><br><span class="line">  insert into cms_customer_change_record(customer_id,type,sys_user_id,content,create_time,create_by)</span><br><span class="line">  VALUES</span><br><span class="line">  <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"customerChangeRecordList"</span> <span class="attr">item</span>=<span class="string">"item"</span> <span class="attr">separator</span> =<span class="string">","</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"("</span> <span class="attr">suffix</span>=<span class="string">")"</span> <span class="attr">suffixOverrides</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">      #{item.customerId},</span><br><span class="line">      #{item.type},</span><br><span class="line">      #{item.sysUserId},</span><br><span class="line">      #{item.content},</span><br><span class="line">      #{item.createTime},</span><br><span class="line">      #{item.createBy},</span><br><span class="line">    <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>16 个 JavaScript 简写神技</title>
    <url>/posts/JavaScript/84c6a066.html</url>
    <content><![CDATA[<h2 id="16-个-JavaScript-简写神技"><a href="#16-个-JavaScript-简写神技" class="headerlink" title="16 个 JavaScript 简写神技"></a>16 个 JavaScript 简写神技</h2><p>JavaScript 是一门强大且灵活的语言，拥有丰富的特性和语法糖。分享下 16 个最常用的 JavaScript 的简写技巧，掌握它们可以让我们编写出更简洁、更优雅的代码，并显著提升开发效率（增加摸鱼时间）。</p>
<a id="more"></a>

<h3 id="1-三元运算符简化条件判断"><a href="#1-三元运算符简化条件判断" class="headerlink" title="1. 三元运算符简化条件判断"></a>1. 三元运算符简化条件判断</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="keyword">let</span>&nbsp;result;</span><br><span class="line"><span class="keyword">if</span>&nbsp;(someCondition) {</span><br><span class="line">&nbsp; &nbsp; result =&nbsp;<span class="string">'yes'</span>;</span><br><span class="line">}&nbsp;<span class="keyword">else</span>&nbsp;{</span><br><span class="line">&nbsp; &nbsp; result =&nbsp;<span class="string">'no'</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;result = someCondition ?&nbsp;<span class="string">'yes'</span>&nbsp;:&nbsp;<span class="string">'no'</span>;</span><br></pre></td></tr></tbody></table></figure>

<h3 id="2-空值合并运算符"><a href="#2-空值合并运算符" class="headerlink" title="2. 空值合并运算符"></a>2. 空值合并运算符</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="keyword">const</span> name = user.name !== <span class="literal">null</span> &amp;&amp; user.name != <span class="literal">undefined</span> ? user.name : <span class="string">'default'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="keyword">const</span> name = user.name ?? <span class="string">'default'</span></span><br></pre></td></tr></tbody></table></figure>

<h3 id="3-可选链操作符"><a href="#3-可选链操作符" class="headerlink" title="3. 可选链操作符"></a>3. 可选链操作符</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;street = user &amp;&amp; user.address&nbsp;&amp;&amp; user.address.street;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;street = user?.address?.street;</span><br></pre></td></tr></tbody></table></figure>

<h3 id="4-数组去重"><a href="#4-数组去重" class="headerlink" title="4. 数组去重"></a>4. 数组去重</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">arr</span>)</span>{</span><br><span class="line">  <span class="keyword">return</span> arr.filter(<span class="function">(<span class="params">item, index</span>) =&gt;</span> arr.index0f(item) === index);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="keyword">const</span> unique = <span class="function"><span class="params">arr</span> =&gt;</span> [...new <span class="built_in">Set</span>(arr)];</span><br></pre></td></tr></tbody></table></figure>

<h3 id="5-快速取整"><a href="#5-快速取整" class="headerlink" title="5. 快速取整"></a>5. 快速取整</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;floor =&nbsp;<span class="built_in">Math</span>.floor(<span class="number">4.9</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;floor = ~~<span class="number">4.9</span>;</span><br></pre></td></tr></tbody></table></figure>

<h3 id="6-合并对象"><a href="#6-合并对象" class="headerlink" title="6. 合并对象"></a>6. 合并对象</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="keyword">const</span> merged = object.assign({}, obj1, obj2);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="keyword">const</span> merged = {...obj1, ...obj2};</span><br></pre></td></tr></tbody></table></figure>

<h3 id="7-短路求值"><a href="#7-短路求值" class="headerlink" title="7. 短路求值"></a>7. 短路求值</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="keyword">if</span>&nbsp;(condition) {</span><br><span class="line">&nbsp; &nbsp;&nbsp;doSomething();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line">condition &amp;&amp;&nbsp;doSomething();</span><br></pre></td></tr></tbody></table></figure>

<h3 id="8-默认参数值"><a href="#8-默认参数值" class="headerlink" title="8. 默认参数值"></a>8. 默认参数值</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span>&nbsp;<span class="title">greet</span>(<span class="params">name</span>) </span>{</span><br><span class="line">&nbsp; &nbsp; name = name ||&nbsp;<span class="string">'Guest'</span>;</span><br><span class="line">&nbsp; &nbsp;&nbsp;<span class="built_in">console</span>.log(<span class="string">`Hello&nbsp;<span class="subst">${name}</span>`</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;greet&nbsp;= <span class="function">(<span class="params">name =&nbsp;<span class="string">'Guest'</span></span>) =&gt;</span>&nbsp;<span class="built_in">console</span>.log(<span class="string">`Hello&nbsp;<span class="subst">${name}</span>`</span>);</span><br></pre></td></tr></tbody></table></figure>

<h3 id="9-解构赋值"><a href="#9-解构赋值" class="headerlink" title="9. 解构赋值"></a>9. 解构赋值</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;first = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">const</span>&nbsp;second = arr[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;[first, second] = arr;</span><br></pre></td></tr></tbody></table></figure>

<h3 id="10-字符串转数字"><a href="#10-字符串转数字" class="headerlink" title="10. 字符串转数字"></a>10. 字符串转数字</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;num =&nbsp;<span class="built_in">parseInt</span>(<span class="string">'123'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;num = +<span class="string">'123'</span>;</span><br></pre></td></tr></tbody></table></figure>

<h3 id="11-多重条件判断"><a href="#11-多重条件判断" class="headerlink" title="11. 多重条件判断"></a>11. 多重条件判断</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="keyword">if</span>&nbsp;(value ===&nbsp;<span class="number">1</span>&nbsp;|| value ===&nbsp;<span class="number">2</span>&nbsp;|| value ===&nbsp;<span class="number">3</span>) {</span><br><span class="line">&nbsp; &nbsp;&nbsp;<span class="comment">// ...</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="keyword">if</span>&nbsp;([<span class="number">1</span>,&nbsp;<span class="number">2</span>,&nbsp;<span class="number">3</span>].includes(value)) {</span><br><span class="line">&nbsp; &nbsp;&nbsp;<span class="comment">// ...</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h3 id="12-快速幂运算"><a href="#12-快速幂运算" class="headerlink" title="12. 快速幂运算"></a>12. 快速幂运算</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="built_in">Math</span>.pow(<span class="number">2</span>,&nbsp;<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="number">2</span>&nbsp;**&nbsp;<span class="number">3</span>;</span><br></pre></td></tr></tbody></table></figure>

<h3 id="13-对象属性简写"><a href="#13-对象属性简写" class="headerlink" title="13. 对象属性简写"></a>13. 对象属性简写</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;obj = {&nbsp;<span class="attr">x</span>: x,&nbsp;<span class="attr">y</span>: y };</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;obj = { x, y };</span><br></pre></td></tr></tbody></table></figure>

<h3 id="14-数组映射"><a href="#14-数组映射" class="headerlink" title="14. 数组映射"></a>14. 数组映射</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> doubled = numbers.map(<span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> num * <span class="number">2</span>;</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="keyword">const</span> doubled = numbers.map(<span class="function"><span class="params">num</span> =&gt;</span> num * <span class="number">2</span>);</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<h3 id="15-交换变量值"><a href="#15-交换变量值" class="headerlink" title="15. 交换变量值"></a>15. 交换变量值</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="keyword">let</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line">[a, b] = [b, a];</span><br></pre></td></tr></tbody></table></figure>

<h3 id="16-动态对象属性"><a href="#16-动态对象属性" class="headerlink" title="16. 动态对象属性"></a>16. 动态对象属性</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line"><span class="keyword">const</span> obj = {};</span><br><span class="line">obj[dynamic + <span class="string">'name'</span>] = value;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简写方式</span></span><br><span class="line"><span class="keyword">const</span> obj = {</span><br><span class="line">	[<span class="string">`<span class="subst">${dynamic}</span>name`</span>]: value</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>



<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://mp.weixin.qq.com/s/OfnTUDWr-sOmAl9CxeM2tg">https://mp.weixin.qq.com/s/OfnTUDWr-sOmAl9CxeM2tg</a></li>
</ul>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Fetch API 结合 AbortController 实现请求取消与请求超时取消</title>
    <url>/posts/JavaScript/ed5097d5.html</url>
    <content><![CDATA[<h2 id="Fetch-API-结合-AbortController-实现请求取消与请求超时取消"><a href="#Fetch-API-结合-AbortController-实现请求取消与请求超时取消" class="headerlink" title="Fetch API 结合 AbortController 实现请求取消与请求超时取消"></a>Fetch API 结合 AbortController 实现请求取消与请求超时取消</h2><a id="more"></a>

<h3 id="1-请求取消"><a href="#1-请求取消" class="headerlink" title="1. 请求取消"></a>1. 请求取消</h3><blockquote>
<p>想象一个场景：用户在搜索框中快速输入，每次输入都触发一次请求。我们只关心最后一次请求的结果。使用 <code>AbortController</code>，实现起来易如反掌。</p>
</blockquote>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">let</span>&nbsp;controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span>&nbsp;<span class="function"><span class="keyword">function</span>&nbsp;<span class="title">handleSearch</span>(<span class="params">query</span>) </span>{</span><br><span class="line">&nbsp;<span class="comment">// 如果上一个请求正在进行，取消它</span></span><br><span class="line">&nbsp;<span class="keyword">if</span>&nbsp;(controller) {</span><br><span class="line">&nbsp; &nbsp; controller.abort();</span><br><span class="line">&nbsp; }</span><br><span class="line"></span><br><span class="line">&nbsp;<span class="comment">// 为新请求创建一个新的控制器</span></span><br><span class="line">&nbsp;controller =&nbsp;<span class="keyword">new</span>&nbsp;AbortController();</span><br><span class="line">&nbsp;<span class="keyword">const</span>&nbsp;signal = controller.signal;</span><br><span class="line"></span><br><span class="line">&nbsp;<span class="keyword">try</span>&nbsp;{</span><br><span class="line">&nbsp; &nbsp;&nbsp;<span class="keyword">const</span>&nbsp;response =&nbsp;<span class="keyword">await</span>&nbsp;fetch(<span class="string">`/api/search?q=<span class="subst">${query}</span>`</span>, { signal });</span><br><span class="line">&nbsp; &nbsp;&nbsp;<span class="keyword">const</span>&nbsp;data =&nbsp;<span class="keyword">await</span>&nbsp;response.json();</span><br><span class="line">&nbsp; &nbsp;&nbsp;<span class="built_in">console</span>.log(<span class="string">'Search results:'</span>, data);</span><br><span class="line">&nbsp; }&nbsp;<span class="keyword">catch</span>&nbsp;(error) {</span><br><span class="line">&nbsp; &nbsp;&nbsp;<span class="keyword">if</span>&nbsp;(error.name&nbsp;===&nbsp;<span class="string">'AbortError'</span>) {</span><br><span class="line">&nbsp; &nbsp; &nbsp;&nbsp;<span class="built_in">console</span>.log(<span class="string">'Fetch aborted'</span>);</span><br><span class="line">&nbsp; &nbsp; }&nbsp;<span class="keyword">else</span>&nbsp;{</span><br><span class="line">&nbsp; &nbsp; &nbsp;&nbsp;<span class="built_in">console</span>.error(<span class="string">'Fetch error:'</span>, error);</span><br><span class="line">&nbsp; &nbsp; }</span><br><span class="line">&nbsp; }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h3 id="3-请求超时"><a href="#3-请求超时" class="headerlink" title="3. 请求超时"></a>3. 请求超时</h3><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchWithTimeout</span>(<span class="params">resource, options ={}, timeout = <span class="number">8000</span></span>)</span>{</span><br><span class="line">  <span class="keyword">const</span> controller = <span class="keyword">new</span> AbortController();</span><br><span class="line">  <span class="keyword">const</span> id = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> controller.abort(), timeout);</span><br><span class="line">	<span class="keyword">const</span> response = <span class="keyword">await</span> fetch(resource, {</span><br><span class="line">    ...options, </span><br><span class="line">    signal: controller.signal</span><br><span class="line">  });</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">clearTimeout</span>(id);</span><br><span class="line">  <span class="keyword">return</span> response;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">  <span class="keyword">const</span> response = <span class="keyword">await</span> fetchWithTimeout(<span class="string">'/api/slow-data'</span>, {}, <span class="number">5000</span>);<span class="comment">// 5秒超时</span></span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> response.json();</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">} <span class="keyword">catch</span> (error){</span><br><span class="line">	<span class="keyword">if</span>(error.name ==<span class="string">'AbortError'</span>){</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Fetch request timed out.'</span>);</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript 中实用的 API</title>
    <url>/posts/JavaScript/2122924a.html</url>
    <content><![CDATA[<p>JavaScript 中实用的 API</p>
<a id="more"></a>

<h3 id="1-URL查询参数解析"><a href="#1-URL查询参数解析" class="headerlink" title="1. URL查询参数解析"></a>1. URL查询参数解析</h3><p>过去，要从一个URL中获取查询参数（如 <code>id</code>），我们通常需要使用正则表达式或一连串的 <code>split</code> 方法，代码冗长且容易出错。</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 以前的方式</span></span><br><span class="line"><span class="function"><span class="keyword">function</span>&nbsp;<span class="title">getQueryParam</span>(<span class="params">url, param</span>) </span>{</span><br><span class="line">&nbsp;<span class="keyword">const</span>&nbsp;search = url.split(<span class="string">'?'</span>)[<span class="number">1</span>];</span><br><span class="line">&nbsp;<span class="keyword">if</span>&nbsp;(!search) {&nbsp;<span class="keyword">return</span>&nbsp;<span class="literal">null</span>; }</span><br><span class="line">&nbsp;<span class="keyword">const</span>&nbsp;params = search.split(<span class="string">'&amp;'</span>);</span><br><span class="line">&nbsp;<span class="keyword">for</span>&nbsp;(<span class="keyword">let</span>&nbsp;i =&nbsp;<span class="number">0</span>; i &lt; params.length; i++) {</span><br><span class="line">&nbsp; &nbsp;&nbsp;<span class="keyword">const</span>&nbsp;pair = params[i].split(<span class="string">'='</span>);</span><br><span class="line">&nbsp; &nbsp;&nbsp;<span class="keyword">if</span>&nbsp;(pair[<span class="number">0</span>] === param) {&nbsp;<span class="keyword">return</span>&nbsp;<span class="built_in">decodeURIComponent</span>(pair[<span class="number">1</span>]); }</span><br><span class="line">&nbsp; }</span><br><span class="line">&nbsp;<span class="keyword">return</span>&nbsp;<span class="literal">null</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span>&nbsp;url =&nbsp;<span class="string">'https://example.com/page?id=123&amp;category=tech'</span>;</span><br><span class="line"><span class="keyword">const</span>&nbsp;id =&nbsp;getQueryParam(url,&nbsp;<span class="string">'id'</span>);&nbsp;<span class="comment">// "123"</span></span><br></pre></td></tr></tbody></table></figure>

<p>现在，<code>URLSearchParams</code> 对象让这一切变得无比简单：</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">//现代的方式</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="keyword">new</span> URL(<span class="string">'https://example.com/page?id=123&amp;category=tech'</span>);</span><br><span class="line"><span class="keyword">const</span> id = url.searchParams.get(<span class="string">'id'</span>); <span class="comment">// "123"</span></span><br></pre></td></tr></tbody></table></figure>

<p>内置的 <code>URLSearchParams</code> 不仅代码更短，而且在处理URL编码、多个同名参数等边缘情况时更加健壮可靠。</p>
<h3 id="2-对象深拷贝"><a href="#2-对象深拷贝" class="headerlink" title="2. 对象深拷贝"></a>2. 对象深拷贝</h3><p>深拷贝是面试和工作中的常见痛点，最广为人知但有缺陷的方法是 <code>JSON.parse(JSON.stringify(obj))</code>，它无法处理 <code>Date</code> 对象、<code>undefined</code>、等特殊类型。</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">const</span>&nbsp;original = {</span><br><span class="line">&nbsp;&nbsp;birth:&nbsp;<span class="keyword">new</span>&nbsp;<span class="built_in">Date</span>(<span class="string">'1990-01-01'</span>),</span><br><span class="line">&nbsp;&nbsp;id:&nbsp;<span class="literal">undefined</span>,</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以前的方式</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;copy =&nbsp;<span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(original));</span><br><span class="line"><span class="comment">// 问题暴露</span></span><br><span class="line"><span class="built_in">console</span>.log(copy.birth);&nbsp;<span class="comment">// "1990-01-01T00:00:00.000Z" (变成了字符串)</span></span><br><span class="line"><span class="built_in">console</span>.log(copy.id); &nbsp;&nbsp;&nbsp;<span class="comment">// undefined (undefined 丢失)</span></span><br></pre></td></tr></tbody></table></figure>

<p>现在，我们有了原生的、强大的深拷贝工具 <code>structuredClone</code>：</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 现代的方式</span></span><br><span class="line"><span class="keyword">const</span> copy = structuredClone(original);</span><br><span class="line"><span class="comment">// 完美拷贝</span></span><br><span class="line"><span class="built_in">console</span>.log(copy.birth);<span class="comment">// Date object(依然是 Date 对象)</span></span><br><span class="line"><span class="built_in">console</span>.log(original.birth === copy.birth); <span class="comment">// false(是全新的对象)</span></span><br></pre></td></tr></tbody></table></figure>

<p><code>structuredClone</code> 是官方推荐的深拷贝方式，支持绝大多数数据类型（除函数、DOM节点等），彻底解决了 <code>JSON</code> 方法的弊端。</p>
<h3 id="3-数组分组"><a href="#3-数组分组" class="headerlink" title="3. 数组分组"></a>3. 数组分组</h3><figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">const</span>&nbsp;products = [</span><br><span class="line">&nbsp; {&nbsp;<span class="attr">name</span>:&nbsp;<span class="string">'苹果'</span>,&nbsp;<span class="attr">category</span>:&nbsp;<span class="string">'水果'</span>&nbsp;},</span><br><span class="line">&nbsp; {&nbsp;<span class="attr">name</span>:&nbsp;<span class="string">'电视'</span>,&nbsp;<span class="attr">category</span>:&nbsp;<span class="string">'电器'</span>&nbsp;}</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以前的方式</span></span><br><span class="line"><span class="keyword">const</span>&nbsp;grouped = products.reduce(<span class="function">(<span class="params">acc, product</span>) =&gt;</span>&nbsp;{</span><br><span class="line">&nbsp;<span class="keyword">const</span>&nbsp;key = product.category;</span><br><span class="line">&nbsp;<span class="keyword">if</span>&nbsp;(!acc[key]) { acc[key] = []; }</span><br><span class="line">&nbsp; acc[key].push(product);</span><br><span class="line">&nbsp;<span class="keyword">return</span>&nbsp;acc;</span><br><span class="line">}, {});</span><br><span class="line"><span class="comment">// grouped: { '水果': [...], '电器': [...] }</span></span><br></pre></td></tr></tbody></table></figure>

<p>ES2023 引入了 <code>Object.groupBy()</code>，让分组操作变得语义化且极其简单。</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 现代的方式</span></span><br><span class="line"><span class="keyword">const</span> grouped = <span class="built_in">Object</span>.groupBy(products, <span class="function"><span class="params">product</span> =&gt;</span> product.category);</span><br><span class="line"><span class="comment">// grouped: { '水果': [...], '电器': [...]}</span></span><br></pre></td></tr></tbody></table></figure>

<p><code>Object.groupBy()</code> 将一个意图直接翻译成了一行代码，可读性远超复杂的 <code>reduce</code> 实现。</p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript数组相关函数操作总结</title>
    <url>/posts/JavaScript/6b845b80.html</url>
    <content><![CDATA[<p>JavaScript数组相关函数操作总结</p>
<a id="more"></a>

<h2 id="数组方法"><a href="#数组方法" class="headerlink" title="数组方法"></a>数组方法</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">var a = [1, 2, 3];</span><br></pre></td></tr></tbody></table></figure>



<h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">a.filter(n =&gt; n != 1)</span><br><span class="line">(2) [2, 3]</span><br></pre></td></tr></tbody></table></figure>



<h4 id="map"><a href="#map" class="headerlink" title="map"></a>map</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">a.map(n =&gt; n+1)</span><br><span class="line">(3)&nbsp;[2, 3, 4]</span><br></pre></td></tr></tbody></table></figure>



<h4 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">a.forEach((n, idx) =&gt; console.log(n, idx))</span><br><span class="line">1 0</span><br><span class="line">2 1</span><br><span class="line">3 2</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>node版本切换工具nvm</title>
    <url>/posts/nodejs/d128f3e4.html</url>
    <content><![CDATA[<h2 id="Nvm"><a href="#Nvm" class="headerlink" title="Nvm"></a>Nvm</h2><p><a href="https://github.com/nvm-sh/nvm">nvm</a> 是node版本切换工具。</p>
<a id="more"></a>



<h4 id="Nvm-安装"><a href="#Nvm-安装" class="headerlink" title="Nvm 安装"></a>Nvm 安装</h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">wget -c https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.5.tar.gz</span><br><span class="line">tar zxf v.0.39.5.tar.gz</span><br><span class="line">mkdir /usr/local/nvm</span><br><span class="line">mv nvm-0.39.5 /usr/local/nvm/</span><br><span class="line"></span><br><span class="line">vim ~/.bashrc</span><br><span class="line"></span><br><span class="line">#以下路径/usr/local/nvm/nvm-0.39.5为nvm安装路径</span><br><span class="line">export NVM_DIR="/usr/local/nvm/nvm-0.39.5"</span><br><span class="line">[ -s "$NVM_DIR/nvm.sh" ] &amp;&amp; \. "$NVM_DIR/nvm.sh"</span><br><span class="line">[ -s "$NVM_DIR/bash_completion" ] &amp;&amp; \. "$NVM_DIR/bash_completion"</span><br><span class="line"># nodejs下载更换淘宝镜像（从淘宝镜像下载还是很慢，很奇怪）</span><br><span class="line"># 下载慢问题已找到原因：服务器资源太少导致</span><br><span class="line">export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</span><br><span class="line"></span><br><span class="line">nvm install v16.20.2</span><br><span class="line">nvm use v16.20.2</span><br><span class="line">npm config set registry https://registry.npmmirror.com</span><br></pre></td></tr></tbody></table></figure>



<h4 id="国内镜像代理"><a href="#国内镜像代理" class="headerlink" title="国内镜像代理"></a>国内镜像代理</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</span><br><span class="line"><span class="built_in">export</span> NVM_IOJS_ORG_MIRROR=https://npm.taobao.org/mirrors/iojs</span><br></pre></td></tr></tbody></table></figure>





<h3 id="安装最新稳定版本"><a href="#安装最新稳定版本" class="headerlink" title="安装最新稳定版本"></a>安装最新稳定版本</h3><h4 id="查看远程LTS版本"><a href="#查看远程LTS版本" class="headerlink" title="查看远程LTS版本"></a>查看远程LTS版本</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">nvm ls-remote --lts</span><br></pre></td></tr></tbody></table></figure>



<h4 id="安装指定版本"><a href="#安装指定版本" class="headerlink" title="安装指定版本"></a>安装指定版本</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">nvm install v12.22.12</span><br></pre></td></tr></tbody></table></figure>



<h4 id="切换node版本"><a href="#切换node版本" class="headerlink" title="切换node版本"></a>切换node版本</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ nvm use v12.22.12</span><br><span class="line"></span><br><span class="line">$ node -v</span><br><span class="line">node: --openssl-legacy-provider is not allowed <span class="keyword">in</span> NODE_OPTIONS</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">unset</span> NODE_OPTIONS</span><br><span class="line">$ node -v</span><br><span class="line">v12.22.12</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>nvim</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>npm使用记录</title>
    <url>/posts/npm/78653a48.html</url>
    <content><![CDATA[<p>npm使用记录</p>
<a id="more"></a>

<h4 id="设置taobao镜像源"><a href="#设置taobao镜像源" class="headerlink" title="设置taobao镜像源"></a>设置taobao镜像源</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry registry.npmmirror.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 还原默认镜像源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry=https://registry.npmjs.org</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时使用镜像源</span></span><br><span class="line">pnpm i --registry https://registry.npmmirror.com</span><br><span class="line">pnpm i --registry https://registry.npmjs.org</span><br></pre></td></tr></tbody></table></figure>



<h4 id="显示-npm-默认全局安装路径"><a href="#显示-npm-默认全局安装路径" class="headerlink" title="显示 npm 默认全局安装路径"></a>显示 npm 默认全局安装路径</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">npm root -g</span><br></pre></td></tr></tbody></table></figure>



<h4 id="显示-npm-配置"><a href="#显示-npm-配置" class="headerlink" title="显示 npm 配置"></a>显示 npm 配置</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">npm config list</span><br><span class="line"><span class="comment"># 显示默认所有配置</span></span><br><span class="line">npm config ls -l</span><br></pre></td></tr></tbody></table></figure>



<h4 id="创建-bin-脚本软连"><a href="#创建-bin-脚本软连" class="headerlink" title="创建 bin 脚本软连"></a>创建 <code>bin</code> 脚本软连</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm link</span><br></pre></td></tr></tbody></table></figure>



<h4 id="已安装包列表"><a href="#已安装包列表" class="headerlink" title="已安装包列表"></a>已安装包列表</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm list --global --depth=0</span><br></pre></td></tr></tbody></table></figure>



<h4 id="删除-node-modules-目录"><a href="#删除-node-modules-目录" class="headerlink" title="删除 node_modules 目录"></a>删除 node_modules 目录</h4><ol>
<li><p>直接使用 shell 命令：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">find . -name <span class="string">"node_modules"</span> -<span class="built_in">type</span> d -<span class="built_in">exec</span> rm -rf {} \;</span><br></pre></td></tr></tbody></table></figure>



</li>
</ol>
<ol start="2">
<li><p>npkill 工具</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">npm i -g npkill</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">npm remove -g npkill</span><br></pre></td></tr></tbody></table></figure>



</li>
</ol>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://aotu.io/notes/2016/08/09/command-line-development/index.html">https://aotu.io/notes/2016/08/09/command-line-development/index.html</a></li>
<li><a href="https://segmentfault.com/a/1190000016555129">https://segmentfault.com/a/1190000016555129</a></li>
<li><a href="https://github.com/tj/commander.js/blob/HEAD/Readme_zh-CN.md">commander</a></li>
</ul>
]]></content>
      <categories>
        <category>npm</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>Memcached</title>
    <url>/posts/Memcached/ac8ea8db.html</url>
    <content><![CDATA[<h1 id="Memcached"><a href="#Memcached" class="headerlink" title="Memcached"></a>Memcached</h1><a id="more"></a>

<p>使用 root 用户并以后台守护方式启动<br>    memcached -d -u root<br>链接<br>    telnet 127.0.0.1 11211</p>
<pre><code>telnet 10.10.16.38 11211
get city_account_ticket</code></pre>
]]></content>
      <categories>
        <category>Memcached</category>
      </categories>
      <tags>
        <tag>Memcached</tag>
      </tags>
  </entry>
  <entry>
    <title>如何单独测试 Yar Server</title>
    <url>/posts/Test/322b5ae2.html</url>
    <content><![CDATA[<h2 id="单独压测-测试-Yar-Server"><a href="#单独压测-测试-Yar-Server" class="headerlink" title="单独压测/测试 Yar Server."></a>单独压测/测试 Yar Server.</h2><p>本章主要记录 ab 压测 Yar Server, curl 测试 Yar Server.</p>
<a id="more"></a>

<h3 id="Yar-Client-php"><a href="#Yar-Client-php" class="headerlink" title="Yar_Client.php"></a>Yar_Client.php</h3><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$client = <span class="keyword">new</span> Yar_Client(<span class="string">'http://www.local.com/separate_test_yar_server/Yar_server.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>; var_dump($client-&gt;get(<span class="string">'codezm'</span>)); <span class="keyword">echo</span> <span class="string">'&lt;/pre&gt;'</span>; <span class="keyword">die</span>();</span><br></pre></td></tr></tbody></table></figure>
<h3 id="Yar-Server-php"><a href="#Yar-Server-php" class="headerlink" title="Yar_Server.php"></a>Yar_Server.php</h3><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">API</span> </span>{</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * the doc info will be generated automatically into service info page.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@params</span> </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params">$parameter, $option = <span class="string">"foo"</span></span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'parameter'</span> =&gt; $parameter, </span><br><span class="line">            <span class="string">'option'</span> =&gt; $option</span><br><span class="line">        );</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">client_can_not_see</span>(<span class="params"></span>) </span>{</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//file_put_contents('Yar_client_request_header.dump', var_export($_SERVER, true) . "\n" . var_export(@$_POST, true) . "\n" . var_export(@$_GET, true), FILE_APPEND);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//file_put_contents('Yar_client_request_post_data.dump', file_get_contents('php://input'), FILE_APPEND);</span></span><br><span class="line"></span><br><span class="line">$service = <span class="keyword">new</span> Yar_Server(<span class="keyword">new</span> API());</span><br><span class="line">$service-&gt;handle();</span><br></pre></td></tr></tbody></table></figure>

<h3 id="首先-记录一下-Yar-Client-请求到-Yar-Server-的请求头及请求数据"><a href="#首先-记录一下-Yar-Client-请求到-Yar-Server-的请求头及请求数据" class="headerlink" title="首先, 记录一下 Yar_Client 请求到 Yar_Server 的请求头及请求数据."></a>首先, 记录一下 Yar_Client 请求到 Yar_Server 的请求头及请求数据.</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">curl http://www.local.com/separate_test_yar_server/Yar_Client.php</span><br></pre></td></tr></tbody></table></figure>
<p>关闭 Yar_Server 端文件记录语句, 准备进行测试.</p>
<h3 id="Curl-测试"><a href="#Curl-测试" class="headerlink" title="Curl 测试."></a>Curl 测试.</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">curl --user-agent "PHP Yar Rpc-2.0.2" \</span><br><span class="line">     -H 'Content-Type:application/x-www-form-urlencoded' \</span><br><span class="line">     --data-binary @Yar_client_request_post_data.dump \</span><br><span class="line">     http://www.local.com/separate_test_yar_server/Yar_Server.php</span><br></pre></td></tr></tbody></table></figure>
<h3 id="Ab-压测"><a href="#Ab-压测" class="headerlink" title="Ab 压测."></a>Ab 压测.</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">ab -H 'user-agent:PHP Yar Rpc-2.0.2' \</span><br><span class="line">   -T 'application/x-www-form-urlencoded' \</span><br><span class="line">   -p ./Yar_client_request_post_data.dump \</span><br><span class="line">   -c 1000 -n 10000 \</span><br><span class="line">   http://www.local.com/separate_test_yar_server/Yar_Server.php</span><br></pre></td></tr></tbody></table></figure>
<p>THE END.</p>
<p>Tips:<br>若需要完整代码可点击 <a href="https://github.com/codezm/separate_test_yar_server">此处</a> 浏览并下载.</p>
]]></content>
      <categories>
        <category>Test</category>
      </categories>
      <tags>
        <tag>Test,Yar</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-5.2.8</title>
    <url>/posts/PHP/82b37e62.html</url>
    <content><![CDATA[<p>安装 php-5.2.8</p>
<a id="more"></a>

<h3 id="启动-php-cgi"><a href="#启动-php-cgi" class="headerlink" title="启动 php-cgi"></a>启动 php-cgi</h3><h4 id="对于低版本-php-如-php5-2-启动自带-fastcgi-configure-–enable-fastcgi"><a href="#对于低版本-php-如-php5-2-启动自带-fastcgi-configure-–enable-fastcgi" class="headerlink" title="对于低版本 php 如: php5.2 启动自带 fastcgi(./configure –enable-fastcgi):"></a>对于低版本 php 如: php5.2 启动自带 fastcgi(./configure –enable-fastcgi):</h4><pre><code>php-cgi -b 127.0.0.1:9000
/usr/local/php/bin/php-cgi -b /tmp/php.socket</code></pre>
<p>wget <a href="http://php-fpm.org/downloads/php-5.2.8-fpm-0.5.10.diff.gz%EF%BC%88%E6%88%91%E7%9A%84php%E4%B8%BA5.2.8%EF%BC%89">http://php-fpm.org/downloads/php-5.2.8-fpm-0.5.10.diff.gz（我的php为5.2.8）</a><br>tar-xzvf php-5.2.8.tar.gz (解压包php-5.2.8,将生成目录php-5.2.8)<br>gunzip php-5.2.8-fpm-0.5.10.diff.gz (解压包php-5.2.8-fpm-0.5.10.diff)<br>patch-d php-5.2.8 -p1 &lt; php-5.2.8-fpm-0.5.10.diff(给php-5.2.8的源码打上fpm补丁)<br>./configure –enable-fpm </p>
<p>./configure  –prefix=/usr/local/php –enable-fastcgi –enable-fpm</p>
<h2 id="安装-freetype"><a href="#安装-freetype" class="headerlink" title="安装 freetype"></a>安装 freetype</h2><pre><code>http://sourceforge.net/projects/freetype/
tar zxf freetype-2.5.5.tar.gz
cd freetype-2.5.5
./configure
make &amp;&amp; make install

http://sourceforge.net/projects/libpng/
cd libpng-1.6.29
./configure
make &amp;&amp; make install

https://github.com/libgd/libgd/releases
cd libgd-2.2.4
./configure --with-png=/usr/local/lib --with-freetype=/usr/local/lib
make &amp;&amp; make install

make[2]: *** [gd_gd2.lo] Error 1
make[1]: *** [all] Error 2
make: *** [all-recursive] Error 1</code></pre>
<p>​<br>​    ./configure  –prefix=/usr/local/php –enable-fastcgi –with-mysql=/usr/local/lib –with-freetype-dir=/usr/local/lib</p>
<p>删除 php<br>    sudo rm -rf /usr/local/php<br>启动 php-cgi<br>    /usr/local/php/bin/php-cgi.dSYM -b 127.0.0.1:9000&amp;</p>
<h3 id="安装-php5-2-17"><a href="#安装-php5-2-17" class="headerlink" title="安装 php5.2.17"></a>安装 php5.2.17</h3><p>安装 php-fpm<br>curl -O <a href="https://php-fpm.org/downloads/php-5.2.17-fpm-0.5.14.diff.gz">https://php-fpm.org/downloads/php-5.2.17-fpm-0.5.14.diff.gz</a><br>gunzip php-5.2.17-fpm-0.5.14.diff.gz<br>patch -d php-5.2.17 -p1 &lt; php-5.2.17-fpm-0.5.14.diff</p>
<p>cd php-5.2.17<br>./configure  –prefix=/usr/local/php –enable-fastcgi –enable-fpm<br>make<br>sudo make install</p>
<p>启动<br>/usr/local/php/sbin/php-fpm start</p>
<p>brew install mysql 启动<br>brew install homebrew/versions/<formula></formula></p>
<p>mysql.server</p>
<p>php 编译时报错信息 ./configure<br>    make: *** [ext/dom/node.lo] Error 1<br>curl -o php-5.x.x.patch <a href="https://mail.gnome.org/archives/xml/2012-August/txtbgxGXAvz4N.txt">https://mail.gnome.org/archives/xml/2012-August/txtbgxGXAvz4N.txt</a></p>
<p>curl -o php-5.2.16.patch <a href="https://mail.gnome.org/archives/xml/2012-August/txtbgxGXAvz4N.txt">https://mail.gnome.org/archives/xml/2012-August/txtbgxGXAvz4N.txt</a><br>cd php-5.2.16<br>patch -p0 -b &lt; ../php-5.2.16.patch </p>
<h3 id="新增-inotify-php扩展"><a href="#新增-inotify-php扩展" class="headerlink" title="新增 inotify php扩展"></a>新增 inotify php扩展</h3><p>此扩展用于监听 php 文件变化.</p>
<h3 id="gdb-调试利器"><a href="#gdb-调试利器" class="headerlink" title="gdb 调试利器"></a>gdb 调试利器</h3><p>首先需要开启 ulimit core dump.<br>    一般Linux默认情况程序出错不会输出core dump文件<br>    ulimit -c unlimited</p>
<pre><code>echo "/web/wwwroot/corefile/core-%e-%p-%t" &gt; /proc/sys/kernel/core_pattern</code></pre>
<h4 id="执行-ulimit-c-unlimited-用于抓取-core-dump-文件"><a href="#执行-ulimit-c-unlimited-用于抓取-core-dump-文件" class="headerlink" title="执行 ulimit -c unlimited 用于抓取 core dump 文件"></a>执行 <code>ulimit -c unlimited</code> 用于抓取 core dump 文件</h4><pre><code>gdb php core 分析

gdb php -c core.31656

gdb --core core-php7-9744-1467884917 /usr/local/php7/bin/php</code></pre>
<p>编辑修改1 to 0<br>    /etc/sysctl.d/10-ptrace.conf<br>重启<br>    service procps restart</p>
<p>在 docker ubuntu 中:<br>    sysctl -p /etc/sysctl.conf<br>        sysctl: setting key “fs.file-max”: Read-only file system<br>        sysctl: setting key “kernel.core_pattern”: Read-only file system<br>        sysctl: setting key “kernel.core_uses_pid”: Read-only file system<br>    echo 1 &gt; /proc/sys/kernel/core_uses_pid<br>        -bash: /proc/sys/kernel/core_uses_pid: Read-only file system<br>无法修改系统变量，方法是启动 docker 时添加<code>-privileged</code>参数已获得提权.</p>
<p>若想 backtrace php 需要编译时添加<code>--enable-debug</code>.<br>./configure –prefix=/usr/local/php7-debug<br>            –with-config-file-path=/usr/local/php7-debug/etc<br>            –enable-fpm<br>            –with-fpm-user=php7-debug<br>            –with-fpm-group=php7-debug<br>            –with-openssl<br>            –with-pdo-mysql<br>            –with-iconv=/usr/local/lib/libiconv<br>            –with-curl<br>            –enable-mbstring<br>            –enable-debug<br>            –enable-ftp<br>            –with-mcrypt</p>
<p>./configure –with-php-config=/usr/local/php7-debug/bin/php-config –enable-swoole-debug<br>/usr/local/php7-debug/lib/php/extensions/debug-non-zts-20160303/<br>/usr/local/php7/lib/php/extensions/no-debug-non-zts-20160303/</p>
<h4 id="ab-测试相关问题"><a href="#ab-测试相关问题" class="headerlink" title="ab 测试相关问题"></a>ab 测试相关问题</h4><p>ab 已添加 ‘-k’ 参数，但仍然报如下错误信息<br>    apr_pollset_poll: The timeout specified has expired (70007)<br>修改系统变量<br>    vim /etc/sysctl.conf<br>    net.ipv4.netfilter.ip_conntrack_max = 655360<br>使配置生效<br>    sysctl -p /etc/sysctl.conf<br>引用自: <a href="https://mo2g.com/view/50/">https://mo2g.com/view/50/</a></p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP 字符串压缩与node zlib、pako</title>
    <url>/posts/%E5%8E%8B%E7%BC%A9/87225b85.html</url>
    <content><![CDATA[<p>探索 PHP 字符串压缩，与 node 中 zlib、pako 库压缩、解压缩处理。</p>
<ul>
<li>DEFLATE，是一种使用 Lempel-Ziv 压缩算法（LZ77）和哈夫曼编码的压缩格式。详见 <a href="http://tools.ietf.org/html/rfc1951">RFC 1951</a>；</li>
<li>ZLIB，是一种使用 DEFLATE 的压缩格式，对应 HTTP 中的 Content-Encoding: deflate。详见 <a href="http://tools.ietf.org/html/rfc1950">RFC 1950</a>；</li>
<li>GZIP，也是一种使用 DEFLATE 的压缩格式，对应 HTTP 中的 Content-Encoding: gzip。详见 <a href="http://tools.ietf.org/html/rfc1952">RFC 1952</a>；</li>
</ul>
<p>Content-Encoding 中的 deflate，实际上是 ZLIB。ZLIB 和 GZIP 都是 RAW DEFLATE 的不同 Wrapper。</p>
<p>PHP 字符串压缩函数</p>
<ul>
<li><code>gzcompress</code> ，对应解压缩函数：<code>gzuncompress</code>，使用 <code>raw ZLIB</code> 数据格式。</li>
<li><code>gzdeflate</code>，对应解压缩函数：<code>gzinflate</code>，使用 <code>raw DEFLATE</code> 数据格式。</li>
<li><code>gzencode</code>，对应解压缩函数：<code>gzdecode</code>，压缩成 <code>gzip</code> 编码数据。</li>
<li><code>bzcompress</code>，对应解压缩函数：<code>bzdecompress</code>，压缩成 <code>bzip2</code> 编码数据。</li>
</ul>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> base64_encode(gzdeflate(<span class="string">'1234'</span>));</span><br><span class="line"><span class="comment">// output: MzQyNgEA</span></span><br><span class="line"><span class="keyword">echo</span> gzinflate(base64_decode(<span class="string">"MzQyNgEA"</span>));</span><br><span class="line"><span class="comment">// output: 1234</span></span><br><span class="line"><span class="keyword">echo</span> base64_encode(gzdeflate(<span class="string">'1234'</span>, <span class="number">6</span>, ZLIB_ENCODING_DEFLATE));</span><br><span class="line"><span class="comment">// output: eJwzNDI2AQAB+ADL</span></span><br><span class="line"><span class="keyword">echo</span> gzinflate(base64_decode(<span class="string">"eJwzNDI2AQAB+ADL"</span>));</span><br><span class="line"><span class="comment">// error: PHP Warning:  gzinflate(): data error in php shell code on line 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(gzcompress(<span class="string">'1234'</span>));</span><br><span class="line"><span class="comment">// output: eJwzNDI2AQAB+ADL</span></span><br><span class="line"><span class="keyword">echo</span> gzuncompress(base64_decode(<span class="string">"eJwzNDI2AQAB+ADL"</span>));</span><br><span class="line"><span class="comment">// output: 1234</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(gzencode(<span class="string">'1234'</span>));</span><br><span class="line"><span class="comment">// output: H4sIAAAAAAAAAzM0MjYBAKPg45sEAAAA</span></span><br><span class="line"><span class="keyword">echo</span> gzdecode(base64_decode(<span class="string">"H4sIAAAAAAAAAzM0MjYBAKPg45sEAAAA"</span>));</span><br><span class="line"><span class="comment">// output: 1234</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(bzcompress(<span class="string">'1234'</span>));</span><br><span class="line"><span class="comment">// 因当前环境未激活 bzip2 支持，所以暂未测试。需在编译 PHP 时增加 `--with-bz2[=DIR]` 配置项。</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="pako"><a href="#pako" class="headerlink" title="pako"></a><a href="https://nodeca.github.io/pako/#home">pako</a></h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">npm install pako@1.0.6</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> pako = <span class="built_in">require</span>(<span class="string">'pako'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">btoa</span>(<span class="params">str</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> Buffer.from(str).toString(<span class="string">'base64'</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">atob</span>(<span class="params">b64Encoded</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> Buffer.from(b64Encoded, <span class="string">'base64'</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> zipResult = btoa(pako.deflate(<span class="string">"1234"</span>));</span><br><span class="line"><span class="built_in">console</span>.log(zipResult);</span><br><span class="line"><span class="comment">// output: eJwzNDI2AQAB+ADL</span></span><br><span class="line"><span class="keyword">var</span> unzipResult = pako.inflate(atob(<span class="string">"eJwzNDI2AQAB+ADL"</span>), { <span class="attr">to</span>: <span class="string">'string'</span> });</span><br><span class="line"><span class="built_in">console</span>.log(unzipResult);</span><br><span class="line"><span class="comment">// output: 1234</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> zipResult = btoa(pako.gzip(<span class="string">"1234"</span>));</span><br><span class="line"><span class="built_in">console</span>.log(zipResult);</span><br><span class="line"><span class="comment">// output: H4sIAAAAAAAAAzM0MjYBAKPg45sEAAAA</span></span><br><span class="line"><span class="keyword">var</span> unzipResult = pako.ungzip(atob(<span class="string">"H4sIAAAAAAAAAzM0MjYBAKPg45sEAAAA"</span>), {<span class="attr">to</span>: <span class="string">"string"</span>});</span><br><span class="line"><span class="built_in">console</span>.log(unzipResult);</span><br><span class="line"><span class="comment">// output: 1234</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="zlib"><a href="#zlib" class="headerlink" title="zlib"></a><a href="https://nodejs.org/api/zlib.html">zlib</a></h4><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> zlib = <span class="built_in">require</span>(<span class="string">'zlib'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">btoa</span>(<span class="params">str</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> Buffer.from(str).toString(<span class="string">'base64'</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">atob</span>(<span class="params">b64Encoded</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> Buffer.from(b64Encoded, <span class="string">'base64'</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> zipResult = btoa(zlib.deflateSync(<span class="string">"1234"</span>));</span><br><span class="line"><span class="built_in">console</span>.log(zipResult);</span><br><span class="line"><span class="comment">// output: eJwzNDI2AQAB+ADL</span></span><br><span class="line"><span class="keyword">var</span> unzipResult = zlib.inflateSync(atob(<span class="string">"eJwzNDI2AQAB+ADL"</span>)).toString();</span><br><span class="line"><span class="built_in">console</span>.log(unzipResult);</span><br><span class="line"><span class="comment">// output: 1234</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> zipResult = btoa(zlib.gzipSync(Buffer.from(<span class="string">"1234"</span>)));</span><br><span class="line"><span class="built_in">console</span>.log(zipResult);</span><br><span class="line"><span class="comment">// output: H4sIAAAAAAAAAzM0MjYBAKPg45sEAAAA</span></span><br><span class="line"><span class="keyword">var</span> unzipResult = zlib.gunzipSync(atob(<span class="string">"H4sIAAAAAAAAAzM0MjYBAKPg45sEAAAA"</span>)).toString();</span><br><span class="line"><span class="built_in">console</span>.log(unzipResult);</span><br><span class="line"><span class="comment">// output: 1234</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://blog.csdn.net/fdipzone/article/details/18368577">https://blog.csdn.net/fdipzone/article/details/18368577</a></li>
<li><a href="https://segmentfault.com/a/1190000016547663">https://segmentfault.com/a/1190000016547663</a></li>
<li><a href="http://blog.uiste.com/2017/20170722-1.html">http://blog.uiste.com/2017/20170722-1.html</a></li>
<li><a href="https://stackoverflow.com/questions/54298026/how-to-unzip-in-php-the-data-previously-zipped-in-javascript">https://stackoverflow.com/questions/54298026/how-to-unzip-in-php-the-data-previously-zipped-in-javascript</a></li>
</ul>
]]></content>
      <categories>
        <category>压缩</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>zlib</tag>
        <tag>pako</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP版本升级注意事项</title>
    <url>/posts/PHP/27c19fc0.html</url>
    <content><![CDATA[<p>PHP版本升级注意事项</p>
<hr>
<a id="more"></a>


<h4 id="php-7-4-Array-and-string-offset-access-syntax-with-curly-braces-is-deprecated"><a href="#php-7-4-Array-and-string-offset-access-syntax-with-curly-braces-is-deprecated" class="headerlink" title="php 7.4 Array and string offset access syntax with curly braces is deprecated"></a>php 7.4 Array and string offset access syntax with curly braces is deprecated</h4><p>PHP 7.2 升级到 7.4 后，提示此警告错误信息。</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">$pad = ord($text{strlen($text) - <span class="number">1</span>});</span><br></pre></td></tr></tbody></table></figure>

<p>vim 目录文件检索</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">'\$\w+\{'</span><br></pre></td></tr></tbody></table></figure>

<p>vim 文件内搜索</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">/\$\w\+{</span><br></pre></td></tr></tbody></table></figure>

<p>php 7.4 后统一字符串数组获取方式，使用中括号代替花括号。</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">$pad = ord($text[strlen($text) - <span class="number">1</span>]);</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP配置文件</title>
    <url>/posts/PHP/836c210a.html</url>
    <content><![CDATA[<p>PHP配置文件</p>
<a id="more"></a>



<h4 id="Session-存储改为-redis"><a href="#Session-存储改为-redis" class="headerlink" title="Session 存储改为 redis"></a>Session 存储改为 redis</h4><figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">session.save_handler</span> = redis</span><br><span class="line"><span class="attr">session.save_path</span> = <span class="string">"tcp://127.0.0.1:6379?auth=1234&amp;database=1"</span></span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>SQLServer由freetds改用odbc</title>
    <url>/posts/PHP/4e89864b.html</url>
    <content><![CDATA[<p>SQLServer由freetds改用odbc</p>
<a id="more"></a>


<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p><a href="https://hub.docker.com/_/microsoft-mssql-server">https://hub.docker.com/_/microsoft-mssql-server</a></p>
<h2 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 ODBC</span></span><br><span class="line">brew install msodbcsql mssql-tools</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 sqlsrv pdo_sqlsrv</span></span><br><span class="line">/usr/<span class="built_in">local</span>/Cellar/php@7.2/7.2.34_3/bin/pecl install sqlsrv pdo_sqlsrv</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>o</span><br><span class="line">error_reporting(E_ALL);</span><br><span class="line">set_time_limit(<span class="number">0</span>);</span><br><span class="line">$serverName = <span class="string">"192.168.36.132"</span>;</span><br><span class="line">$connectionOptions = <span class="keyword">array</span>(</span><br><span class="line">    <span class="comment">//"host" =&gt; "192.168.36.132:1433",</span></span><br><span class="line">    <span class="string">"Database"</span> =&gt; <span class="string">"test"</span>,</span><br><span class="line">    <span class="string">"UID"</span> =&gt; <span class="string">"sa"</span>,</span><br><span class="line">    <span class="string">"PWD"</span> =&gt; <span class="string">"1234"</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Establishes the connection</span></span><br><span class="line">$conn = sqlsrv_connect($serverName, $connectionOptions);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($conn) {</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"Connected!"</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"Not Connected!"</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">    $conn = <span class="keyword">new</span> PDO(<span class="string">"sqlsrv:server=${serverName},1433;Database=${connectionOptions['Database']};ConnectionPooling=0"</span>, $connectionOptions[<span class="string">'UID'</span>], $connectionOptions[<span class="string">'PWD'</span>],</span><br><span class="line">        <span class="keyword">array</span>(</span><br><span class="line">            <span class="comment">//PDO::ATTR_PERSISTENT =&gt; true,</span></span><br><span class="line">            PDO::ATTR_ERRMODE =&gt; PDO::ERRMODE_EXCEPTION</span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">    $stmt = $conn-&gt;query(<span class="string">'SELECT * FROM "user"'</span>);</span><br><span class="line">    $stmt-&gt;execute();</span><br><span class="line">    $row = $stmt-&gt;fetchAll(PDO::FETCH_ASSOC);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>; var_dump($row); <span class="keyword">echo</span> <span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line">} <span class="keyword">catch</span> (\<span class="built_in">Exception</span> $e) {</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>; var_dump($e-&gt;getMessage()); <span class="keyword">echo</span> <span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/Cellar/php@7.2/7.2.34_3/bin/php sqlServer.php</span><br></pre></td></tr></tbody></table></figure>



<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://www.jianshu.com/p/245b14583c47">https://www.jianshu.com/p/245b14583c47</a></li>
<li><a href="https://docs.microsoft.com/zh-cn/sql/connect/php/microsoft-php-drivers-for-sql-server-support-matrix?view=sql-server-2017">SQL Server 的 Microsoft PHP 驱动程序支持矩阵</a></li>
<li><a href="https://docs.microsoft.com/en-us/sql/connect/php/system-requirements-for-the-php-sql-driver?redirectedfrom=MSDN&amp;view=sql-server-ver15">System requirements for the Microsoft Drivers for PHP for SQL Server</a></li>
<li><a href="https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/install-microsoft-odbc-driver-sql-server-macos?view=sql-server-ver15">Install the Microsoft ODBC driver for SQL Server (macOS)</a></li>
<li><a href="https://www.microsoft.com/en-us/sql-server/developer-get-started/php/mac/">Create PHP apps using SQL Server on macOS</a></li>
</ul>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>yaf实现model与controller中间层</title>
    <url>/posts/Yaf/4876768c.html</url>
    <content><![CDATA[<p>yaf实现model与controller中间层</p>
<a id="more"></a>

<h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">./application/middles</span><br><span class="line">├── Backend</span><br><span class="line">│&nbsp;&nbsp; └── Index.php</span><br><span class="line">└── DefaultMiddle.php</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><p><code>Backend/Index.php</code></p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *      [CodeZm!] Author CodeZm[codezm@163.com].</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      </span></span><br><span class="line"><span class="comment"> *      $Id: Index.php 2021-05-20 10:18:54 codezm $</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Middles</span>\<span class="title">Backend</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'index'</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p><code>DefaultMiddle.php</code></p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *      [CodeZm!] Author CodeZm[codezm@163.com].</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      </span></span><br><span class="line"><span class="comment"> *      $Id: DefaultMiddle.php 2021-05-19 14:05:34 codezm $</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Middles</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//class DefaultMiddle {</span></span><br><span class="line"><span class="comment">//class DefaultMiddle extends \Core_CMiddle {</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DefaultMiddle</span> <span class="keyword">extends</span> \<span class="title">MembersModel</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * getMembers</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getMembers</span>(<span class="params">$id</span>) </span>{</span><br><span class="line">        <span class="comment">/* {{{ */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;select([</span><br><span class="line">            <span class="string">'where'</span> =&gt; [</span><br><span class="line">                <span class="string">'uid'</span> =&gt; $id</span><br><span class="line">            ]</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* }}} */</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



</li>
</ul>
<h4 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h4><ol>
<li><p>在 <code>php.ini</code> 中，开启命名空间 <code>yaf.use_namespace=1</code>。</p>
</li>
<li><p>在 <code>conf/application.ini</code> 配置文件中增加以下配置。</p>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">application.library.directory</span> = APPLICATION_PATH <span class="string">"/application"</span></span><br><span class="line"><span class="attr">application.library.namespace</span> = <span class="string">"middles"</span></span><br></pre></td></tr></tbody></table></figure>



</li>
</ol>
<h4 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h4><p>在框架入口文件 <code>application/Bootstrap.php</code> 中，类首行增加以下代码。</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_initLoader</span>(<span class="params"></span>) </span>{</span><br><span class="line">  \Yaf\Loader::getInstance()-&gt;registerNamespace(<span class="string">"\Middles"</span>, APPLICATION_PATH . <span class="string">"/application/middles"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<h4 id="方案三"><a href="#方案三" class="headerlink" title="方案三"></a>方案三</h4><p>此方案与方案二类似，不过是基于 <code>composer</code> 实现。</p>
<figure class="highlight"><table><tbody><tr><td class="code"><pre><span class="line">"autoload": {</span><br><span class="line">  "psr-4": {</span><br><span class="line">    "Middles\\": "application/middles/"</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">composer dumpautoload -o</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Yaf</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>Yaf</tag>
      </tags>
  </entry>
  <entry>
    <title>Yaf类名与命名空间对照表</title>
    <url>/posts/Yaf/50fbdb0e.html</url>
    <content><![CDATA[<p>Yaf类名与命名空间对照表</p>
<hr>
<a id="more"></a>


<table>
<thead>
<tr>
<th>命名空间</th>
<th>类名</th>
</tr>
</thead>
<tbody><tr>
<td>Yaf\Route\Rewrite</td>
<td>Yaf_Route_Rewrite</td>
</tr>
<tr>
<td>Yaf\Bootstrap_Abstract</td>
<td>Yaf_Bootstrap_Abstract</td>
</tr>
<tr>
<td>Yaf\Registry</td>
<td>Yaf_Registry</td>
</tr>
<tr>
<td>Yaf\Dispatcher</td>
<td>Yaf_Dispatcher</td>
</tr>
<tr>
<td>Yaf\Loader</td>
<td>Yaf_Loader</td>
</tr>
<tr>
<td>Yaf\Application</td>
<td>Yaf_Application</td>
</tr>
<tr>
<td>Yaf\View_Interface</td>
<td>Yaf_View_Interface</td>
</tr>
<tr>
<td>Yaf\Controller_Abstract</td>
<td>Yaf_Controller_Abstract</td>
</tr>
<tr>
<td>Yaf\Session</td>
<td>Yaf_Session</td>
</tr>
<tr>
<td>Yaf\Plugin_Abstract</td>
<td>Yaf_Plugin_Abstract</td>
</tr>
<tr>
<td>Yaf\Request_Abstract</td>
<td>Yaf_Request_Abstract</td>
</tr>
<tr>
<td>Yaf\Response_Abstract</td>
<td>Yaf_Response_Abstract</td>
</tr>
<tr>
<td>YAF\ENVIRON</td>
<td>YAF_ENVIRON</td>
</tr>
<tr>
<td>YAF\ERR\NOTFOUND\MODULE</td>
<td>YAF_ERR_NOTFOUND_MODULE</td>
</tr>
<tr>
<td>YAF\ERR\NOTFOUND\CONTROLLER</td>
<td>YAF_ERR_NOTFOUND_CONTROLLER</td>
</tr>
<tr>
<td>YAF\ERR\NOTFOUND\ACTION</td>
<td>YAF_ERR_NOTFOUND_ACTION</td>
</tr>
<tr>
<td>YAF\ERR\NOTFOUND\VIEW</td>
<td>YAF_ERR_NOTFOUND_VIEW</td>
</tr>
<tr>
<td>Yaf\Request\Simple</td>
<td>Yaf_Request_Simple</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Yaf</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>Yaf</tag>
      </tags>
  </entry>
  <entry>
    <title>Yar Error Timeout was reached</title>
    <url>/posts/Error-resolution/b511e3a9.html</url>
    <content><![CDATA[<h2 id="Yar-RPC-扩展"><a href="#Yar-RPC-扩展" class="headerlink" title="Yar RPC 扩展:"></a>Yar RPC 扩展:</h2><p>我在使用 Yar_client(‘<a href="http://www.local.com/Yar_service.php'">http://www.local.com/Yar_service.php'</a>) 返回错误信息：<br>curl exec failed ‘Timeout was reached’ (Yar_Client_Transport_Exception)</p>
<a id="more"></a>

<p>后使用 curl 测试请求错误返回码是 CURLE_COULDNT_RESOLVE_HOST (6) – 无法解析主机， 指定的远程主机无法解析。因为 <a href="http://www.local.com/">www.local.com</a> 只在 nginx 中设置并未在 hosts 中指定</p>
<h3 id="解决方法也非常简单-vim-etc-hosts-加入"><a href="#解决方法也非常简单-vim-etc-hosts-加入" class="headerlink" title="解决方法也非常简单, vim /etc/hosts 加入:"></a>解决方法也非常简单, vim /etc/hosts 加入:</h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">127.0.0.1 www.local.com</span><br></pre></td></tr></tbody></table></figure>
<h3 id="注意-如果你用-docker-作为-php-运行环境"><a href="#注意-如果你用-docker-作为-php-运行环境" class="headerlink" title="注意: 如果你用 docker 作为 php 运行环境"></a>注意: 如果你用 docker 作为 php 运行环境</h3><figure class="highlight docker"><table><tbody><tr><td class="code"><pre><span class="line">当你退出 docker (docker stop CONTAINER-ID, Ctrl-D or exit)</span><br><span class="line">被外部强制退出docker(docker, 终端意外退出等)</span><br></pre></td></tr></tbody></table></figure>
<p>cat /etc/hosts 中的数据可能已被重置, 也会导致上述问题出现( 一开始我是不相信的，测了半天才忽然想起是不是 docker hosts 有问题).</p>
<p>启动 docker(docker attach CONTAINER-ID or docker run -it IMAGES_NAME) 后，可使用 <ctrl-p><ctrl-q> 快捷键 detach, 可避免外部强制退出问题。<br>另外经测试发现 docker commit 也无法保存 hosts 的设置(若有哪位大神知道的请告知一下，在此先谢过啦~ ).</ctrl-q></ctrl-p></p>
]]></content>
      <categories>
        <category>Error_resolution</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>Yar</tag>
      </tags>
  </entry>
  <entry>
    <title>php Extensions</title>
    <url>/posts/PHP/b4d53a9d.html</url>
    <content><![CDATA[<p>PHP 扩展</p>
<hr>
<a id="more"></a>

<ul>
<li><p><a href="https://pecl.php.net/package/xlswriter">xlswriter</a> </p>
<blockquote>
<p>xlswriter是一个 PHP C 扩展，可用于在 Excel 2007+ XLSX 文件中读取数据，插入多个工作表，写入文本、数字、公式、日期、图表、图片和超链接。</p>
</blockquote>
<ul>
<li><a href="https://github.com/viest/php-ext-xlswriter">Github</a>, <a href="https://gitee.com/viest/php-ext-xlswriter">Gitee</a></li>
<li><a href="https://pecl.php.net/package/xlswriter">PECL</a></li>
<li><a href="https://www.php.net/manual/en/book.xlswriter.php">php.net</a>、<a href="https://xlswriter-docs.viest.me/zh-cn">Documents</a></li>
<li>依赖<ul>
<li><code>zlib</code></li>
</ul>
</li>
</ul>
</li>
<li><p><a href="https://juejin.cn/post/6844903759034712078">PHP5.x升级到7.x代码检查工具</a></p>
</li>
<li><p>禁用特殊函数，<code>suhosin</code> 仅支持到 PHP7.1。<a href="https://github.com/mk-j/PHP_diseval_extension">diseval</a></p>
<blockquote>
<p><code>eval</code> 是一个语言构造器而不是一个函数，不能被 <code>disable_functions</code> 禁止。</p>
</blockquote>
<ul>
<li><a href="https://github.com/nbs-system/snuffleupagus">snuffleupagus</a><ul>
<li><a href="https://snuffleupagus.readthedocs.io/">Documents</a></li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>php 开发环境配置</title>
    <url>/posts/CDE/d359544c.html</url>
    <content><![CDATA[<h2 id="记录开发环境配置-for-php-警告-开发模式而非生产模式"><a href="#记录开发环境配置-for-php-警告-开发模式而非生产模式" class="headerlink" title="记录开发环境配置 for php (警告: 开发模式而非生产模式)."></a>记录开发环境配置 for php (警告: 开发模式而非生产模式).</h2><p>主要记录我使用的环境配置中 php 需安装的插件及插件在 php.ini 中及其他 php 功能配置.<br>环境配置主要面向<code>*unix</code>系统.</p>
<a id="more"></a>

<h3 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP."></a>安装 <a href="http://php.net/" title="PHP官方网站">PHP</a>.</h3><p>选择需要下载的 <a href="http://php.net/releases/" title="PHP已发布版本">PHP版本</a> , Downloading…<br>首先, 安装 <a href="http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.14.tar.gz" title="libiconv-1.14.tar.gz">libiconv</a> 库.</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">./configure --prefix=/usr/local/lib/libiconv</span><br></pre></td></tr></tbody></table></figure>
<p>php 配置，编译&amp;安装.</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">tar zxvf ~/Downloads/php-7.1.3.tar.gz &amp;&amp; cd php-7.1.3</span><br><span class="line"></span><br><span class="line">./configure --prefix=/usr/local/php7\</span><br><span class="line">            --with-config-file-path=/usr/local/php7/etc\</span><br><span class="line">            --enable-fpm\</span><br><span class="line">            --with-gd\</span><br><span class="line">            --with-fpm-user=php7\</span><br><span class="line">            --with-fpm-group=php7\</span><br><span class="line">            --with-openssl\</span><br><span class="line">            --with-pdo-mysql\</span><br><span class="line">            --with-iconv=/usr/local/lib/libiconv\</span><br><span class="line">            --with-curl\</span><br><span class="line">            --enable-mbstring\</span><br><span class="line">            --enable-ftp\</span><br><span class="line">            --with-mcrypt</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>
<h5 id="Extension"><a href="#Extension" class="headerlink" title="Extension"></a>Extension</h5><p>Download &amp;&amp; Install php extensions, 若项目不需要某个扩展可略过…</p>
<p>若在 make 时提示 <code>make: warning:  Clock skew detected.  Your build may be incomplete.</code><br>执行 <code>make clean</code> 清楚之前编译生成其他的 *.o 文件即可</p>
<h6 id="Yaf-—-laruence-出品-PHP-框架扩展"><a href="#Yaf-—-laruence-出品-PHP-框架扩展" class="headerlink" title="Yaf  — laruence 出品 PHP 框架扩展."></a><a href="http://pecl.php.net/package/yaf" title="yaf pecl">Yaf</a>  — laruence 出品 PHP 框架扩展.</h6><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">tar zxf yaf-3.0.4.tgz &amp;&amp; cd yaf-3.0.4</span><br><span class="line">/usr/local/php7/bin/phpize</span><br><span class="line">./configure --with-php-config=/usr/local/php7/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>
<h6 id="Xdebug-—-PHP调试工具扩展"><a href="#Xdebug-—-PHP调试工具扩展" class="headerlink" title="Xdebug  — PHP调试工具扩展."></a><a href="https://xdebug.org/download.php" title="xdebug download url">Xdebug</a>  — PHP调试工具扩展.</h6><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">tar zxf xdebug-2.5.1.tgz &amp;&amp; cd xdebug-2.5.1</span><br><span class="line">/usr/local/php7/bin/phpize</span><br><span class="line">./configure --with-php-config=/usr/local/php7/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>
<h6 id="Yar-—-laruence-出品-PHP-RPC-扩展"><a href="#Yar-—-laruence-出品-PHP-RPC-扩展" class="headerlink" title="Yar  — laruence 出品 PHP RPC 扩展."></a><a href="http://pecl.php.net/package/yar" title="yar pecl">Yar</a>  — laruence 出品 PHP RPC 扩展.</h6><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">tar zxf yar-2.0.2.tgz.tgz &amp;&amp; cd yar-2.0.2.tgz</span><br><span class="line">/usr/local/php7/bin/phpize</span><br><span class="line">./configure --with-php-config=/usr/local/php7/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>
<h6 id="php-ext-trie-filter-—-关键词过滤扩展-PHP7版"><a href="#php-ext-trie-filter-—-关键词过滤扩展-PHP7版" class="headerlink" title="php-ext-trie-filter  — 关键词过滤扩展 PHP7版."></a><a href="https://github.com/jiopuud/trie_filter" title="github link">php-ext-trie-filter</a>  — 关键词过滤扩展 PHP7版.</h6><p>首先安装 <a href="ftp://linux.thai.net/pub/ThaiLinux/software/libthai/libdatrie-0.2.4.tar.gz">libdatrie</a></p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">tar zxf libdatrie-0.2.4.tar.gz &amp;&amp; cd libdatrie-0.2.4</span><br><span class="line">./configure --prefix=/usr/local/lib/libdatrie LDFLAGS=-L/usr/local/lib LIBS=-liconv</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">git clone https://github.com/jiopuud/trie_filter</span><br><span class="line"></span><br><span class="line">cd trie_filter &amp;&amp; /usr/local/php7/bin/phpize</span><br><span class="line">./configure --with-php-config=/usr/local/php7/bin/php-config\</span><br><span class="line">            --with-trie_filter=/usr/local/lib/libdatrie</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>
<h6 id="Swoole-—-rango-出品-PHP-高级扩展-更多详情请点击此处了解"><a href="#Swoole-—-rango-出品-PHP-高级扩展-更多详情请点击此处了解" class="headerlink" title="Swoole  — rango 出品 PHP 高级扩展, 更多详情请点击此处了解."></a><a href="https://github.com/swoole/swoole-src" title="github link">Swoole</a>  — rango 出品 PHP 高级扩展, <a href="http://www.swoole.com/">更多详情请点击此处了解</a>.</h6><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">git clone https://github.com/swoole/swoole-src </span><br><span class="line">cd swoole-src &amp;&amp; git checkout v2.0.6</span><br><span class="line"></span><br><span class="line">/usr/local/php7/bin/phpize</span><br><span class="line">./configure --with-php-config=/usr/local/php7/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>
<h6 id="suhosin-—-PHP程序的保护系统扩展-Download-0-9-38版本"><a href="#suhosin-—-PHP程序的保护系统扩展-Download-0-9-38版本" class="headerlink" title="suhosin  — PHP程序的保护系统扩展, Download 0.9.38版本"></a><a href="http://www.suhosin.org/" title="官方网站">suhosin</a>  — PHP程序的保护系统扩展, <a href="https://download.suhosin.org/suhosin-0.9.38.tar.gz" title="下载0.9.38版本">Download 0.9.38版本</a></h6><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">tar zxf suhosin-0.9.38.tar.gz &amp;&amp; cd suhosin-0.9.38</span><br><span class="line">/usr/local/php7/bin/phpize</span><br><span class="line">./configure --with-php-config=/usr/local/php7/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>
<h3 id="PHP-INI-文件配置"><a href="#PHP-INI-文件配置" class="headerlink" title="PHP.INI 文件配置"></a>PHP.INI 文件配置</h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">error_reporting = E_ALL|E_STRICT</span><br><span class="line">display_errors = On</span><br><span class="line">extension_dir = "/usr/local/php7/lib/php/extensions/no-debug-non-zts-20160303/"</span><br><span class="line"></span><br><span class="line">[yaf]</span><br><span class="line">extension=yaf.so</span><br><span class="line">yaf.environ=development_codezm</span><br><span class="line">yaf.use_namespace=0</span><br><span class="line"></span><br><span class="line">[xdebug]</span><br><span class="line">zend_extension=xdebug.so</span><br><span class="line">xdebug.var_display_max_depth = -1</span><br><span class="line">xdebug.var_display_max_children = 2000</span><br><span class="line">xdebug.var_display_max_data = -1</span><br><span class="line"></span><br><span class="line">[yar]</span><br><span class="line">extension=yar.so</span><br><span class="line"></span><br><span class="line">[trie_filter]</span><br><span class="line">extension=trie_filter.so</span><br><span class="line"></span><br><span class="line">[swoole]</span><br><span class="line">extension=swoole.so</span><br><span class="line"></span><br><span class="line">[suhosin]</span><br><span class="line">extension=suhosin.so</span><br><span class="line">suhosin.executor.disable_eval=On</span><br></pre></td></tr></tbody></table></figure>
<h3 id="检查安装结果"><a href="#检查安装结果" class="headerlink" title="检查安装结果"></a>检查安装结果</h3><p>检查某库是否已安装:</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">ldconfig -p | grep libdatrie</span><br></pre></td></tr></tbody></table></figure>
<p>查看php编译参数:</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">/usr/local/php7/bin/php -i | grep configure</span><br></pre></td></tr></tbody></table></figure>
<p>获取安装的所有 php 扩展, 更多详情请使用 php -h 查看帮助.</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">php -m</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>CDE</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>development environment configure</tag>
      </tags>
  </entry>
  <entry>
    <title>常用php-composer库汇总</title>
    <url>/posts/php/abc981b8.html</url>
    <content><![CDATA[<h1 id="常用-php-composer-库汇总"><a href="#常用-php-composer-库汇总" class="headerlink" title="常用 php composer 库汇总"></a>常用 php composer 库汇总</h1><a id="more"></a>

<h5 id="PHP-CodeSniffer"><a href="#PHP-CodeSniffer" class="headerlink" title="PHP_CodeSniffer"></a><a href="https://github.com/squizlabs/PHP_CodeSniffer">PHP_CodeSniffer</a></h5><p>PHP_CodeSniffer是两个PHP脚本的集合;主要的phpcs脚本，用于标记PHP、JavaScript和CSS文件，以检测违反已定义的编码标准，以及第二个phpcbf脚本，用于自动纠正违反编码标准的行为。PHP_CodeSniffer是一个重要的开发工具，它可以确保代码保持干净和一致</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">composer global require <span class="string">"squizlabs/php_codesniffer=*"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/.composer/vendor/bin"</span> &gt;&gt; ~/.zshrc</span><br><span class="line">phpcs --version</span><br><span class="line">PHP_CodeSniffer version 3.6.0 (stable) by Squiz (http://www.squiz.net)</span><br><span class="line">phpcbf --verion</span><br><span class="line">PHP_CodeSniffer version 3.6.0 (stable) by Squiz (http://www.squiz.net)</span><br></pre></td></tr></tbody></table></figure>



<h5 id="PHPCompatibility"><a href="#PHPCompatibility" class="headerlink" title="PHPCompatibility"></a><a href="https://github.com/PHPCompatibility/PHPCompatibility">PHPCompatibility</a></h5><p>这是一组用于检查PHP跨版本兼容性的PHP CodeSniffer嗅探器。它将允许您分析您的代码与更高和更低版本的PHP的兼容性。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">composer global require <span class="string">"phpcompatibility/php-compatibility=*"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加 PHPCompatibility 检测扩展</span></span><br><span class="line"><span class="comment"># 此命令实际操作的配置文件：~/.composer/vendor/squizlabs/php_codesniffer/CodeSniffer.conf</span></span><br><span class="line">phpcs --config-set installed_paths ~/.composer/vendor/phpcompatibility/php-compatibility</span><br><span class="line"><span class="comment"># 检测代码是否兼容 php-7.4 版本</span></span><br><span class="line">phpcs --standard=PHPCompatibility --runtime-set testVersion 7.4  --extensions=php ./</span><br></pre></td></tr></tbody></table></figure>



<h5 id="Snowflake，Snowflake-Algorithm-Twitter-announced"><a href="#Snowflake，Snowflake-Algorithm-Twitter-announced" class="headerlink" title="Snowflake，Snowflake Algorithm (Twitter announced)."></a><a href="https://github.com/godruoyi/php-snowflake">Snowflake</a>，Snowflake Algorithm (Twitter announced).</h5><ul>
<li><a href="https://packagist.org/packages/godruoyi/php-snowflake">Packagist</a></li>
</ul>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">composer require godruoyi/php-snowflake</span><br></pre></td></tr></tbody></table></figure>



<h5 id="Hashids，从整数中生成简短的唯一id"><a href="#Hashids，从整数中生成简短的唯一id" class="headerlink" title="Hashids，从整数中生成简短的唯一id"></a><a href="https://github.com/vinkla/hashids">Hashids</a>，从整数中生成简短的唯一id</h5><ul>
<li><p><a href="https://hashids.org/">官方网站</a></p>
</li>
<li><p><a href="https://packagist.org/packages/hashids/hashids">Packagist</a></p>
</li>
</ul>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">composer require hashids/hashids</span><br></pre></td></tr></tbody></table></figure>



<h5 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a><a href="https://github.com/firebase/php-jwt">JWT</a></h5><ul>
<li><a href="https://packagist.org/packages/firebase/php-jwt">Packagist</a></li>
</ul>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">composer require firebase/php-jwt</span><br></pre></td></tr></tbody></table></figure>



<h5 id="Guzzle"><a href="#Guzzle" class="headerlink" title="Guzzle"></a><a href="https://github.com/guzzle/guzzle">Guzzle</a></h5><ul>
<li><a href="http://guzzlephp.org/">官方文档</a></li>
<li><a href="https://guzzle-cn.readthedocs.io/zh_CN/latest/">Guzzle 6 中文文档</a></li>
<li><a href="https://learnku.com/articles/31855">使用 Guzzle 中间件进行优雅的请求重试</a></li>
<li><a href="https://packagist.org/packages/guzzlehttp/guzzle">Packagist</a></li>
</ul>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">composer require guzzlehttp/guzzle</span><br></pre></td></tr></tbody></table></figure>



<h5 id="PHPUnit"><a href="#PHPUnit" class="headerlink" title="PHPUnit"></a><a href="https://github.com/sebastianbergmann/phpunit">PHPUnit</a></h5><ul>
<li><a href="https://phpunit.readthedocs.io/zh_CN/latest/installation.html">官方中文文档</a></li>
<li><a href="https://packagist.org/packages/phpunit/phpunit">Packagist</a></li>
</ul>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">composer require phpunit/phpunit</span><br></pre></td></tr></tbody></table></figure>



<h5 id="Easywechat"><a href="#Easywechat" class="headerlink" title="Easywechat"></a><a href="https://github.com/w7corp/easywechat">Easywechat</a></h5><ul>
<li><a href="https://packagist.org/packages/overtrue/wechat">Packagist</a></li>
</ul>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># php &gt;= 7.2</span></span><br><span class="line">composer require <span class="string">"overtrue/wechat:^4.2"</span></span><br><span class="line"><span class="comment"># php &gt;= 7.4</span></span><br><span class="line">composer require <span class="string">"overtrue/wechat:^5.0"</span></span><br></pre></td></tr></tbody></table></figure>



<p><a href="https://github.com/PHPOffice/PhpSpreadsheet">PhpSpreadsheet</a></p>
<ul>
<li><a href="https://phpspreadsheet.readthedocs.io/">官方文档</a></li>
</ul>
<p>是 PHPExcel 的新版本，要求 PHP 版本 &gt;= 7.3。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">composer require --prefer-dist phpoffice/phpspreadsheet</span><br><span class="line">composer dumpautoload -o</span><br></pre></td></tr></tbody></table></figure>



<h2 id="Composer-命令行工具使用"><a href="#Composer-命令行工具使用" class="headerlink" title="Composer 命令行工具使用"></a>Composer 命令行工具使用</h2><h4 id="Composer-包安装"><a href="#Composer-包安装" class="headerlink" title="Composer 包安装"></a>Composer 包安装</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">composer install --prefer-dist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生产模式，优化</span></span><br><span class="line">save_handler</span><br></pre></td></tr></tbody></table></figure>



<h4 id="Composer-script"><a href="#Composer-script" class="headerlink" title="Composer script"></a>Composer script</h4><h5 id="composer-script-定义"><a href="#composer-script-定义" class="headerlink" title="composer script 定义"></a>composer script 定义</h5><figure class="highlight"><table><tbody><tr><td class="code"><pre><span class="line">"scripts": {</span><br><span class="line">	"test": [</span><br><span class="line">		"php -r 'echo \"Hello World!\" . PHP_EOL;// echo Hello World!'",</span><br><span class="line">	]</span><br><span class="line">},</span><br><span class="line">"scripts-descriptions": {</span><br><span class="line">  "test": "Hello World!",</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h5 id="查看-script-列表"><a href="#查看-script-列表" class="headerlink" title="查看 script 列表"></a>查看 script 列表</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ composer run -l</span><br><span class="line">scripts:</span><br><span class="line"><span class="built_in">test</span>                     Hello World!</span><br><span class="line">$ composer run-script -l</span><br><span class="line">scripts:</span><br><span class="line"><span class="built_in">test</span>                     Hello World!</span><br></pre></td></tr></tbody></table></figure>

<h5 id="执行-script"><a href="#执行-script" class="headerlink" title="执行 script"></a>执行 script</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ composer <span class="built_in">test</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="Composer-2-0"><a href="#Composer-2-0" class="headerlink" title="Composer 2.0"></a>Composer 2.0</h4><h5 id="升级到-2-0"><a href="#升级到-2-0" class="headerlink" title="升级到 2.0"></a>升级到 2.0</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">composer self-update --2</span><br></pre></td></tr></tbody></table></figure>

<h5 id="降级到-1-0"><a href="#降级到-1-0" class="headerlink" title="降级到 1.0"></a>降级到 1.0</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">composer self-update --rollback</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">composer self-update --1</span><br></pre></td></tr></tbody></table></figure>

<h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="https://laravelacademy.org/post/22100">Composer 2.0 发布带来的性能优化、新特性和升级指南</a></li>
</ul>
<h4 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h4><h5 id="常用全局dev包"><a href="#常用全局dev包" class="headerlink" title="常用全局dev包"></a>常用全局dev包</h5><p>全局安装路径可通过 <code>composer config -l</code> 命令查看。</p>
<h6 id="Registry-管理"><a href="#Registry-管理" class="headerlink" title="Registry 管理"></a>Registry 管理</h6><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ composer global require slince/composer-registry-manager ^2.0</span><br></pre></td></tr></tbody></table></figure>

<p>用法：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ composer repo:ls</span><br><span class="line"><span class="comment"># 使用 aliyun registry 镜像站</span></span><br><span class="line">$ composer repo:use aliyun</span><br></pre></td></tr></tbody></table></figure>



<h6 id="phpunit"><a href="#phpunit" class="headerlink" title="phpunit"></a>phpunit</h6><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ composer global require --dev phpunit/phpunit</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ wget -c https://phar.phpunit.de/phpunit-8.5.15.phar -O /usr/<span class="built_in">local</span>/bin/phpunit</span><br><span class="line">$ chmod u+x /usr/<span class="built_in">local</span>/bin/phpunit</span><br><span class="line">$ phpunit --version</span><br><span class="line">PHPUnit 8.5.15 by Sebastian Bergmann and contributors.</span><br></pre></td></tr></tbody></table></figure>



<h5 id="常用包"><a href="#常用包" class="headerlink" title="常用包"></a>常用包</h5><h6 id="phpunit-1"><a href="#phpunit-1" class="headerlink" title="phpunit"></a>phpunit</h6><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">composer require --prefer-dist --dev <span class="string">"phpunit/phpunit"</span></span><br><span class="line">composer dumpautoload -o -a</span><br><span class="line">composer <span class="built_in">exec</span> phpunit</span><br><span class="line"></span><br><span class="line">composer install</span><br><span class="line">./vendor/bin/phpunit</span><br></pre></td></tr></tbody></table></figure>



<h4 id="移除包"><a href="#移除包" class="headerlink" title="移除包"></a>移除包</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">composer remove phpunit/phpunit</span><br></pre></td></tr></tbody></table></figure>



<h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 配置 阿里云 Composer 镜像站</span></span><br><span class="line">composer config repo.packagist composer https://mirrors.aliyun.com/composer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 还原官方 Composer 镜像站</span></span><br><span class="line">composer config -g --<span class="built_in">unset</span> repo.packagist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看全局配置</span></span><br><span class="line">composer config -g -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 thinkphp 框架</span></span><br><span class="line">composer create-project topthink/think</span><br><span class="line"><span class="comment"># 安装 Laravel 框架</span></span><br><span class="line">composer require laravel/framework</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略平台版本要求</span></span><br><span class="line">composer create-project composer/satis:dev-main --ignore-platform-reqs</span><br><span class="line"><span class="comment"># 扫描构建</span></span><br><span class="line">php bin/satis build satis.json public -v</span><br></pre></td></tr></tbody></table></figure>

<h5 id="安装-monolog-日志库范例"><a href="#安装-monolog-日志库范例" class="headerlink" title="安装 monolog 日志库范例"></a>安装 monolog 日志库范例</h5><ol>
<li><p>在项目目录中，执行 <code>composer require monolog/monolog</code> 命令。</p>
<blockquote>
<p>会自动创建 <code>composer.json</code> 文件。</p>
</blockquote>
</li>
<li><p>新建 <code>composer.json</code> 文件</p>
<ol>
<li>登记需要安装的依赖。</li>
<li>执行 <code>composer install</code> 安装命令。</li>
</ol>
<blockquote>
<p>若没有任何依赖，直接运行 <code>composer install</code> 会安装 <code>Composer</code> 的自动加载文件。</p>
</blockquote>
</li>
</ol>
<h5 id="composer-create-project-命令解析"><a href="#composer-create-project-命令解析" class="headerlink" title="composer create-project 命令解析"></a><code>composer create-project</code> 命令解析</h5><p>从功能上来说等价于 <code>git clone</code> 和 <code>composer install</code> 两个命令。</p>
<h4 id="VCS（Version-Control-System-版本控制系统）版本状态标识"><a href="#VCS（Version-Control-System-版本控制系统）版本状态标识" class="headerlink" title="VCS（Version Control System 版本控制系统）版本状态标识"></a>VCS（Version Control System 版本控制系统）版本状态标识</h4><table>
<thead>
<tr>
<th>名称</th>
<th>实例</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>空版本号</td>
<td>monolog/monolog</td>
<td>默认使用最新稳定版本</td>
</tr>
<tr>
<td>确切版本号</td>
<td>monolog/monolog:”1.0.2”</td>
<td>指定包的确切版本</td>
</tr>
<tr>
<td>范围<br>&gt;<br>&lt;<br>!=<br>|| 或者<br>- 连接符</td>
<td>monolog/monolog:”&gt;=1.0”,monolog/monolog:”=2.0”</td>
<td>使用比较操作符可以指定有效的版本范围。有效的操作符：&gt;、&gt;=、&lt;、&lt;=、!=。你可以定义多个范围，用逗号隔开，这将被视为一个逻辑 AND 处理。管道符号 || 将作为逻辑 OR 处理。AND 的优先级高于 OR。<br>优先使用最高版本。</td>
</tr>
<tr>
<td>通配符</td>
<td>1.0.* 或 *</td>
<td>使用通配符 * 来指定一种模式。<br><code>1.0.*</code> 与 <code>&gt;=1.0,&lt;1.</code> 是等效的。</td>
</tr>
<tr>
<td>赋值运算符（最低版本）</td>
<td>~1.2.3</td>
<td>对于遵循语义化版本号的项目非常有用。<br><code>~1.2.3</code> 与 <code>&gt;=1.2.3,&lt;1.3</code> 是等效的。<br><code>~1.2</code> 与 <code>&gt;=1.2.0,&lt;2.0.0</code> 是等效的</td>
</tr>
<tr>
<td>脱字号版本（最低版本） carret</td>
<td>^1.2.3</td>
<td>比 ~ 范围大一级。<br><code>^1.2.3</code> 与 <code>&gt;=1.2.3,&lt;2.0.0</code>是等效的。<br><code>^1.2</code> 与 <code>&gt;=1.2.0,&lt;2.0.0</code> 是等效的</td>
</tr>
</tbody></table>
<h6 id="与-修饰符区别。"><a href="#与-修饰符区别。" class="headerlink" title="~ 与 ^ 修饰符区别。"></a><code>~</code> 与 <code>^</code> 修饰符区别。</h6><ul>
<li><p><code>~</code> 与 <code>^</code> 在修饰两个版本号时，效果是一样的，示例：</p>
<ul>
<li><code>~1.2</code> 与 <code>^1.2</code> 都与 <code>&gt;=1.2.0,&lt;2.0</code> 是等效的</li>
</ul>
</li>
<li><p><code>~</code> 与 <code>^</code> 在修饰三个版本号时，<code>^</code> 比 <code>~</code> 范围更大，示例：</p>
<ul>
<li><code>~1.2.3</code>  与 <code>&gt;=1.2.3,&lt;1.3</code> 是等效的。</li>
<li><code>^1.2.3</code> 与 <code>&gt;=1.2.3,&lt;2.0</code> 是等效的。</li>
</ul>
</li>
</ul>
<h5 id="版本变化"><a href="#版本变化" class="headerlink" title="版本变化"></a>版本变化</h5><ul>
<li>alpha<ul>
<li>内测版</li>
<li>bug多</li>
<li>不稳定</li>
<li>内部版本</li>
<li>不断添加新功能</li>
</ul>
</li>
<li>beta1、beta2<ul>
<li>公测版</li>
<li>不稳定（相比alpha稳定一些）</li>
<li>bug相对多</li>
<li>不断添加新功能</li>
</ul>
</li>
<li>RC<ul>
<li>候选版</li>
<li>经过多个 beta 版本逐渐稳定</li>
<li>基本不添加新功能</li>
<li>修复完 bug 即可进入正式发布版</li>
</ul>
</li>
<li>GA、Release、Stable、Final 等<ul>
<li>正式版</li>
<li>稳定</li>
<li>bug很少</li>
<li>推荐生产使用</li>
</ul>
</li>
</ul>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul>
<li><a href="https://packagist.org/packages/">Composer 官方仓库</a></li>
<li><a href="https://getcomposer.org/">Composer 官方网站</a></li>
<li><a href="https://www.phpcomposer.com/">Composer 中文网站</a></li>
<li><a href="https://phpunit.de/getting-started/phpunit-8.html">phpunit</a></li>
</ul>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">##### 使用私有composer-repo</span></span><br><span class="line">composer create-project codezm/php-skeleton:dev-master yaf-test --repository-url http://packagist.codezm.com:8081 --no-secure-http</span><br><span class="line"></span><br><span class="line"><span class="comment">##### 使用私有git-repo</span></span><br><span class="line">composer create-project codezm/php-skeleton yaf_tests --repository=<span class="string">"{\"url\": \"https://gitee.com/codezm/php-skeleton.git\", \"type\": \"vcs\"}"</span> --stability=dev --remove-vcs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 失败</span></span><br><span class="line">composer create-project codezm/php-skeleton --repository-url=https://gitee.com/codezm/php-skeleton.git yaf-tests</span><br></pre></td></tr></tbody></table></figure>



<h5 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h5><ol>
<li>所有带有 <code>Yaf</code> 前缀的，均在 <code>skeleton</code> 包中继承。</li>
</ol>
<h6 id="删除-composer-repo-缓存代码"><a href="#删除-composer-repo-缓存代码" class="headerlink" title="删除 composer repo 缓存代码"></a>删除 composer repo 缓存代码</h6><p>在新服务器克隆私有仓库代码时，会提示输入账号信息，composer 会提示是否 store credentials。若存储后删除了 <code>~/.config/composer/auth.json</code> 文件，则需要删除 composer repo 缓存代码，否则将会导致无法更新最新包。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /root/.cache/composer/repo/</span><br><span class="line">$ rm -rf https---gitee.com-codezm*</span><br></pre></td></tr></tbody></table></figure>





<h4 id="安装某扩展而不更新其他依赖"><a href="#安装某扩展而不更新其他依赖" class="headerlink" title="安装某扩展而不更新其他依赖"></a>安装某扩展而不更新其他依赖</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">composer require iflytekop/xfyun-sdk --no-update</span><br><span class="line">composer update iflytekop/xfyun-sdk</span><br><span class="line">composer dump-autoload -o</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定版本号</span></span><br><span class="line">composer update iflytekop/xfyun-sdk:2.0.0</span><br></pre></td></tr></tbody></table></figure>



<h4 id="只添加扩展到-composer-json（不更新composer-lock）-而不安装此扩展"><a href="#只添加扩展到-composer-json（不更新composer-lock）-而不安装此扩展" class="headerlink" title="只添加扩展到 composer.json（不更新composer.lock） 而不安装此扩展"></a>只添加扩展到 composer.json（不更新composer.lock） 而不安装此扩展</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">composer require iflytekop/xfyun-sdk --no-update</span><br></pre></td></tr></tbody></table></figure>



<h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://learnku.com/php/t/1901/correct-method-for-installing-composer-expansion-pack">正确的 Composer 扩展包安装方法</a></li>
<li><a href="https://www.cnblogs.com/zpchcbd/p/17050970.html">firebase/php-jwt库的引入加密混淆问题CVE-2021-46743 </a></li>
</ul>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>composer</tag>
      </tags>
  </entry>
  <entry>
    <title>启动小巧python-web服务</title>
    <url>/posts/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/27922544.html</url>
    <content><![CDATA[<p>启动小巧python-web服务</p>
<a id="more"></a>

<h2 id="Python2"><a href="#Python2" class="headerlink" title="Python2"></a>Python2</h2><h4 id="python-自带的web服务器模块"><a href="#python-自带的web服务器模块" class="headerlink" title="python  自带的web服务器模块"></a>python  自带的web服务器模块</h4><ul>
<li><p>BaseHTTPServer</p>
<p>提供基本的Web服务和处理器类，分别是HTTPServer和BaseHTTPRequestHandler</p>
</li>
<li><p>SimpleHTTPServer</p>
<p>包含执行GET和HEAD请求的SimpleHTTPRequestHandler类。</p>
</li>
<li><p>CGIHTTPServer</p>
<p>包含处理POST请求和执行CGIHTTPRequestHandler类。</p>
</li>
</ul>
<h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">python2.7 -m CGIHTTPServer 8888</span><br></pre></td></tr></tbody></table></figure>

<h5 id="脚本一："><a href="#脚本一：" class="headerlink" title="脚本一："></a>脚本一：</h5><p>在上方服务启动脚本所在的目录中创建 <code>cgi-bin</code> 目录，并新建 <code>hello.py</code> 文件，文件内容：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> cgi</span><br><span class="line"></span><br><span class="line">fs=cgi.FieldStorage()</span><br><span class="line"></span><br><span class="line">inputs = {}</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> fs.keys():</span><br><span class="line">        inputs[key] = fs[key].value</span><br><span class="line"></span><br><span class="line"><span class="comment"># get</span></span><br><span class="line">print(inputs)</span><br></pre></td></tr></tbody></table></figure>

<p>测试请求</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">curl 127.0.0.1:8888/cgi-bin/hello.py -d "a=codezm" -v</span><br></pre></td></tr></tbody></table></figure>

<h5 id="脚本二："><a href="#脚本二：" class="headerlink" title="脚本二："></a>脚本二：</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"></span><br><span class="line">import cgi</span><br><span class="line">reshtml='''Content-Type:text/html\n</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;hello world CGI&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">your input is :&lt;B&gt;%s&lt;/B&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;'''</span><br><span class="line">form=cgi.FieldStorage()</span><br><span class="line">a=form['a'].value</span><br><span class="line">print(reshtml%(a))</span><br></pre></td></tr></tbody></table></figure>

<p>发起网络请求：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ curl -v 127.0.0.1:8000/hello.py?a=1</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;hello world CGI&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">your input is :&lt;B&gt;1&lt;/B&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Python3"><a href="#Python3" class="headerlink" title="Python3"></a>Python3</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 默认打开8000端口</span></span><br><span class="line">python -m http.server --cgi</span><br></pre></td></tr></tbody></table></figure>



<h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p>更多详情见：<a href="https://gitee.com/codezm/ruoyi-deploy">https://gitee.com/codezm/ruoyi-deploy</a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://cloud.tencent.com/developer/article/1570739">https://cloud.tencent.com/developer/article/1570739</a></li>
</ul>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Vite开启proxy代理日志</title>
    <url>/posts/Vite/ac340ec4.html</url>
    <content><![CDATA[<p>Vite 的 Proxy 主要是为了解决跨域问题，为了保证转发规则是否正确， 本文将介绍两种方法：</p>
<a id="more"></a>

<h4 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">pnpm dev --debug</span><br></pre></td></tr></tbody></table></figure>



<h4 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h4><p>vim vite.config.js</p>
<figure class="highlight"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// vite 相关配置</span></span><br><span class="line">server: {</span><br><span class="line">  port: 80,</span><br><span class="line">  host: true,</span><br><span class="line">  open: true,</span><br><span class="line">  proxy: {</span><br><span class="line">    <span class="comment">// https://cn.vitejs.dev/config/#server-proxy</span></span><br><span class="line">    '/dev-api': {</span><br><span class="line">      target: 'http://localhost:8080',</span><br><span class="line">      changeOrigin: true,</span><br><span class="line">      rewrite: (p) =&gt; {</span><br><span class="line">        console.log("[PROXY] " + p);</span><br><span class="line">        return p.replace(/^\/dev-api/, '');</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">➜  ruoyi-ui git:(codezm) ✗ pnpm run dev</span><br><span class="line"></span><br><span class="line">&gt; ruoyi@3.8.3 dev /Volumes/work/web/<span class="built_in">test</span></span><br><span class="line">&gt; vite</span><br><span class="line"></span><br><span class="line">                                                                                                                                                                                                                                  15:37:44</span><br><span class="line">  vite v2.9.14 dev server running at:</span><br><span class="line"></span><br><span class="line">  &gt; Local:    http://localhost:80/                                                                                                                                                                                                15:37:44</span><br><span class="line">  &gt; Network:  http://192.168.36.47:80/                                                                                                                                                                                            15:37:44</span><br><span class="line">                                                                                                                                                                                                                                  15:37:44</span><br><span class="line">  ready <span class="keyword">in</span> 3368ms.</span><br><span class="line"></span><br><span class="line">[PROXY]/dev-api/getInfo                                                                                                                                                                                                           15:37:50</span><br><span class="line">[PROXY]/dev-api/getRouters                                                                                                                                                                                                        15:37:51</span><br><span class="line">[PROXY]/dev-api/captchaImage                                                                                                                                                                                                      15:37:51</span><br><span class="line">[PROXY]/dev-api/getInfo                                                                                                                                                                                                           15:37:52</span><br><span class="line">[PROXY]/dev-api/getRouters                                                                                                                                                                                                        15:37:52</span><br><span class="line">[PROXY]/dev-api/getInfo                                                                                                                                                                                                           15:37:53</span><br><span class="line">[PROXY]/dev-api/getRouters                                                                                                                                                                                                        15:37:53</span><br><span class="line">[PROXY]/dev-api/getInfo                                                                                                                                                                                                           15:37:53</span><br><span class="line">[PROXY]/dev-api/system/dict/data/<span class="built_in">type</span>/sys_normal_disable                                                                                                                                                                          15:37:53</span><br><span class="line">[PROXY]/dev-api/system/post/list?pageNum=1&amp;pageSize=10</span><br></pre></td></tr></tbody></table></figure>





<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://segmentfault.com/q/1010000041998649">vite的proxy如何开启代理日志？</a></li>
<li><a href="https://cn.vitejs.dev/config/server-options.html">https://cn.vitejs.dev/config/server-options.html</a></li>
</ul>
]]></content>
      <categories>
        <category>Vite</category>
      </categories>
      <tags>
        <tag>Vite</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue2使用总结</title>
    <url>/posts/Vue/7549d56b.html</url>
    <content><![CDATA[<p>Vue2使用总结</p>
<a id="more"></a>



<h3 id="在新窗口、新页面中打开"><a href="#在新窗口、新页面中打开" class="headerlink" title="在新窗口、新页面中打开"></a>在新窗口、新页面中打开</h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">let routeData = this.$router.resolve({ path: '/reportpreview', query: {  id: id } });</span><br><span class="line">window.open(routeData.href, '_blank');</span><br></pre></td></tr></tbody></table></figure>



<h4 id="npm-国内镜像源配置"><a href="#npm-国内镜像源配置" class="headerlink" title="npm 国内镜像源配置"></a>npm 国内镜像源配置</h4><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cnpm</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npmmirror.com</span><br><span class="line">cnpm install -g @vue/cli</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">for</span> ever</span></span><br><span class="line">npm config set registry https://registry.npmmirror.com --global</span><br><span class="line"><span class="meta">#</span><span class="bash"> show registry</span></span><br><span class="line">npm config get registry</span><br><span class="line">npm install -g @vue/cli</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> temporary</span></span><br><span class="line">npm --registry https://registry.npmmirror.com install -g vue-cli</span><br></pre></td></tr></tbody></table></figure>

<h4 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h4><ul>
<li><p>[vue官网][vue]</p>
</li>
<li><p>[vue中文网站][2]</p>
</li>
<li><p><a href="https://cli.vuejs.org/zh/">vue-cli</a></p>
<blockquote>
<p> vue.js开发的标准工具</p>
</blockquote>
<p>用来构建前端开发工程目录的脚手架工具</p>
<p>创建一个项目</p>
</li>
</ul>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">vue ui</span><br></pre></td></tr></tbody></table></figure>



<h4 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h4><p>依赖安装 - 运行依赖(代码是压缩的)</p>
<h4 id="elementui"><a href="#elementui" class="headerlink" title="elementui"></a>elementui</h4><ul>
<li><a href="https://element.eleme.cn/#/zh-CN/component/installation">element官网</a></li>
</ul>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue中实现el-table导出xlsx文件下载</title>
    <url>/posts/Vue/386f97a7.html</url>
    <content><![CDATA[<p>Vue中实现el-table导出xlsx文件下载</p>
<a id="more"></a>

<h2 id="安装-xlsx-组件"><a href="#安装-xlsx-组件" class="headerlink" title="安装 xlsx 组件"></a>安装 xlsx 组件</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">pnpm install --save xlsx</span><br></pre></td></tr></tbody></table></figure>



<h2 id="实现代码示例"><a href="#实现代码示例" class="headerlink" title="实现代码示例"></a>实现代码示例</h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-table id="download" ...&gt;</span><br><span class="line">  &lt;/el-table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import * as XLSX from 'xlsx';</span><br><span class="line">	import FileSaver from 'file-saver';</span><br><span class="line">  export default {</span><br><span class="line">    methods: {</span><br><span class="line">      /** 导出按钮操作 */</span><br><span class="line">      handleExport() {</span><br><span class="line">        let xlsxParam = {raw:true}</span><br><span class="line">        var wb = XLSX.utils.table_to_book(</span><br><span class="line">          document.querySelector("#download"),</span><br><span class="line">          xlsxParam</span><br><span class="line">        );</span><br><span class="line">        var wbout = XLSX.write(wb, {</span><br><span class="line">            bookType: "xlsx",</span><br><span class="line">            bookSST: true,</span><br><span class="line">            type: "array"</span><br><span class="line">        });</span><br><span class="line">        try {</span><br><span class="line">            FileSaver.saveAs(</span><br><span class="line">                new Blob([wbout], { type: "application/octet-stream" }),</span><br><span class="line">                `调查问卷-${this.parseTime(new Date(), '{y}_{m}_{d}_{h}:{i}')}.xlsx`</span><br><span class="line">            );</span><br><span class="line">        } catch (e) {</span><br><span class="line">            if (typeof console !== "undefined") console.log(e, wbout);</span><br><span class="line">        }</span><br><span class="line">        return wbout;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>xlsx</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue项目打包</title>
    <url>/posts/Vue/dc764163.html</url>
    <content><![CDATA[<p>Vue项目打包</p>
<hr>
<h4 id="vite-打包时不清空-dist-目录中已存在文件"><a href="#vite-打包时不清空-dist-目录中已存在文件" class="headerlink" title="vite 打包时不清空 dist 目录中已存在文件"></a>vite 打包时不清空 dist 目录中已存在文件</h4><p><a href="https://cn.vitejs.dev/config/build-options.html#build-emptyoutdir">https://cn.vitejs.dev/config/build-options.html#build-emptyoutdir</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">vite build --emptyOutDir=<span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="vue-（webpack）打包时不清空-dist-目录中已存在文件"><a href="#vue-（webpack）打包时不清空-dist-目录中已存在文件" class="headerlink" title="vue （webpack）打包时不清空 dist 目录中已存在文件"></a>vue （webpack）打包时不清空 dist 目录中已存在文件</h4><p><a href="https://cli.vuejs.org/zh/guide/cli-service.html#vue-cli-service-build">https://cli.vuejs.org/zh/guide/cli-service.html#vue-cli-service-build</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">vue-cli build --no-clean</span><br></pre></td></tr></tbody></table></figure>



<a id="more"></a>

]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vite</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>ruoyi-ui封装wangEditor富文本编辑器组件</title>
    <url>/posts/Vue/9959774c.html</url>
    <content><![CDATA[<h1 id="ruoyi-ui封装-wangEditor-富文本编辑器组件"><a href="#ruoyi-ui封装-wangEditor-富文本编辑器组件" class="headerlink" title="ruoyi-ui封装 wangEditor 富文本编辑器组件"></a>ruoyi-ui封装 <a href="https://www.wangeditor.com/">wangEditor</a> 富文本编辑器组件</h1><blockquote>
<p>图片存储在七牛云。</p>
</blockquote>
<h2 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">npm install @wangeditor/editor:5.1.14 @wangeditor/editor-for-vue:^5.1.12</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>注意：<code>@wangeditor/editor</code> 一定要使用 <code>5.1.14</code> 版本，经测试发现 <code>5.1.15 - 5.1.17</code> 都存在bug。</p>
</blockquote>
<h2 id="组件定义"><a href="#组件定义" class="headerlink" title="组件定义"></a>组件定义</h2><p>vim <code>ruoyi-ui/src/components/WEditor/index.vue</code></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div style="border: 1px solid #ccc;"&gt;</span><br><span class="line">        &lt;Toolbar</span><br><span class="line">            style="border-bottom: 1px solid #ccc"</span><br><span class="line">            :editor="editorRef"</span><br><span class="line">            :defaultConfig="toolbarConfig"</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;Editor</span><br><span class="line">            style="height: 500px; overflow-y: hidden;"</span><br><span class="line">            v-model="html"</span><br><span class="line">            :defaultConfig="editorConfig"</span><br><span class="line">            @onChange="handleChange"</span><br><span class="line">            @onCreated="handleCreated"</span><br><span class="line">        /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    import { getToken } from "@/utils/auth";</span><br><span class="line">    import {getPictureToken} from "@/api/oss";</span><br><span class="line">    import useUserStore from '@/store/modules/user'</span><br><span class="line">    import * as qiniu from "qiniu-js";</span><br><span class="line">    import { v4 as uuidv4 } from "uuid";</span><br><span class="line"></span><br><span class="line">    import '@wangeditor/editor/dist/css/style.css' // 引入 css</span><br><span class="line">    import { reactive, onBeforeUnmount, onMounted, shallowRef, ref } from 'vue'</span><br><span class="line">    import { Editor, Toolbar } from '@wangeditor/editor-for-vue'</span><br><span class="line">    // 编辑器实例，必须用 shallowRef</span><br><span class="line">    const editorRef = shallowRef()</span><br><span class="line">    const props = defineProps({</span><br><span class="line">        modelValue: {</span><br><span class="line">            type: String,</span><br><span class="line">            default: ""</span><br><span class="line">        },</span><br><span class="line">        imageDir: {</span><br><span class="line">            type: String,</span><br><span class="line">            default: "unknow",</span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line"></span><br><span class="line">    const emits = defineEmits({</span><br><span class="line">        'update:modelValue': ""</span><br><span class="line">    });</span><br><span class="line">    const html = computed({</span><br><span class="line">        get() {</span><br><span class="line">            return props.modelValue</span><br><span class="line">        },</span><br><span class="line">        set(value) {</span><br><span class="line">            emits('update:modelValue', value)</span><br><span class="line">        }</span><br><span class="line">    })</span><br><span class="line"></span><br><span class="line">    const editor = ref(null);</span><br><span class="line"></span><br><span class="line">    const toolbarConfig= reactive({});</span><br><span class="line">    const editorConfig= reactive({</span><br><span class="line">        placeholder:'请输入内容...',</span><br><span class="line">        MENU_CONF: {</span><br><span class="line">            uploadImage: {</span><br><span class="line">                customUpload(file, insertFn) {</span><br><span class="line">                    // 获取签名</span><br><span class="line">                    getPictureToken().then(res =&gt; {</span><br><span class="line">                        var keyPrefix = "news/" + useUserStore().uid + "/" + props.imageDir + "/";</span><br><span class="line">                        </span><br><span class="line">                        // https://developer.qiniu.com/kodo/1283/javascript</span><br><span class="line">                        const token = res.data.token,</span><br><span class="line">                            key = keyPrefix + uuidv4() + "." + file.name.split(".")[1],</span><br><span class="line">                            putExtra = {</span><br><span class="line">                                fname: file.name,</span><br><span class="line">                                // mimeType: file.type,</span><br><span class="line">                            },</span><br><span class="line">                            config = {</span><br><span class="line">                                useCdnDomain: true,</span><br><span class="line">                                region: res.data.region</span><br><span class="line">                            };</span><br><span class="line">                        let observer = {</span><br><span class="line">                            next (res) {</span><br><span class="line">                                console.log(res)</span><br><span class="line">                                console.log('已上传大小，单位为字节：' + res.total.loaded)</span><br><span class="line">                                console.log('本次上传的总量控制信息，单位为字节：' + res.total.size)</span><br><span class="line">                                console.log('当前上传进度，范围：0～100：' + res.total.percent);</span><br><span class="line">                            },</span><br><span class="line">                            error (err) {</span><br><span class="line">                                console.log(err)</span><br><span class="line">                                console.log(err.code)</span><br><span class="line">                                console.log(err.message)</span><br><span class="line">                                console.log(err.isRequestError)</span><br><span class="line">                                console.log(err.reqId)</span><br><span class="line">                            },</span><br><span class="line">                            complete (res) {</span><br><span class="line">                                console.log(res)</span><br><span class="line">                                insertFn(res.data.url, "图片", res.data.url);</span><br><span class="line">                            }</span><br><span class="line">                        };</span><br><span class="line"></span><br><span class="line">                        const observable = qiniu.upload(file, key, token, putExtra, config)</span><br><span class="line">                        const subscription = observable.subscribe(observer) // 上传开始</span><br><span class="line">                    });</span><br><span class="line">                },</span><br><span class="line">                // 上传之前触发</span><br><span class="line">                onBeforeUpload(file) {    // JS 语法</span><br><span class="line">                    console.log("onBeforeUpload", file);</span><br><span class="line">                    // file 选中的文件，格式如 { key: file }</span><br><span class="line">                    return file</span><br><span class="line"></span><br><span class="line">                    // 可以 return</span><br><span class="line">                    // 1. return file 或者 new 一个 file ，接下来将上传</span><br><span class="line">                    // 2. return false ，不上传这个 file</span><br><span class="line">                },</span><br><span class="line">                // 上传进度的回调函数</span><br><span class="line">                onProgress(progress) {       // JS 语法</span><br><span class="line">                    // progress 是 0-100 的数字</span><br><span class="line">                    console.log('progress', progress)</span><br><span class="line">                },</span><br><span class="line"></span><br><span class="line">                // 单个文件上传成功之后</span><br><span class="line">                onSuccess(file, res) {          // JS 语法</span><br><span class="line">                    console.log(`${file.name} 上传成功`, res)</span><br><span class="line">                },</span><br><span class="line"></span><br><span class="line">                // 单个文件上传失败</span><br><span class="line">                onFailed(file, res) {           // JS 语法</span><br><span class="line">                    console.log(`${file.name} 上传失败`, res)</span><br><span class="line">                },</span><br><span class="line"></span><br><span class="line">                // 上传错误，或者触发 timeout 超时</span><br><span class="line">                onError(file, err, res) {               // JS 语法</span><br><span class="line">                    console.log(`${file.name} 上传出错`, err, res)</span><br><span class="line">                },</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line">    const mode= ref('default'); // or 'simple'</span><br><span class="line"></span><br><span class="line">    const handleCreated = (t) =&gt; {</span><br><span class="line">        // console.log("handleCreated", t)</span><br><span class="line">        editorRef.value = t // 记录 editor 实例，重要！</span><br><span class="line">    };</span><br><span class="line">    onMounted(()=&gt;{</span><br><span class="line">        // console.log("onMounted")</span><br><span class="line">    });</span><br><span class="line">    onBeforeUnmount(() =&gt; {</span><br><span class="line">        // console.log("onBeforeUnmount")</span><br><span class="line">    });</span><br><span class="line">    function handleChange(editor) {</span><br><span class="line">        // console.log(editor.getHtml(), editor);</span><br><span class="line">    }</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure>

<h2 id="全局注册组件"><a href="#全局注册组件" class="headerlink" title="全局注册组件"></a>全局注册组件</h2><p>vim <code>ruoyi-ui/src/main.js</code></p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> WEditor <span class="keyword">from</span> <span class="string">"@/components/WEditor"</span></span><br><span class="line">...</span><br><span class="line">app.component(<span class="string">'WEditor'</span>, WEditor)</span><br></pre></td></tr></tbody></table></figure>

<h2 id="组件使用"><a href="#组件使用" class="headerlink" title="组件使用"></a>组件使用</h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;WEditor v-model="form.summary" imageDir="course" /&gt;</span><br></pre></td></tr></tbody></table></figure>]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>项目中添加 jsconfig.json 文件</title>
    <url>/posts/Vue/5e5ddc84.html</url>
    <content><![CDATA[<p>项目中添加 jsconfig.json 文件，<code>jsconfig.json </code>的工作区中有一个定义项目上下文的文件时，JavaScript 体验会得到改善。</p>
<a id="more"></a>

<h2 id="文件代码示例"><a href="#文件代码示例" class="headerlink" title="文件代码示例"></a>文件代码示例</h2><figure class="highlight json"><table><tbody><tr><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="attr">"allowJs"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"compilerOptions"</span>: {</span><br><span class="line">        <span class="attr">"baseUrl"</span>: <span class="string">"."</span>,</span><br><span class="line">        <span class="attr">"paths"</span>: {</span><br><span class="line">            <span class="attr">"@/*"</span>: [<span class="string">"./src/*"</span>]</span><br><span class="line">        }</span><br><span class="line">    },</span><br><span class="line">    <span class="attr">"include"</span>: [<span class="string">"src/**/*"</span>],</span><br><span class="line">    <span class="attr">"exclude"</span>: [<span class="string">"node_modules"</span>]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<h2 id="文件作用"><a href="#文件作用" class="headerlink" title="文件作用"></a>文件作用</h2><p>目录中存在此类文件表明该目录是 JavaScript 项目的根目录。文件本身可以选择列出属于项目的文件、要从项目中排除的文件以及编译器选项。</p>
<p>当使用 <code>Visual Studio Code</code> 编辑器打开存在 <code>jsconfig.json</code> 文件的项目时，可以获得更好的上下文体验。</p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://segmentfault.com/a/1190000041125740">jsconfig.json到底是做什么的</a></li>
</ul>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>饿了么element-ui中el-table组件列宽自适应</title>
    <url>/posts/Vue/dce48eb0.html</url>
    <content><![CDATA[<p>饿了么element-ui中el-table组件根据列内容实现列宽自适应，本项目将以 <code>ruoyi-ui</code> 修改为例。</p>
<a id="more"></a>

<h2 id="单页示例代码"><a href="#单页示例代码" class="headerlink" title="单页示例代码"></a>单页示例代码</h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;el-table</span><br><span class="line">    v-loading="loading"</span><br><span class="line">    :data="deptList"</span><br><span class="line">    row-key="deptId"</span><br><span class="line">    resizable</span><br><span class="line">    :border="true"</span><br><span class="line">    :fit="false"</span><br><span class="line">    ref="elTable"</span><br><span class="line">    @header-dragend="handleTableHeaderDragend"</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;el-table-column prop="deptName" label="全称" /&gt;</span><br><span class="line">    &lt;el-table-column prop="phone" label="手机号" class-name="auto-width" /&gt;</span><br><span class="line">&lt;/el-table&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default {</span><br><span class="line">      name: "Dept",</span><br><span class="line">      data() {</span><br><span class="line">        return {</span><br><span class="line">          // 遮罩层</span><br><span class="line">          loading: true,</span><br><span class="line">          // 表格树数据</span><br><span class="line">          deptList: [],</span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      created() {</span><br><span class="line">         this.getSchoolList();</span><br><span class="line">      },</span><br><span class="line">      methods: {</span><br><span class="line">        adjustColumnWidth(table, padding, dragClsName, increaseWidth) {</span><br><span class="line">            var padding = padding || 32;</span><br><span class="line">            const colgroup = table.querySelector("colgroup");</span><br><span class="line">            const colDefs = [...colgroup.querySelectorAll("col")];</span><br><span class="line">            const tableScrollWidth = table.scrollWidth;</span><br><span class="line">            var totalWidth = 0; // 累计剩余列宽度和</span><br><span class="line">            var autoWith = 0; // 自动列宽度</span><br><span class="line">            var autoWithClsName = null; // 自动列class-name</span><br><span class="line">            colDefs.forEach((col) =&gt; {</span><br><span class="line">              const clsName = col.getAttribute("name");</span><br><span class="line">              const cells = [</span><br><span class="line">                ...table.querySelectorAll(`td.${clsName}`),</span><br><span class="line">                ...table.querySelectorAll(`th.${clsName}`),</span><br><span class="line">              ];</span><br><span class="line">              if (cells[0]?.classList?.contains?.("leave-alone")) {</span><br><span class="line">                return;</span><br><span class="line">              }</span><br><span class="line">              const widthList = cells.map((el) =&gt; {</span><br><span class="line">                return el.querySelector(".cell")?.scrollWidth || 0;</span><br><span class="line">              });</span><br><span class="line">              const max = Math.max(...widthList);</span><br><span class="line">              var elWidth = max + padding;</span><br><span class="line">              if (!dragClsName &amp;&amp; cells[0]?.classList?.contains?.("auto-width")) {</span><br><span class="line">                autoWithClsName = clsName;</span><br><span class="line">                autoWith = elWidth;</span><br><span class="line">                return;</span><br><span class="line">              }</span><br><span class="line">              table.querySelectorAll(`col[name=${clsName}]`).forEach((el) =&gt; {</span><br><span class="line">                const oElWidth = parseInt(el.getAttribute("_width"));</span><br><span class="line">                if (oElWidth) {</span><br><span class="line">                  if (dragClsName === clsName) {</span><br><span class="line">                    if (oElWidth + increaseWidth &gt;= elWidth) {</span><br><span class="line">                      elWidth = oElWidth + increaseWidth;</span><br><span class="line">                    }</span><br><span class="line">                  } else {</span><br><span class="line">                    if (dragClsName) {</span><br><span class="line">                      elWidth = oElWidth;</span><br><span class="line">                    }</span><br><span class="line">                  }</span><br><span class="line">                }</span><br><span class="line">                el.setAttribute("width", elWidth);</span><br><span class="line">                el.setAttribute("_width", elWidth);</span><br><span class="line">              });</span><br><span class="line">              totalWidth += elWidth;</span><br><span class="line">            });</span><br><span class="line">            if (autoWithClsName &amp;&amp; !dragClsName) {</span><br><span class="line">              if (tableScrollWidth &gt; totalWidth) {</span><br><span class="line">                var willSettingAutoWith = tableScrollWidth - totalWidth + padding;</span><br><span class="line">                if (willSettingAutoWith &gt; autoWith) {</span><br><span class="line">                  autoWith = willSettingAutoWith;</span><br><span class="line">                }</span><br><span class="line">              }</span><br><span class="line">              table.querySelectorAll(`col[name=${autoWithClsName}]`).forEach((el) =&gt; {</span><br><span class="line">                el.setAttribute("width", autoWith);</span><br><span class="line">                el.setAttribute("_width", autoWith);</span><br><span class="line">              });</span><br><span class="line">            }</span><br><span class="line">        },</span><br><span class="line">        handleTableHeaderDragend(newWidth, oldWidth, column, event) {</span><br><span class="line">          // this.$nextTick((e) =&gt; {</span><br><span class="line">            setTimeout(() =&gt; {</span><br><span class="line">                this.adjustColumnWidth(this.$refs.elTable.$el, 6, column.id, newWidth - oldWidth);</span><br><span class="line">            }, 100);</span><br><span class="line">          // })</span><br><span class="line">        },</span><br><span class="line">        getSchoolList() {</span><br><span class="line">          this.loading = true;</span><br><span class="line">          listDeptType(this.queryParams).then(response =&gt; {</span><br><span class="line">            this.deptList = this.handleTree(response.rows, "deptId");</span><br><span class="line">            this.total = response.total;</span><br><span class="line">        		this.loading = false;</span><br><span class="line">            this.$nextTick((e) =&gt; {</span><br><span class="line">              this.adjustColumnWidth(this.$refs.elTable.$el, 6);</span><br><span class="line">            })</span><br><span class="line">          })</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">/deep/.el-table .cell {</span><br><span class="line">  display: inline-block !important;</span><br><span class="line">  white-space: nowrap !important;</span><br><span class="line">  width: auto !important;</span><br><span class="line">  overflow: auto !important;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">/deep/.el-table .el-table__body-wrapper {</span><br><span class="line">  overflow-x: auto;</span><br><span class="line">}</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></tbody></table></figure>



<h2 id="挂载全局样式及全局方法"><a href="#挂载全局样式及全局方法" class="headerlink" title="挂载全局样式及全局方法"></a>挂载全局样式及全局方法</h2><ul>
<li><p>src/assets/styles/index.scss</p>
<figure class="highlight scss"><table><tbody><tr><td class="code"><pre><span class="line"><span class="selector-class">.adjust-cw-el-table</span> <span class="selector-class">.cell</span> {</span><br><span class="line">  <span class="attribute">display</span>: inline-block <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: auto <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: auto <span class="meta">!important</span>;</span><br><span class="line">  <span class="comment">// white-space: pre-wrap !important;</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.adjust-cw-el-table</span> <span class="selector-class">.el-table__body-wrapper</span> {</span><br><span class="line">  <span class="attribute">overflow-x</span>: auto;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>src/utils/ruoyi.js</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// el-table 自适应列宽</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">adjustColumnWidth</span>(<span class="params">table, padding, dragClsName, increaseWidth</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> padding = padding || <span class="number">32</span>;</span><br><span class="line">  <span class="keyword">const</span> colgroup = table.querySelector(<span class="string">"colgroup"</span>);</span><br><span class="line">  <span class="keyword">const</span> colDefs = [...colgroup.querySelectorAll(<span class="string">"col"</span>)];</span><br><span class="line">  <span class="keyword">const</span> tableScrollWidth = table.scrollWidth;</span><br><span class="line">  <span class="keyword">var</span> totalWidth = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> autoWith = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> autoWithClsName = <span class="literal">null</span>;</span><br><span class="line">  colDefs.forEach(<span class="function">(<span class="params">col</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">const</span> clsName = col.getAttribute(<span class="string">"name"</span>);</span><br><span class="line">    <span class="keyword">const</span> cells = [</span><br><span class="line">      ...table.querySelectorAll(<span class="string">`td.<span class="subst">${clsName}</span>`</span>),</span><br><span class="line">      ...table.querySelectorAll(<span class="string">`th.<span class="subst">${clsName}</span>`</span>),</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">if</span> (cells[<span class="number">0</span>]?.classList?.contains?.(<span class="string">"leave-alone"</span>)) {</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">const</span> widthList = cells.map(<span class="function">(<span class="params">el</span>) =&gt;</span> {</span><br><span class="line">      <span class="keyword">return</span> el.querySelector(<span class="string">".cell"</span>)?.scrollWidth || <span class="number">0</span>;</span><br><span class="line">    });</span><br><span class="line">    <span class="keyword">const</span> max = <span class="built_in">Math</span>.max(...widthList);</span><br><span class="line">    <span class="keyword">var</span> elWidth = max + padding;</span><br><span class="line">    <span class="keyword">if</span> (!dragClsName &amp;&amp; cells[<span class="number">0</span>]?.classList?.contains?.(<span class="string">"auto-width"</span>)) {</span><br><span class="line">      autoWithClsName = clsName;</span><br><span class="line">      autoWith = elWidth;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    table.querySelectorAll(<span class="string">`col[name=<span class="subst">${clsName}</span>]`</span>).forEach(<span class="function">(<span class="params">el</span>) =&gt;</span> {</span><br><span class="line">      <span class="keyword">const</span> oElWidth = <span class="built_in">parseInt</span>(el.getAttribute(<span class="string">"_width"</span>));</span><br><span class="line">      <span class="keyword">if</span> (oElWidth) {</span><br><span class="line">        <span class="keyword">if</span> (dragClsName === clsName) {</span><br><span class="line">          <span class="keyword">if</span> (oElWidth + increaseWidth &gt;= elWidth) {</span><br><span class="line">            elWidth = oElWidth + increaseWidth;</span><br><span class="line">          }</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">          <span class="keyword">if</span> (dragClsName) {</span><br><span class="line">            elWidth = oElWidth;</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      el.setAttribute(<span class="string">"width"</span>, elWidth);</span><br><span class="line">      el.setAttribute(<span class="string">"_width"</span>, elWidth);</span><br><span class="line">    });</span><br><span class="line">    totalWidth += elWidth;</span><br><span class="line">  });</span><br><span class="line">  <span class="keyword">if</span> (autoWithClsName &amp;&amp; !dragClsName) {</span><br><span class="line">    <span class="keyword">if</span> (tableScrollWidth &gt; totalWidth) {</span><br><span class="line">      <span class="keyword">var</span> willSettingAutoWith = tableScrollWidth - totalWidth + padding;</span><br><span class="line">      <span class="keyword">if</span> (willSettingAutoWith &gt; autoWith) {</span><br><span class="line">        autoWith = willSettingAutoWith;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    table.querySelectorAll(<span class="string">`col[name=<span class="subst">${autoWithClsName}</span>]`</span>).forEach(<span class="function">(<span class="params">el</span>) =&gt;</span> {</span><br><span class="line">      el.setAttribute(<span class="string">"width"</span>, autoWith);</span><br><span class="line">      el.setAttribute(<span class="string">"_width"</span>, autoWith);</span><br><span class="line">    });</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>添加全局方法：src/main.js</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> { parseTime, resetForm, addDateRange, selectDictLabel, selectDictLabels, handleTree, adjustColumnWidth } <span class="keyword">from</span> <span class="string">"@/utils/ruoyi"</span>;</span><br><span class="line"></span><br><span class="line">Vue.prototype.adjustColumnWidth = adjustColumnWidth</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>示例</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;template&gt;        </span><br><span class="line">	&lt;el-table v-loading="loading" :data="userList" @selection-change="handleSelectionChange"</span><br><span class="line">    resizable</span><br><span class="line">    :border="true"</span><br><span class="line">    :fit="false"</span><br><span class="line">    ref="elTable"</span><br><span class="line">    @header-dragend="handleTableHeaderDragend"</span><br><span class="line">    class="adjust-cw-el-table"</span><br><span class="line">		&gt;</span><br><span class="line">    &lt;el-table-column type="selection"  align="center" /&gt;</span><br><span class="line">    &lt;el-table-column label="用户编号" align="center" key="userId" prop="userId" v-if="columns[0].visible" /&gt;</span><br><span class="line">    &lt;el-table-column label="账户名" align="center" key="userName" prop="userName" v-if="columns[1].visible" :show-overflow-tooltip="true"&gt;&lt;/el-table-column&gt;</span><br><span class="line">    &lt;el-table-column align="center" key="nickName" prop="nickName" v-if="columns[2].visible" :show-overflow-tooltip="true"&gt;</span><br><span class="line">    &lt;template slot="header"&gt;</span><br><span class="line">        &lt;div&gt;姓名&lt;/div&gt;</span><br><span class="line">        &lt;div&gt;手机号&lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template slot-scope="scope"&gt;</span><br><span class="line">        {{ scope.row.nickName }}&lt;br/&gt;{{ scope.row.phonenumber }}</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line">    &lt;el-table-column</span><br><span class="line">    label="操作"</span><br><span class="line">    align="center"</span><br><span class="line">    class-name="small-padding auto-width"</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;template slot-scope="scope" v-if="scope.row.userId !== 1"&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">        size="mini"</span><br><span class="line">        type="text"</span><br><span class="line">        icon="el-icon-edit"</span><br><span class="line">        @click="handleUpdate(scope.row)"</span><br><span class="line">        v-hasPermi="['system:user:edit']"</span><br><span class="line">        &gt;修改&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">        size="mini"</span><br><span class="line">        type="text"</span><br><span class="line">        icon="el-icon-delete"</span><br><span class="line">        @click="handleDelete(scope.row)"</span><br><span class="line">        v-hasPermi="['system:user:remove']"</span><br><span class="line">        &gt;删除&lt;/el-button&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line">&lt;/el-table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default {</span><br><span class="line">  methods: {</span><br><span class="line">    handleTableHeaderDragend(newWidth, oldWidth, column, event) {</span><br><span class="line">      setTimeout(() =&gt; {</span><br><span class="line">          this.adjustColumnWidth(this.$refs.elTable.$el, 6, column.id, newWidth - oldWidth);</span><br><span class="line">      }, 100);</span><br><span class="line">    },</span><br><span class="line">    getList() {</span><br><span class="line">      this.loading = true;</span><br><span class="line">      listUser(this.addDateRange(this.queryParams, this.dateRange)).then(response =&gt; {</span><br><span class="line">          this.userList = response.rows;</span><br><span class="line">          this.$nextTick((e) =&gt; {</span><br><span class="line">            this.adjustColumnWidth(this.$refs.elTable.$el, 6);</span><br><span class="line">          })</span><br><span class="line">          this.total = response.total;</span><br><span class="line">          this.loading = false;</span><br><span class="line">        }</span><br><span class="line">      );</span><br><span class="line">    },</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure>





</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><p><a href="https://www.cnblogs.com/lzkwin/p/13575805.html">（几乎）完美实现 el-table 列宽自适应 </a> <a href="https://github.com/kaysonli/v-fit-column">https://github.com/kaysonli/v-fit-column</a></p>
<blockquote>
<p>通过 Vue 的directive指令(自定义指令）实现</p>
</blockquote>
</li>
<li><p><a href="https://github.com/legendJaden/AFTableColumn">https://github.com/legendJaden/AFTableColumn</a></p>
<blockquote>
<p>不支持 Vue 3.0</p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>element-ui</tag>
        <tag>el-table</tag>
      </tags>
  </entry>
  <entry>
    <title>Ansible 使用总结</title>
    <url>/posts/Ansible/cb961a65.html</url>
    <content><![CDATA[<p>Ansible 使用总结</p>
<a id="more"></a>

<p>Ansible默认通过 SSH 协议管理机器.</p>
<p>安装Ansible之后,不需要启动或运行一个后台进程,或是添加一个数据库.只要在一台电脑(可以是一台笔记本)上安装好,就可以通过这台电脑管理一组远程的机器.在远程被管理的机器上,不需要安装运行任何软件,因此升级Ansible版本不会有太多问题.</p>
<ul>
<li><p>管理主机</p>
</li>
<li><p>托管节点</p>
<p>管理主机使用 ssh 协议与托管节点通信，默认使用 sftp, 可在 <code>ansible.cfg</code> 文件中配置成 <code>scp</code> 方式。托管节点需要安装 <code>Python</code>。</p>
</li>
</ul>
<h4 id="ansible-配置文件"><a href="#ansible-配置文件" class="headerlink" title="ansible 配置文件"></a><a href="https://github.com/ansible/ansible/blob/devel/examples/ansible.cfg">ansible 配置文件</a></h4><p>查找ansible.cfg文件的顺序</p>
<ul>
<li><code>ANSIBLE_CONFIG</code> 环境变量所指定的文件</li>
<li>./ansible.cfg</li>
<li>~/.ansible.cfg</li>
<li>/etc/ansible/ansible.cfg</li>
</ul>
<p>配置举例:</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">#指定inventory文件位置</span><br><span class="line">inventory = hosts  </span><br></pre></td></tr></tbody></table></figure>

<h4 id="inventory-配置文件"><a href="#inventory-配置文件" class="headerlink" title="inventory 配置文件"></a><a href="https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html">inventory 配置文件</a></h4><p>用于配置托管节点的主机信息。</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line">[<span class="string">test</span>]</span><br><span class="line"><span class="string">virtualbox</span> <span class="string">ansible_ssh_host=host.docker.internal</span> <span class="string">ansible_ssh_port=2222</span> <span class="string">ansible_ssh_user=root</span> <span class="string">ansible_ssh_pass='root'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置托管节点 python 解析器路径</span></span><br><span class="line"><span class="comment"># ansible_python_interpreter=/usr/bin/python3</span></span><br></pre></td></tr></tbody></table></figure>

<h4 id=""><a href="#" class="headerlink" title=""></a></h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ansible myhost --sudo -m raw -a <span class="string">"yum install -y python2 python-simplejson"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ansible <span class="built_in">test</span> --su --su-user=<span class="string">"root"</span> -m raw -a <span class="string">"dnf search python"</span></span><br></pre></td></tr></tbody></table></figure>





<p>对 <code>test</code> 组中所有托管节点执行以下命令</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ansible <span class="built_in">test</span> -m shell -a <span class="string">"pwd"</span></span><br></pre></td></tr></tbody></table></figure>

<h4 id="ansible"><a href="#ansible" class="headerlink" title="ansible"></a>ansible</h4><p>Ansibe AD-Hoc 临时命令执行工具，常用于临时命令的执行</p>
<h4 id="ansible-doc"><a href="#ansible-doc" class="headerlink" title="ansible-doc"></a>ansible-doc</h4><p><code>ansible-doc</code> 命令常用于获取模块信息及其使用帮助。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">#获取全部模块的信息</span></span><br><span class="line">ansible-doc -l</span><br><span class="line"><span class="comment">#获取指定模块的使用帮助</span></span><br><span class="line">ansible-doc -s MOD_NAME</span><br></pre></td></tr></tbody></table></figure>

<h4 id="ansible-playbook"><a href="#ansible-playbook" class="headerlink" title="ansible-playbook"></a>ansible-playbook</h4><p>Ansible 定制自动化的任务集编排工具。</p>
<h4 id="ansible-galaxy"><a href="#ansible-galaxy" class="headerlink" title="ansible-galaxy"></a>ansible-galaxy</h4><p><a href="https://galaxy.ansible.com/">Galaxy</a> 是一个查找和分享 <code>ansible</code> 内容的中心。<code>ansible-galaxy</code> 可以通过这个平台，下载共享者的 <code>roles</code>。</p>
<h4 id="ansible-vault"><a href="#ansible-vault" class="headerlink" title="ansible-vault"></a>ansible-vault</h4><p>Ansible 文件加密工具</p>
<h4 id="ansible-console"><a href="#ansible-console" class="headerlink" title="ansible-console"></a>ansible-console</h4><p>Ansible基于Linux Consoble界面可与用户交互的命令执行工具</p>
<h4 id="playbook"><a href="#playbook" class="headerlink" title="playbook"></a>playbook</h4><p>playbook是ansible实现批量自动化最重要的手段，采用yaml语法。</p>
<p>从 <code>Create Directory by root</code> 任务开始执行。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ansible-playbook demo.yml --start-at-task=<span class="string">"Create Directory by root"</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="roles"><a href="#roles" class="headerlink" title="roles"></a>roles</h4><p>role是task文件、变量文件、handlers文件的集合体，这个集合体的显著特点是：<strong>可移植性和可重复执行性。</strong></p>
<p>实践中，通常我们以<strong>部署某个服务</strong>为单元作为一个role ，然后将这些服务单元（role）放在一个roles目录下。主playbook文件通过调用roles目录下的role，来实现各种灵活多变的部署需求。</p>
<p>使用 <code>ansible-galaxy</code> 创建一个 <code>php</code> 服务实例：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ansible-galaxy init php</span><br></pre></td></tr></tbody></table></figure>

<p>使用 <code>ansible-galaxy</code> 命令自动创建的role是最全的目录结构，根据需求，可以删除不用的目录文件。</p>
<ul>
<li>tasks目录：存放task列表。若role要生效，此目录必须要有一个主task文件main.yml，在main.yml中可以使用include包含同目录(即tasks)中的其他文件。</li>
<li>handlers目录：存放handlers的目录，若要生效，则文件必须名为main.yml文件。</li>
<li>files目录：在task中执行copy或script模块时，如果使用的是相对路径，则会到此目录中寻找对应的文件。</li>
<li>templates目录：在task中执行template模块时，如果使用的是相对路径，则会到此目录中寻找对应的模块文件。</li>
<li>vars目录：定义专属于该role的变量，如果要有var文件，则必须为main.yml文件。</li>
<li>defaults目录：定义角色默认变量，角色默认变量的优先级最低，会被任意其他层次的同名变量覆盖。如果要有var文件，则必须为main.yml文件。</li>
<li>meta目录：用于定义角色依赖，如果要有角色依赖关系，则文件必须为main.yml。</li>
</ul>
<p>参考:</p>
<p>​    - <a href="https://www.cnblogs.com/f-ck-need-u/p/7567417.html">https://www.cnblogs.com/f-ck-need-u/p/7567417.html</a></p>
<h4 id="托管节点-python-环境安装"><a href="#托管节点-python-环境安装" class="headerlink" title="托管节点 python 环境安装"></a>托管节点 <code>python</code> 环境安装</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ansible -m raw -a <span class="string">"dnf install -y python3"</span> virtualbox</span><br></pre></td></tr></tbody></table></figure>







<h4 id="查看内置的-Facts-变量"><a href="#查看内置的-Facts-变量" class="headerlink" title="查看内置的 Facts 变量"></a>查看内置的 <code>Facts</code> 变量</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ansible -m setup virtualbox</span><br></pre></td></tr></tbody></table></figure>



<h4 id="无界面模式启动虚拟机"><a href="#无界面模式启动虚拟机" class="headerlink" title="无界面模式启动虚拟机"></a>无界面模式启动虚拟机</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">VBoxManage startvm --<span class="built_in">type</span> headless centos-8.1.1911</span><br></pre></td></tr></tbody></table></figure>



<h4 id="项目构建"><a href="#项目构建" class="headerlink" title="项目构建"></a>项目构建</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">mkdir product</span><br><span class="line"><span class="built_in">cd</span> product</span><br><span class="line">touch php.yml mysql.yml nginx.yml</span><br><span class="line">mkdir roles</span><br><span class="line"><span class="built_in">cd</span> roles</span><br><span class="line">ansible-galaxy init php</span><br><span class="line">ansible-galaxy init mysql</span><br><span class="line">ansible-galaxy init nginx</span><br><span class="line"><span class="built_in">cd</span> ../../</span><br><span class="line">	</span><br></pre></td></tr></tbody></table></figure>

<p>目录结构如下</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">tree ./product -L 3</span><br><span class="line"></span><br><span class="line">./product</span><br><span class="line">├── mysql.yml</span><br><span class="line">├── nginx.yml</span><br><span class="line">├── php.yml</span><br><span class="line">└── roles</span><br><span class="line">    ├── mysql</span><br><span class="line">    │&nbsp;&nbsp; ├── README.md</span><br><span class="line">    │&nbsp;&nbsp; ├── defaults</span><br><span class="line">    │&nbsp;&nbsp; ├── handlers</span><br><span class="line">    │&nbsp;&nbsp; ├── meta</span><br><span class="line">    │&nbsp;&nbsp; ├── tasks</span><br><span class="line">    │&nbsp;&nbsp; ├── tests</span><br><span class="line">    │&nbsp;&nbsp; └── vars</span><br><span class="line">    ├── nginx</span><br><span class="line">    │&nbsp;&nbsp; ├── README.md</span><br><span class="line">    │&nbsp;&nbsp; ├── defaults</span><br><span class="line">    │&nbsp;&nbsp; ├── handlers</span><br><span class="line">    │&nbsp;&nbsp; ├── meta</span><br><span class="line">    │&nbsp;&nbsp; ├── tasks</span><br><span class="line">    │&nbsp;&nbsp; ├── tests</span><br><span class="line">    │&nbsp;&nbsp; └── vars</span><br><span class="line">    └── php</span><br><span class="line">        ├── README.md</span><br><span class="line">        ├── defaults</span><br><span class="line">        ├── handlers</span><br><span class="line">        ├── meta</span><br><span class="line">        ├── tasks</span><br><span class="line">        ├── tests</span><br><span class="line">        └── vars</span><br></pre></td></tr></tbody></table></figure>



<p>对托管节点进行部署</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ansible-playbook ./product/php.yml</span><br></pre></td></tr></tbody></table></figure>





<h5 id="什么是-EPEL"><a href="#什么是-EPEL" class="headerlink" title="什么是 EPEL"></a><a href="https://www.jianshu.com/p/4f4c0897075f">什么是 EPEL</a></h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">yum install -y epel-release</span><br><span class="line">vi /etc/yum.repos.d/epel.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑[epel]下的baseurl前的#号去掉，mirrorlist前添加#号。正确配置如下：</span></span><br><span class="line">[epel]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 6 - <span class="variable">$basearch</span></span><br><span class="line">baseurl=http://download.fedoraproject.org/pub/epel/6/<span class="variable">$basearch</span></span><br><span class="line"><span class="comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-6&amp;arch=$basearchfailovermethod=priorityenabled=1gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> yum config-manager --add-repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></tbody></table></figure>



<p>首先需要安装一个叫”epel-release”的软件包，这个软件包会自动配置yum的软件仓库。当然你也可以不安装这个包，自己配置软件仓库也是一样的。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 epel </span></span><br><span class="line">yum install -y epel-release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载 epel</span></span><br><span class="line">rpm -e epel-release</span><br></pre></td></tr></tbody></table></figure>





<p>使用 <code>阿里云</code> epel 源</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">yum install -y wget</span><br><span class="line">wget -P /etc/yum.repos.d/ https://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">yum install -y php-pear php-devel</span><br></pre></td></tr></tbody></table></figure>



<p>php <code>7.4.9</code> 默认编译安装后，没有 <code>pecl</code> 命令。</p>
<p><code>php-config</code> 得到扩展安装目录</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">/data/php/bin/php-config --extension-dir</span><br></pre></td></tr></tbody></table></figure>



<p>vi /data/php/etc/php.ini</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">extension_dir=<span class="string">"/data/php/lib/php/extensions/no-debug-non-zts-20190902"</span></span><br><span class="line"></span><br><span class="line">[mcrypt]</span><br><span class="line">extension=mcrypt.so</span><br></pre></td></tr></tbody></table></figure>





<p>ansible 使用参考</p>
<ul>
<li><a href="https://www.cnblogs.com/gongjingyun123--/p/11600316.html">https://www.cnblogs.com/gongjingyun123--/p/11600316.html</a></li>
<li><a href="https://www.cnblogs.com/f-ck-need-u/p/7567417.html">https://www.cnblogs.com/f-ck-need-u/p/7567417.html</a></li>
<li><a href="https://www.cnblogs.com/mauricewei/p/10056494.html">https://www.cnblogs.com/mauricewei/p/10056494.html</a> ansible 基础优化</li>
<li><a href="https://www.cnblogs.com/mauricewei/p/10056458.html">https://www.cnblogs.com/mauricewei/p/10056458.html</a> roles</li>
<li><a href="https://juejin.im/post/6844903631066513421">https://juejin.im/post/6844903631066513421</a></li>
<li><a href="https://www.cnblogs.com/kevingrace/p/11647338.html">https://www.cnblogs.com/kevingrace/p/11647338.html</a></li>
<li><a href="https://www.cnblogs.com/aaaaaaa/p/10757843.html">https://www.cnblogs.com/aaaaaaa/p/10757843.html</a></li>
<li><a href="https://alex0227.github.io/2018/08/20/Ansible%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%85%A8%E9%9D%A2%E4%BB%8B%E7%BB%8D/">https://alex0227.github.io/2018/08/20/Ansible%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%85%A8%E9%9D%A2%E4%BB%8B%E7%BB%8D/</a></li>
</ul>
<p>ImageImgick 安装</p>
<ul>
<li><a href="https://www.tecmint.com/install-imagemagick-in-linux/">https://www.tecmint.com/install-imagemagick-in-linux/</a></li>
</ul>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">djvulibre-devel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm -y</span><br><span class="line"></span><br><span class="line">dnf install ImageMagick</span><br><span class="line"></span><br><span class="line">安装:</span><br><span class="line"> ImageMagick                      x86_64  6.9.10.86-1.el8  epel       195 k</span><br><span class="line">安装依赖关系:</span><br><span class="line"> ImageMagick-libs                 x86_64  6.9.10.86-1.el8  epel       2.3 M</span><br><span class="line"> atk                              x86_64  2.28.1-1.el8     AppStream  272 k</span><br><span class="line"> gd                               x86_64  2.2.5-6.el8      AppStream  144 k</span><br><span class="line"> gdk-pixbuf2-modules              x86_64  2.36.12-5.el8    AppStream  109 k</span><br><span class="line"> graphviz                         x86_64  2.40.1-40.el8    AppStream  1.7 M</span><br><span class="line"> gtk-update-icon-cache            x86_64  3.22.30-5.el8    AppStream   32 k</span><br><span class="line"> gtk2                             x86_64  2.24.32-4.el8    AppStream  3.4 M</span><br><span class="line"> hicolor-icon-theme               noarch  0.17-2.el8       AppStream   49 k</span><br><span class="line"> libXaw                           x86_64  1.0.13-10.el8    AppStream  194 k</span><br><span class="line"> libXcomposite                    x86_64  0.4.4-14.el8     AppStream   28 k</span><br><span class="line"> libXdamage                       x86_64  1.1.4-14.el8     AppStream   27 k</span><br><span class="line"> librsvg2                         x86_64  2.42.7-3.el8     AppStream  570 k</span><br><span class="line"> libtool-ltdl                     x86_64  2.4.6-25.el8     BaseOS      58 k</span><br><span class="line"> xorg-x11-fonts-ISO8859-1-100dpi  noarch  7.5-19.el8       AppStream  1.1 M</span><br></pre></td></tr></tbody></table></figure>



<p>托管节点</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">yum install -y python2</span><br></pre></td></tr></tbody></table></figure>



<p>确认 <code>php</code> 扩展是否成功安装</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">/data/php/bin/php -m | grep <span class="string">"mcrypt\|yaf\|redis\|imagick\|swoole\|inotify"</span></span><br></pre></td></tr></tbody></table></figure>



<p>从托管节点上下载文件至主机</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">scp -P <span class="number">2222</span> root@<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="string">"/tmp/*.tgz"</span> ./</span><br></pre></td></tr></tbody></table></figure>



<p><code>jinja2</code> 模板文件中若存在特殊字符: <code>;</code>、 <code>#</code> ，需提前进行处理:</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sed -i <span class="string">""</span> <span class="string">'s/^;/{% raw %};/g; s/^{% raw %};.*[^{% endraw %}]$/&amp;{% endraw %}/g'</span> test.conf.j2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">""</span> <span class="string">'s/^;/{% raw %};/g; s/^{% raw %};.*$/&amp;{% endraw %}\'</span>$<span class="string">'\n/g'</span> test.conf.j2</span><br><span class="line">or</span><br><span class="line">sed -i <span class="string">""</span> $<span class="string">'s/^;/{% raw %};/g; s/^{% raw %};.*$/&amp;{% endraw %}\\\n/g'</span> test.conf.j2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">""</span> $<span class="string">'s/^[[:space:]]*#/{% raw %}&amp;/g; s/^{% raw %}[[:space:]]*#.*$/&amp;{% endraw %}\\\n/g'</span> nginx.conf.j2</span><br></pre></td></tr></tbody></table></figure>

<p><a href="https://qastack.cn/superuser/307165/newlines-in-sed-on-mac-os-x">Max-os 换行符问题</a></p>
<h4 id="新增功能项"><a href="#新增功能项" class="headerlink" title="新增功能项"></a>新增功能项</h4><ul>
<li>[可关闭] 建立 <code>php</code> 脚本软连接：<code>ln -s /data/php/bin/php /usr/bin/php</code></li>
<li>[可关闭] 建立 <code>nginx</code> 脚本软连接：<code>ln -s /data/nginx/sbin/nginx /usr/bin/nginx</code></li>
</ul>
<h5 id="待完成事项"><a href="#待完成事项" class="headerlink" title="待完成事项"></a>待完成事项</h5><ul>
<li>包源码目录、包压缩文件删除。</li>
<li>增加 handlers，notify 服务启动、重启功能。</li>
<li>整理项目代码：删除无用文件及代码，简洁项目。</li>
<li>禁用 <code>gather_facts</code> ，查找获取 ip 的其他方法。</li>
<li>虚拟机环境配置，base 操作系统镜像 ip 配置。</li>
<li>角色变量整理。</li>
</ul>
<h4 id="SELinux-命令"><a href="#SELinux-命令" class="headerlink" title="SELinux 命令"></a>SELinux 命令</h4><ul>
<li><p>查看 SELinux 状态</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">/usr/sbin/sestatus -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">getenforce</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>关闭SELinux</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 临时关闭</span></span><br><span class="line">$ setenforce 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久关闭</span></span><br><span class="line">$ /etc/selinux/config</span><br><span class="line"><span class="comment"># 将SELINUX=enforcing改为SELINUX=disabled</span></span><br><span class="line">$ reboot</span><br></pre></td></tr></tbody></table></figure>



</li>
</ul>
<p><code>jinja2</code> 模板处理参考</p>
<ul>
<li><a href="https://www.yfshare.vip/2017/03/15/Ansible-Playbooks%E4%B9%8B%E5%AE%89%E8%A3%85PHP/">https://www.yfshare.vip/2017/03/15/Ansible-Playbooks%E4%B9%8B%E5%AE%89%E8%A3%85PHP/</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/92823485">https://zhuanlan.zhihu.com/p/92823485</a></li>
</ul>
<p>Mac </p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">brew create https://sourceforge.net/projects/sshpass/files/sshpass/1.05/sshpass-1.05.tar.gz --force</span><br><span class="line"></span><br><span class="line">brew install sshpass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">brew tap esolitos/ipa</span><br><span class="line">brew install sshpass</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> LC_ALL=<span class="string">"en_US.UTF-8"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 源码方式编译安装 sshpass</span></span><br><span class="line">curl -O -L  https://sourceforge.net/projects/sshpass/files/sshpass/1.06/sshpass-1.06.tar.gz &amp;&amp; tar xvzf sshpass-1.06.tar.gz</span><br><span class="line">curl -O -L https://fossies.org/linux/privat/sshpass-1.06.tar.gz &amp;&amp; tar xvzf sshpass-1.06.tar.gz</span><br><span class="line"><span class="built_in">cd</span> sshpass-1.06</span><br><span class="line">./configure</span><br><span class="line">sudo make install</span><br></pre></td></tr></tbody></table></figure>



<h5 id="mysql-service"><a href="#mysql-service" class="headerlink" title="mysql.service"></a>mysql.service</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=MySQL Community Server</span><br><span class="line">After=network.target</span><br><span class="line">After=syslog.target</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">Alias=mysql.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=mysql</span><br><span class="line">Group=mysql</span><br><span class="line">#systemctl status就是根据pid来判断服务的运行状态的</span><br><span class="line">PIDFile=/var/run/mysqld/mysqld.pid</span><br><span class="line"># 以root权限来启动程序</span><br><span class="line">PermissionsStartOnly=true</span><br><span class="line"># 设置程序启动前的必要操作。例如初始化相关目录等等</span><br><span class="line">ExecStartPre=/usr/bin/mysql-systemd-start pre</span><br><span class="line"># 启动服务</span><br><span class="line">ExecStart=/usr/bin/mysqld_safe</span><br><span class="line"># Don't signal startup success before a ping works</span><br><span class="line">ExecStartPost=/usr/bin/mysql-systemd-start post</span><br><span class="line"># Give up if ping don't get an answer</span><br><span class="line">TimeoutSec=600</span><br><span class="line">#Restart配置可以在进程被kill掉之后，让systemctl产生新的进程，避免服务挂掉</span><br><span class="line">Restart=always</span><br><span class="line">PrivateTmp=false</span><br></pre></td></tr></tbody></table></figure>

<h5 id="nginx-service"><a href="#nginx-service" class="headerlink" title="nginx.service"></a>nginx.service</h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile={{ NGINX_INSTALL_PATH }}/logs/nginx.pid</span><br><span class="line">ExecStart={{ NGINX_INSTALL_PATH }}/sbin/nginx</span><br><span class="line">ExecReload={{ NGINX_INSTALL_PATH }}/sbin/nginx -s reload</span><br><span class="line">ExecStop={{ NGINX_INSTALL_PATH }}/sbin/nginx -s stop</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">sed -i 's/post_max_size =.*/post_max_size = 50M/g' {{ PHP_INSTALL_PATH }}/etc/php.ini</span><br><span class="line">sed -i 's/upload_max_filesize =.*/upload_max_filesize = 50M/g' {{ PHP_INSTALL_PATH }}/etc/php.ini</span><br><span class="line">sed -i 's/;date.timezone =.*/date.timezone = PRC/g' {{ PHP_INSTALL_PATH }}/etc/php.ini</span><br><span class="line">sed -i 's/short_open_tag =.*/short_open_tag = On/g' {{ PHP_INSTALL_PATH }}/etc/php.ini</span><br><span class="line">sed -i 's/;cgi.fix_pathinfo=.*/cgi.fix_pathinfo=0/g' {{ PHP_INSTALL_PATH }}/etc/php.ini</span><br><span class="line">sed -i 's/max_execution_time =.*/max_execution_time = 300/g' {{ PHP_INSTALL_PATH }}/etc/php.ini</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#/sbin/iptables -I INPUT 1 -i lo -j ACCEPT</span><br><span class="line">#/sbin/iptables -I INPUT 2 -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">#/sbin/iptables -I INPUT 3 -p tcp --dport 22 -j ACCEPT</span><br><span class="line">#/sbin/iptables -I INPUT 4 -p tcp --dport 80 -j ACCEPT</span><br><span class="line">#/sbin/iptables -I INPUT 5 -p tcp --dport 443 -j ACCEPT</span><br><span class="line">#/sbin/iptables -I INPUT 6 -p tcp --dport 3306 -j DROP</span><br><span class="line">#/sbin/iptables -I INPUT 7 -p icmp -m icmp --icmp-type 8 -j ACCEPT</span><br></pre></td></tr></tbody></table></figure>



<p>php-fpm.conf</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">pid = {{ PHP_INSTALL_PATH }}/var/run/php-fpm.pid</span><br><span class="line">error_log = {{ PHP_INSTALL_PATH }}/var/log/php-fpm.log</span><br><span class="line">log_level = notice</span><br><span class="line"></span><br><span class="line">[www]</span><br><span class="line">#listen = /tmp/php-cgi.sock</span><br><span class="line">listen = 127.0.0.1:9000</span><br><span class="line">listen.backlog = -1</span><br><span class="line">listen.allowed_clients = 127.0.0.1</span><br><span class="line">listen.owner = www</span><br><span class="line">listen.group = www</span><br><span class="line">listen.mode = 0666</span><br><span class="line">user = www</span><br><span class="line">group = www</span><br><span class="line">pm = dynamic</span><br><span class="line">pm.max_children = 10</span><br><span class="line">pm.start_servers = 2</span><br><span class="line">pm.min_spare_servers = 1</span><br><span class="line">pm.max_spare_servers = 6</span><br><span class="line">request_terminate_timeout = 100</span><br><span class="line">request_slowlog_timeout = 0</span><br><span class="line">slowlog = {{ PHP_INSTALL_PATH }}/var/log/slow.log</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">47.104.111.157 ansible_connection=ssh ansible_ssh_user=root ansible_ssh_pass=ZJroot123 ansible_ssh_extra_args='-o StrictHostKeyChecking=no'</span><br></pre></td></tr></tbody></table></figure>



<h3 id="2019-11-23-学习-ansible-总结记录"><a href="#2019-11-23-学习-ansible-总结记录" class="headerlink" title="2019-11-23 学习 ansible 总结记录"></a>2019-11-23 学习 ansible 总结记录</h3><h4 id="使用-ping-模块测试连接情况"><a href="#使用-ping-模块测试连接情况" class="headerlink" title="使用 ping 模块测试连接情况"></a>使用 ping 模块测试连接情况</h4><p>ansible -i ./hosts webservices -m ping</p>
<p>ansible host|all -m 模块 -a “模块参数” -f 一次连接多少个主机</p>
<h4 id="查看涉及的所有主机信息"><a href="#查看涉及的所有主机信息" class="headerlink" title="查看涉及的所有主机信息"></a>查看涉及的所有主机信息</h4><p>ansible-playbook ./site.yml -i ./hosts –list-hosts</p>
<h4 id="当第一次连接远程主机-跳过yes-no环节"><a href="#当第一次连接远程主机-跳过yes-no环节" class="headerlink" title="当第一次连接远程主机,跳过yes/no环节"></a>当第一次连接远程主机,跳过yes/no环节</h4><p>inventory:<br>    Add the following.<br>    ansible_ssh_common_args=’-o StrictHostKeyChecking=no’<br>host:<br>    Add the following.<br>    ansible_ssh_extra_args=’-o StrictHostKeyChecking=no’<br>全局处理:<br>       1. /etc/ansible/ansible.cfg host_key_checking = False<br>       2. ansible-playbook -e ‘host_key_checking=False’ yourplaybook.yml<br>       3. export ANSIBLE_HOST_KEY_CHECKING=False</p>
<p>参考：</p>
<ul>
<li><p><a href="http://blog.51cto.com/noodle/1769433">http://blog.51cto.com/noodle/1769433</a></p>
</li>
<li><p><a href="https://stackoverflow.com/questions/23074412/how-to-set-host-key-checking-false-in-ansible-inventory-file">https://stackoverflow.com/questions/23074412/how-to-set-host-key-checking-false-in-ansible-inventory-file</a></p>
</li>
</ul>
<h4 id="帮助类相关命令"><a href="#帮助类相关命令" class="headerlink" title="帮助类相关命令"></a>帮助类相关命令</h4><h6 id="查看当前支持的所有模块"><a href="#查看当前支持的所有模块" class="headerlink" title="查看当前支持的所有模块"></a>查看当前支持的所有模块</h6><p>ansible-doc -l</p>
<h5 id="查看当前指定模块使用方法"><a href="#查看当前指定模块使用方法" class="headerlink" title="查看当前指定模块使用方法"></a>查看当前指定模块使用方法</h5><p>ansible-doc -s 模块名</p>
<h4 id="ansible-playbook-使用"><a href="#ansible-playbook-使用" class="headerlink" title="ansible-playbook 使用:"></a>ansible-playbook 使用:</h4><h6 id="列出运行任务的主机"><a href="#列出运行任务的主机" class="headerlink" title="列出运行任务的主机"></a>列出运行任务的主机</h6><p>ansible-playbook ./site.yml -i ./hosts –list-hosts</p>
<h6 id="列出要运行的任务列表"><a href="#列出要运行的任务列表" class="headerlink" title="列出要运行的任务列表"></a>列出要运行的任务列表</h6><p>ansible-playbook ./site.yml -i ./hosts –list-tasks</p>
<h6 id="列出所有可用标签"><a href="#列出所有可用标签" class="headerlink" title="列出所有可用标签"></a>列出所有可用标签</h6><p>ansible-playbook ./site.yml -i ./hosts –list-tags</p>
<h6 id="仅执行-download-nginx-tag"><a href="#仅执行-download-nginx-tag" class="headerlink" title="仅执行 download-nginx tag."></a>仅执行 download-nginx tag.</h6><p>ansible-playbook ./site.yml -i ./hosts –tags=”download-nginx”</p>
<h6 id="跳过指定标签任务"><a href="#跳过指定标签任务" class="headerlink" title="跳过指定标签任务"></a>跳过指定标签任务</h6><p>ansible-playbook ./site.yml -i ./hosts –skip-tags=make-nginx</p>
<h6 id="检测语法"><a href="#检测语法" class="headerlink" title="检测语法"></a>检测语法</h6><p>ansible-playbook ./site.yml -i ./hosts –syntax-check</p>
<p>sed 命令参考</p>
<ul>
<li><a href="https://qianngchn.github.io/wiki/4.html">https://qianngchn.github.io/wiki/4.html</a></li>
<li><a href="https://juejin.im/entry/6844903458600927239#toc_40">https://juejin.im/entry/6844903458600927239#toc_40</a></li>
</ul>
<h4 id="2021-07-14-日志"><a href="#2021-07-14-日志" class="headerlink" title="2021-07-14 日志"></a>2021-07-14 日志</h4><p>通过 ansible shell 模块下载最新 nginx 包文件 – 未实现。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"># tasks file for nginx</span><br><span class="line">#- name: Set will be install nginx version.</span><br><span class="line">  #shell:</span><br><span class="line">    #cmd: |</span><br><span class="line">      ##!/bin/bash</span><br><span class="line">      #set -e</span><br><span class="line">      #lf=$'\n';</span><br><span class="line">      #curl -s 'https://nginx.org/en/download.html' | sed "s/&lt;/\\$lf&lt;/g" | sed -n "/&gt;Stable version$/,$ p" | egrep -m1 -o "/download/nginx-.+\.tar\.gz" | sed "s/\/download\/nginx-\([0-9]*\.[0-9]*\.[0-9]*\).tar.gz/\1/g";</span><br><span class="line">  ##shell: &gt;</span><br><span class="line">    ##echo 'hello';</span><br><span class="line">    ##echo 'world';</span><br><span class="line">  #register: _nginx_version</span><br><span class="line">  #when: _nginx_version == "latest"</span><br><span class="line"></span><br><span class="line">#- name: debug nginx version.</span><br><span class="line">  #debug: var=_nginx_version</span><br><span class="line"></span><br><span class="line">#- name: debug.</span><br><span class="line">  #debug: var=ansible_os_family</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Ansible</category>
      </categories>
      <tags>
        <tag>Ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx 极客时间</title>
    <url>/posts/nginx/1ef4791e.html</url>
    <content><![CDATA[<p>Nginx 采用 master-worker 进程模式，worker 进程数需与CPU核数量相同。多进程之间使用共享内存，父子进程之间是使用信号管理的。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx 重新载入配置文件</span></span><br><span class="line">nginx -s reload</span><br><span class="line"><span class="built_in">kill</span> -SIGHUP $(ps aux | grep nginx | grep -v grep | grep master | awk <span class="string">'{print $2}'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx 结束 worker 进程。master 进程会创建新进程以维持一定数量的 worker 进程</span></span><br><span class="line"><span class="built_in">kill</span> -SIGTERM $(ps aux | grep nginx | grep -v grep | grep master | awk <span class="string">'{print $2}'</span>)</span><br></pre></td></tr></tbody></table></figure>



<p>Master 进程</p>
<ul>
<li>监控 worker 进程: chld</li>
<li>接收信号，管理 worker 进程<ul>
<li>TERM, INT 立刻停止</li>
<li>QUIT 优雅的停止</li>
<li>HUP 重载配置文件</li>
<li>USR1 重新打开日志文件，做日志文件切割</li>
<li><strong>USR2</strong> 使用 kill 命令管理，用于升级 nginx。</li>
<li><strong>WINCH</strong>  使用 kill 命令管理，用于升级 nginx。</li>
</ul>
</li>
</ul>
<p>Worker 进程</p>
<ul>
<li>TERM, INT</li>
<li>QUIT</li>
<li>USR1</li>
<li>WINCH</li>
</ul>
<p>Nginx 命令行</p>
<ul>
<li>reload:  HUP</li>
<li>reopen: USR1</li>
<li>stop: TERM</li>
<li>quit: QUIT</li>
</ul>
<p>正则表达式效验工具 <code>pcretest</code></p>
<ul>
<li><p>CentOS 8</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ yum install -y pcre2-tools</span><br><span class="line">$ pcre2test</span><br><span class="line">PCRE2 version 10.32 2018-09-10</span><br><span class="line">  re&gt; /article\/detail\?id=(\d+)/</span><br><span class="line">data&gt; article/detail?id=123</span><br><span class="line"> 0: article/detail?id=123</span><br><span class="line"> 1: 123</span><br></pre></td></tr></tbody></table></figure>





</li>
</ul>
<h5 id="平滑升级-nginx"><a href="#平滑升级-nginx" class="headerlink" title="平滑升级 nginx"></a>平滑升级 nginx</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">mv nginx nginx.old</span><br><span class="line">mv nginx ./</span><br><span class="line"><span class="comment"># 告诉旧的 nginx master 要开始升级，新的请求由新启的 nginx 处理。</span></span><br><span class="line"><span class="built_in">kill</span> -USR2 $(ps aux | grep nginx | grep -v grep | grep master | awk <span class="string">'{print $2}'</span>)</span><br><span class="line"><span class="comment"># 告诉旧的 nginx master 平滑关闭 worker 进程</span></span><br><span class="line"><span class="built_in">kill</span> -WINCH $(ps aux | grep nginx | grep -v grep | grep master | awk <span class="string">'{print $2}'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 旧版 nginx 还存在，可备用快速还原老版本</span></span><br><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></tbody></table></figure>



<h5 id="日志切割"><a href="#日志切割" class="headerlink" title="日志切割"></a>日志切割</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">mv logs/access.log back.log</span><br><span class="line"><span class="comment"># reopen 同 kill -USR1</span></span><br><span class="line">../sbin/nginx -s reopen</span><br></pre></td></tr></tbody></table></figure>



<p><code>GoAccess</code> 可视化实时监控 access 日志。</p>
<h4 id="HTTPS-部署"><a href="#HTTPS-部署" class="headerlink" title="HTTPS 部署"></a>HTTPS 部署</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">yum install python2-certbot-nginx</span><br><span class="line">cerbot --nginx --nginx-server-root=/usr/<span class="built_in">local</span>/nginx/conf/ -d codezm.com</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><p>握手缓存：session</p>
</li>
<li><p>支持的安全套件：</p>
</li>
</ul>
<h4 id="Openresty"><a href="#Openresty" class="headerlink" title="Openresty"></a>Openresty</h4><ul>
<li><a href="http://openresty.org/cn">http://openresty.org/cn</a></li>
</ul>
<h4 id="待处理"><a href="#待处理" class="headerlink" title="待处理"></a>待处理</h4><ul>
<li><p>gzip</p>
</li>
<li><p>error_page 404 =200 /404.html</p>
</li>
<li><p>error_page 500 502 503 504 /50x.html</p>
</li>
<li><p>return 200 “Hello world”</p>
</li>
<li><p>rewrite</p>
<p>在 <code>server</code> 块中可通过配置 <code>rewrite_log on</code> 参数，将 <code>rewrite</code> 请求记录到 nginx <code>access</code> 日志中。</p>
</li>
<li><p>if</p>
<ul>
<li>判断文件是否存在，-f 与 !-f</li>
<li>判断目录是否存在, -d 与 !-d</li>
<li>判断文件、目录、软连接是否存在, -e、!-e</li>
<li>值是否相等，=、!=</li>
<li>正则表达式<ul>
<li><del>、!</del></li>
<li>忽略大小写：<code>~*</code>、<code>!~*</code></li>
</ul>
</li>
</ul>
</li>
<li><p>location [=|<del>|</del>*|^~] uri {…}</p>
<ul>
<li><p>Syntax: location [=|<del>|</del>*|^~] uri {…}</p>
</li>
<li><p>Context: server, location</p>
</li>
<li></li>
<li><p>合并连续的 <code>/</code> 符号，Default: merg_slashes on</p>
</li>
<li><p>匹配规则</p>
<ul>
<li>前缀字符串<ul>
<li>常规匹配，示例：location /test {…}</li>
<li>=: 精准匹配，示例：location = /test {…}</li>
<li>^~: 匹配后则不再进行正则表达式匹配</li>
</ul>
</li>
<li>正则表达式<ul>
<li>~: 大小写敏感的正则表达式</li>
<li>~*: 忽略大小写的正则表达式</li>
</ul>
</li>
<li>用于内部跳转的命名 location<ul>
<li>@</li>
</ul>
</li>
</ul>
</li>
<li><p>匹配顺序</p>
<p><code>无顺序匹配全部前缀字符串 location</code></p>
<ol>
<li><p>使用匹配上的 = 精确匹配 location： <code>匹配 = 字符串</code> 。</p>
</li>
<li><p>使用匹配上的 ^~ 字符串 location：<code>匹配 ^~ 字符串</code>。</p>
</li>
<li><p>多个匹配项，记住最长匹配的前缀字符串 location</p>
<p>按照 nginx.conf 中的顺序依次匹配正则表达式 location。</p>
<ul>
<li>匹配成功，使用匹配上的正则表达式。</li>
<li>匹配失败，所有表达式都不匹配，使用最长匹配的前缀字符串location。</li>
</ul>
</li>
</ol>
</li>
</ul>
</li>
<li><p>auth_basic </p>
<ul>
<li><p>auth_basic “test auth_basic”</p>
</li>
<li><p>auth_basic_user_file file</p>
<p>生成工具: <code>htpasswd</code>，可通过执行 <code>yum install -y httpd-tools</code> 命令安装。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">htpasswd -c -b file user pass</span><br></pre></td></tr></tbody></table></figure>



</li>
</ul>
</li>
</ul>
<ul>
<li><p>try_files</p>
<p>默认安装、无法禁用</p>
<ul>
<li>Syntax<ul>
<li>try_files file … uri;</li>
<li>try_files file … =code;</li>
</ul>
</li>
<li>Context<ul>
<li>server</li>
<li>location</li>
</ul>
</li>
</ul>
</li>
<li><p>mirror</p>
<p>实时拷贝流量：precontent 阶段的 mirror 模块，默认编译进 Nginx，编译时可通过 <code>--without-http_mirror_module</code> 参数移除。</p>
<p>处理请求时，生成子请求访问其他服务，对子请求的返回值不做处理。</p>
<p>Syntax: mirror uri | off; </p>
<p>Default: mirror off; </p>
<p>Context: http, server, location </p>
</li>
</ul>
<p>  Syntax: mirror_request_body on | off; </p>
<p>  Default: mirror_request_body on; </p>
<p>  Context: http, server, location</p>
<ul>
<li><p>content阶段</p>
<p>static: root 和 alias 指令</p>
<ul>
<li>alias<ul>
<li>Context: location</li>
</ul>
</li>
<li>root<ul>
<li>Default: root html;</li>
<li>Context: http, server, location, if in location</li>
</ul>
</li>
</ul>
<p>功能：将 url 映射为文件路径，以返回静态文件内容</p>
<p>区别：</p>
<ul>
<li>root 会将完整 url 映射到文件路径中。</li>
<li>alias 只会将 location 后的 URL 映射到文件路径。</li>
</ul>
</li>
</ul>
<ul>
<li><p>关闭未找到文件时的错误日志：log_not_found off;</p>
</li>
<li><p>展示目录：autoindex on;</p>
</li>
<li><p>将多个小文件合并到一个http请求，最终将所有文件内容合并进行响应：<code>ngx_http_concat_module</code>。</p>
</li>
<li><p>access_log path 可使用变量，但会造成频繁开关文件。可通过 <code>open_log_file_cache</code> 参数进行优化。</p>
</li>
<li><p>变量</p>
<ul>
<li>Nginx 内置变量<ul>
<li>arg_参数名</li>
<li>args 全部参数</li>
</ul>
</li>
<li>http 变量</li>
<li>tcp 变量</li>
</ul>
</li>
<li><p>防盗链 valid_referers none blocked server_names *.codezm.com <code>$invalid_referer</code></p>
</li>
<li><p><code>keepalive</code> 提升链接效率</p>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># nginx 向客户端返回的 keepalive</span></span><br><span class="line"><span class="comment"># 禁用 IE6 浏览器使用 keepalive 功能。</span></span><br><span class="line"><span class="attribute">keepalive_disable</span> msie6;</span><br><span class="line"><span class="comment"># 在同一个 Tcp 链接上最多处理几个 http 请求。 </span></span><br><span class="line"><span class="attribute">keepalive_requests</span> <span class="number">100</span>;</span><br><span class="line"><span class="comment"># Tcp 链接处理后最多保持 75s 后关闭链接，nginx 告知客户端最多 25s 后关闭链接。</span></span><br><span class="line"><span class="attribute">keepalive_timeout</span> <span class="number">75</span> <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> Connection <span class="string">"keepalive"</span>;</span><br></pre></td></tr></tbody></table></figure>





</li>
</ul>
<ul>
<li>在 <code>http</code> 块中增加 <code>server_tokens off;</code> 关闭 <code>Response Headers</code> 中 <code>Server</code> 对应 <code>nginx</code> 版本号，以提升安全性。</li>
</ul>
<h4 id="四、反向代理与负载均衡"><a href="#四、反向代理与负载均衡" class="headerlink" title="四、反向代理与负载均衡"></a>四、反向代理与负载均衡</h4><p>7层应用反向代理：</p>
<ul>
<li><p>uwsgi</p>
</li>
<li><p>fastcgi</p>
</li>
<li><p>scgi</p>
</li>
<li><p>http</p>
</li>
<li><p>memcached</p>
</li>
<li><p>websocket <a href="http://www.websocket.org/echo.html">http://www.websocket.org/echo.html</a></p>
<blockquote>
<p>proxy_http_version 1.1;</p>
<p>proxy_set_header Upgrade $http_upgrade;</p>
<p>proxy_set_header Connection “upgrade”;</p>
</blockquote>
</li>
<li><p>grpc <a href="http://grpc.io/">http://grpc.io/</a> <a href="https://github.com/grpc/grpc">https://github.com/grpc/grpc</a></p>
</li>
</ul>
<p>stream 4层反向代理：</p>
<h5 id="upstream-模块提供的变量"><a href="#upstream-模块提供的变量" class="headerlink" title="upstream 模块提供的变量"></a>upstream 模块提供的变量</h5><table>
<thead>
<tr>
<th>名称</th>
<th>释义</th>
</tr>
</thead>
<tbody><tr>
<td>$upstream_addr</td>
<td>上游服务器的IP地址，格式为可读的字符串，例如：127.0.0.1:8080</td>
</tr>
<tr>
<td>$upstream_connect_time</td>
<td>与上游服务建立连接消耗的时间，单位为秒，精确到毫秒</td>
</tr>
<tr>
<td>$upstream_header_time</td>
<td>接收上游服务发回响应中http头部所消耗的时间，单位为秒，精确到毫秒</td>
</tr>
<tr>
<td>$upstream_response_time</td>
<td>接收完整的上游服务响应所消耗的时间，单位为秒，精确到毫秒</td>
</tr>
<tr>
<td>$upstream_http_名称</td>
<td>从上游服务返回的响应头部的值</td>
</tr>
<tr>
<td>$upstream_bytes_received</td>
<td>从上游服务接收到的响应长度，单位为字节</td>
</tr>
<tr>
<td>$upstream_response_length</td>
<td>从上游服务返回的响应包体长度，单位为字节</td>
</tr>
<tr>
<td>$upstream_status</td>
<td>上游服务返回的HTTP响应中的状态码，如果未连接上，该变量值为502</td>
</tr>
<tr>
<td>$upstream_cookie_名称</td>
<td>从上游服务返回发回的 Set-Cookie 中取出的 cookie 值</td>
</tr>
<tr>
<td>$upstream_trailer_名称</td>
<td>从上游服务的响应尾部取到的值</td>
</tr>
<tr>
<td>$upstream_http_server</td>
<td>上游服务</td>
</tr>
<tr>
<td>$upstream_cache_status</td>
<td>缓存状态</td>
</tr>
</tbody></table>
<h5 id="最大包体长度限制"><a href="#最大包体长度限制" class="headerlink" title="最大包体长度限制"></a>最大包体长度限制</h5><p><code>client_max_body_size 1m;</code> 仅对请求头部中含有 <code>Content-Length</code> 有效超出最大长度后，返回 <code>413</code> 错误。</p>
<h5 id="临时文件路径格式"><a href="#临时文件路径格式" class="headerlink" title="临时文件路径格式"></a>临时文件路径格式</h5><p><code>client_body_temp_path path [level1 [level2 [level3]]]</code>，默认 <code>client_body_temp_path client_body_temp;</code>。</p>
<p><code>client_body_in_file_only on|clean|off</code>，默认 <code>client_body_in_file_only off;</code>。</p>
<h5 id="读取包体时的超时"><a href="#读取包体时的超时" class="headerlink" title="读取包体时的超时"></a>读取包体时的超时</h5><p><code>client_body_timeout time;</code> ，默认 <code>client_body_timeout 60s;</code>。读取包体时超时，则返回 408 错误。</p>
<h5 id="向上游服务建立连接"><a href="#向上游服务建立连接" class="headerlink" title="向上游服务建立连接"></a>向上游服务建立连接</h5><blockquote>
<p>Syntax: proxy_connect_timeout time;</p>
<p>Default: proxy_connect_timeout 60s;</p>
<p>Context: http,server,location</p>
</blockquote>
<p>超时后，会向客户端生成 http 响应，响应码为：502。</p>
<blockquote>
<p>Syntax: proxy_next_upstream http_502|…;</p>
<p>Default: proxy_next_upstream error timeout;</p>
<p>Context: http,server,location</p>
</blockquote>
<p>当上游连接返回 <code>502</code> 错误码后，可以再设置另一个上游服务提供处理。</p>
<h5 id="上游连接启用-TCP-keepalive"><a href="#上游连接启用-TCP-keepalive" class="headerlink" title="上游连接启用 TCP keepalive"></a>上游连接启用 TCP keepalive</h5><blockquote>
<p>Syntax: proxy_socket_keepalive on|off;</p>
<p>Default: proxy_socket_keepalive off;</p>
<p>Context: http,server,location</p>
</blockquote>
<h5 id="上游连接启用-HTTP-keepalive"><a href="#上游连接启用-HTTP-keepalive" class="headerlink" title="上游连接启用 HTTP keepalive"></a>上游连接启用 HTTP keepalive</h5><blockquote>
<p>Syntax: keepalive connections;</p>
<p>Default: -;</p>
<p>Context: upstream</p>
</blockquote>
<p>一个 tcp 连接最多处理多少个http请求。</p>
<blockquote>
<p>Syntax: keepalive_requests number;</p>
<p>Default: keepalive_requests 100;</p>
<p>Context: upstream</p>
</blockquote>
<h5 id="向上游发送-HTTP-请求"><a href="#向上游发送-HTTP-请求" class="headerlink" title="向上游发送 HTTP 请求"></a>向上游发送 HTTP 请求</h5><blockquote>
<p>Syntax: proxy_send_timeout time;</p>
<p>Default: proxy_send_timeout 60s;</p>
<p>Context: http,server,location</p>
</blockquote>
<h4 id="接收上游的-HTTP-响应头部"><a href="#接收上游的-HTTP-响应头部" class="headerlink" title="接收上游的 HTTP 响应头部"></a>接收上游的 HTTP 响应头部</h4><blockquote>
<p>Syntax: proxy_buffer_size size;</p>
<p>Default: proxy_buffer_size 4k|8k;</p>
<p>Context: http,server,location</p>
</blockquote>
<p>error_log: upstream sent too big header</p>
<h5 id="接收上游的-HTTP-包体"><a href="#接收上游的-HTTP-包体" class="headerlink" title="接收上游的 HTTP 包体"></a>接收上游的 HTTP 包体</h5><blockquote>
<p>Syntax: proxy_buffer number size;</p>
<p>Default: proxy_buffer 8 4k|8k;</p>
<p>Context: http,server,location</p>
</blockquote>
<blockquote>
<p>Syntax: proxy_buffering on|off;</p>
<p>Default: proxy_buffering on;</p>
<p>Context: http,server,location</p>
</blockquote>
<p>使用上游服务设置的 <code>Server</code> header 头配置。</p>
<p>proxy_pass_header server;</p>
<h5 id="用-error-page-拦截上游失败响应"><a href="#用-error-page-拦截上游失败响应" class="headerlink" title="用 error_page 拦截上游失败响应"></a>用 error_page 拦截上游失败响应</h5><p>当上游响应的响应码 &gt;= 300 时，应将响应返回客户端还是按 error_page 指令处理</p>
<p>error_page 500 /500.html;</p>
<p>proxy_intercept_errors on;</p>
<h4 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h4><p>proxy_cache_path</p>
<p>LRU淘汰算法：末位淘汰。</p>
<p>查看上下文切换次数</p>
<ul>
<li>vmstat 1</li>
<li>dstat 1</li>
<li>pidstat -w 1 -p <pid></pid></li>
</ul>
<p>惊群</p>
<ul>
<li><code>reuseport</code>  linux &gt; 3.9，centos &gt;= 7.0。<code>listen 80 reuseport;</code></li>
</ul>
<p>提升 cpu 缓存命中率</p>
<p><code>work_cpu_affinity: auto [cpumask];</code></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># cpu L1级指令缓存</span></span><br><span class="line">cat /sys/devices/system/cpu/cpu1/cache/index0/size</span><br><span class="line">32K</span><br><span class="line"><span class="comment"># cpu L1级数据缓存</span></span><br><span class="line">cat /sys/devices/system/cpu/cpu1/cache/index1/size</span><br><span class="line">32K</span><br><span class="line"><span class="comment"># cpu L2级缓存</span></span><br><span class="line">cat /sys/devices/system/cpu/cpu1/cache/index2/size</span><br><span class="line">256K</span><br><span class="line"><span class="comment"># cpu L3级缓存</span></span><br><span class="line">cat /sys/devices/system/cpu/cpu1/cache/index3/size</span><br><span class="line">20480K</span><br></pre></td></tr></tbody></table></figure>



<h4 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h4><p><code>netstat -nap | grep tcp</code></p>
<h5 id="SYN-SENT状态"><a href="#SYN-SENT状态" class="headerlink" title="SYN_SENT状态"></a>SYN_SENT状态</h5><p>主动建立连接时，发 SYN 的重试次数：<code>net.ipv4.tcp_syn_retries = 6</code>。</p>
<p>建立连接时的本地端口可用范围：<code>net.ipv4.ip_local_port_range = 32768 60999</code>。</p>
<p>主动建立连接时，应用层超时时间：<code>proxy_connect_timeout 60s;</code>。</p>
<h5 id="SYN-RCVD-状态-服务端"><a href="#SYN-RCVD-状态-服务端" class="headerlink" title="SYN_RCVD 状态 -服务端"></a>SYN_RCVD 状态 -服务端</h5><p>（半链接）<code>SYN Queue</code> SYN_RCVD 状态链接的最大个数：<code>net.ipv4.tcp_max_syn_backlog</code></p>
<p>被动建立连接时，发 SYN/ACK 的重试次数：<code>net.ipv4.tcp_synack_retries</code>。</p>
<p>（全连接）<code>ACCEPT Queue</code> 最大个数：<code>backlog</code></p>
<h5 id="如何应对-SYN-攻击"><a href="#如何应对-SYN-攻击" class="headerlink" title="如何应对 SYN 攻击"></a>如何应对 SYN 攻击</h5><ul>
<li>接收自网卡、但未被内核协议栈处理的报文队列长度：<code>net.core.netdev_max_backlog</code>。</li>
<li>SYN_RCVD 状态连接的最大个数：<code>net.ipv4.tcp_max_syn_backlog</code>。</li>
<li>超出处理能力时，对新来的SYN直接回包RST，丢弃连接：<code>net.ipv4.tcp_abort_on_overflow</code>。</li>
<li>启用 cookie：<code>net.ipv4.tcp_syncookies=1</code>。</li>
</ul>
<h5 id="句柄数的上限"><a href="#句柄数的上限" class="headerlink" title="句柄数的上限"></a>句柄数的上限</h5><ul>
<li><p>操作系统全局</p>
<ul>
<li>操作系统可使用的最大句柄数：<code>fs.file-max</code>，<code>sysctl -a | grep file-max</code>。</li>
<li>使用 <code>fs.file-nr</code> 可以查看当前已分配、正使用、上限：<code>fs.file-nr=21632 0 40000500</code>，<code>sysctl -a | grep file-nr</code></li>
</ul>
</li>
<li><p>限制用户</p>
<ul>
<li>/etc/security/limits.conf<ul>
<li>root soft nofile 65535</li>
<li>root hard nofile 65535</li>
</ul>
</li>
</ul>
</li>
<li><p>限制进程</p>
<ul>
<li><code>worker_rlimit_nofile number;</code></li>
</ul>
</li>
</ul>
<p>Nginx 上游+下游间连接句柄数限制: <code>worker_connections number;</code></p>
<h4 id="两个队列的长度"><a href="#两个队列的长度" class="headerlink" title="两个队列的长度"></a>两个队列的长度</h4><p>SYN队列 - 未完成握手：<code>net.ipv4.tcp_max_syn_backlog = 262144</code>。</p>
<p>ACCEPT 队列 - 已完成握手：<code>net.core.somaxconn</code> ，系统级最大 <code>backlog</code> 队列长度。</p>
<p>Nginx： <code>listen address[:port] [backlog=number]</code>。限制已握手队列。</p>
<h5 id="Tcp-fast-open"><a href="#Tcp-fast-open" class="headerlink" title="Tcp fast open"></a>Tcp fast open</h5><p><code>net.ipv4.tcp_fastopen</code></p>
<ul>
<li>0：关闭（默认）</li>
<li>1：作为客户端时可以使用TFO</li>
<li>2：作为服务端时可以使用TFO</li>
<li>3：无论作为客户端还是服务端，均使用TFO</li>
</ul>
<p><code>proxy_timeout: 1m;</code></p>
<h4 id="TCP缓冲区"><a href="#TCP缓冲区" class="headerlink" title="TCP缓冲区"></a>TCP缓冲区</h4><p>当读、写超时指令生效引发连接关闭时，通过发送 <code>RST</code> 立刻释放端口、内存等资源来关闭链接：  reset_timeout_connection on|off;<code>默认:</code>off`。</p>
<h5 id="TLS-SSL-优化握手性能"><a href="#TLS-SSL-优化握手性能" class="headerlink" title="TLS/SSL 优化握手性能"></a>TLS/SSL 优化握手性能</h5><p>ssl_session_cache off | none </p>
<ul>
<li>off<ul>
<li>不使用 Session 缓存，且 Nginx 在协议中明确告诉客户端 Session 缓存不被使用</li>
</ul>
</li>
<li>none<ul>
<li>不使用 Session 缓存</li>
</ul>
</li>
<li>builtin<ul>
<li>使用 Openssl 的 Session 缓存，由于在内存中使用，所以仅当同一客户端的两次链接都命中到同一个 worker 进程时，Session 缓存才会生效。</li>
</ul>
</li>
<li>shared:name:size （常用）<ul>
<li>定义共享内存，为所有 worker 进程提供 Session 缓存服务。1MB 大约可用于 4000 个 Session。</li>
</ul>
</li>
</ul>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 1m 大约提供 4000 个链接</span></span><br><span class="line"><span class="attribute">ssl_session_cache</span> shared:nginx_ssl:<span class="number">1m</span>;</span><br><span class="line"><span class="comment"># 超时时间：1天</span></span><br><span class="line"><span class="attribute">ssl_session_timeout</span> <span class="number">1440m</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line"><span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">ssl_ciphers</span> <span class="string">""</span></span><br></pre></td></tr></tbody></table></figure>



<p><a href="https://ssl-config.mozilla.org/">https://ssl-config.mozilla.org/</a></p>
<h5 id="TLS-SSL-中的会话票证-tickets"><a href="#TLS-SSL-中的会话票证-tickets" class="headerlink" title="TLS/SSL 中的会话票证 tickets"></a>TLS/SSL 中的会话票证 tickets</h5><p>Nginx 将会话 Session 中的信息作为 tickets 加密发给客户端，当客户端下次发起 TLS 链接时带上 tickets，由 nginx 解密验证后复用会话 Session。</p>
<p>会话票证虽然更易在 Nginx 集群中使用，但破坏了 TLS/SSL 的安全机制，有安全风险，必须频繁更换 tickets 密钥。</p>
<ul>
<li><p>是否开启会话票证服务：</p>
<blockquote>
<p>Syntax: ssl_session_tickets on | off;</p>
<p>Default: ssl_session_tickets on;</p>
<p>Context: http，server</p>
</blockquote>
</li>
<li><p>使用会话票证时加密 tickets 的密钥文件，未配置时会随机生成：</p>
<blockquote>
<p>Syntax: ssl_session_ticket_key file;</p>
<p>Default: -</p>
<p>Context: http,server</p>
</blockquote>
</li>
</ul>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">ssl_session_ticket_key</span> ticket.key;</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">openssl rand 80&gt; ticket.key</span><br></pre></td></tr></tbody></table></figure>



<h5 id="HTTP-长连接"><a href="#HTTP-长连接" class="headerlink" title="HTTP 长连接"></a>HTTP 长连接</h5><ul>
<li><p>优点</p>
<blockquote>
<ul>
<li>减少握手次数</li>
<li>通过减少并发连接数减少了服务器资源的消耗</li>
<li>降低 TCP 拥塞控制的影响</li>
</ul>
</blockquote>
</li>
</ul>
<blockquote>
<p>Syntax: keepalive_requests number;</p>
<p>Default: keepalive_requests 100;</p>
<p>Context: http,server,location</p>
</blockquote>
<blockquote>
<p>Syntax: keepalive_requests number;</p>
<p>Default: keepalive_requests 100;</p>
<p>Context: upstream</p>
</blockquote>
<h5 id="gzip-压缩-http-nginx-org-en-docs-http-ngx-http-gzip-module-html"><a href="#gzip-压缩-http-nginx-org-en-docs-http-ngx-http-gzip-module-html" class="headerlink" title="gzip 压缩 - http://nginx.org/en/docs/http/ngx_http_gzip_module.html"></a>gzip 压缩 - <a href="http://nginx.org/en/docs/http/ngx_http_gzip_module.html">http://nginx.org/en/docs/http/ngx_http_gzip_module.html</a></h5><p>功能：</p>
<p>通过实时压缩 http 包体，提升网络传输效率</p>
<p>模块：<code>ngx_http_gzip_module</code>，通过 <code>--without-http_gzip_module</code> 禁用模块</p>
<blockquote>
<p>Syntax: gzip on | off;</p>
<p>Default: gzip off;</p>
<p>Context: http,server,location, if in location</p>
</blockquote>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">gzip</span> <span class="literal">on</span>;</span><br></pre></td></tr></tbody></table></figure>



<p>指定压缩文件类型</p>
<blockquote>
<p>Syntax: gzip_types mime-type …;</p>
<p>Default: gzip_types text/html;</p>
<p>Context: http,server,location</p>
</blockquote>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">gzip_types</span> text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;</span><br></pre></td></tr></tbody></table></figure>



<p>指定压缩文件的最小字节数，当小于此字节数时不进行压缩。</p>
<blockquote>
<p>Syntax:    gzip_min_length length;<br>Default:    gzip_min_length 20;<br>Context:    http, server, location</p>
</blockquote>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">gzip_min_length</span> <span class="number">1k</span>;</span><br></pre></td></tr></tbody></table></figure>



<p>通过设置正则规则，表明哪些 <code>User-Agent</code> 头不使用 gzip 压缩。</p>
<blockquote>
<p>Syntax:    gzip_disable regex …;<br>Default:    —<br>Context:    http, server, location</p>
</blockquote>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 禁用IE 1-6 gzip</span></span><br><span class="line"><span class="attribute">gzip_disable</span> <span class="string">"MSIE [1-6]\."</span>;</span><br></pre></td></tr></tbody></table></figure>



<p>指定压缩的  http 版本，默认：http_version: 1.1 才启用压缩处理。</p>
<blockquote>
<p>Syntax:    gzip_http_version 1.0 | 1.1;<br>Default:    gzip_http_version 1.1;<br>Context:    http, server, location</p>
</blockquote>
<p>是否压缩上游的响应</p>
<blockquote>
<p>Syntax:    gzip_proxied off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any …;<br>Default:    gzip_proxied off;<br>Context:    http, server, location</p>
</blockquote>
<ul>
<li>off<ul>
<li>不压缩来自上游的响应</li>
</ul>
</li>
<li>expired<ul>
<li>如果上游响应中含有 Expires 头部，且其值中的时间与系统时间比较后确定不会缓存，则压缩响应</li>
</ul>
</li>
<li>no-cache<ul>
<li>如果上游响应中含有 <code>Cache-Control</code> 头部，且其值含有 <code>no-cache</code> 值，则压缩响应。</li>
</ul>
</li>
<li>private<ul>
<li>如果上游响应中含有 <code>Cache-Control</code> 头部，且其值含有 <code>private</code> 值，则压缩响应</li>
</ul>
</li>
<li>no_last_modified<ul>
<li>如果上游响应中没有 <code>Last-Modified</code> 头部，则压缩响应</li>
</ul>
</li>
<li>no_etag<ul>
<li>如果上游响应中没有 <code>ETag</code> 头部，则压缩响应</li>
</ul>
</li>
<li>auth<ul>
<li>如果客户端请求中含有 <code>Authorization</code> 头部，则压缩响应</li>
</ul>
</li>
<li>any<ul>
<li>压缩所有来自上游的响应</li>
</ul>
</li>
</ul>
<p>配置缓冲区大小</p>
<blockquote>
<p>Syntax:    gzip_buffers number size;<br>Default:    gzip_buffers 32 4k|16 8k;<br>Context:    http, server, location</p>
</blockquote>
<p>压缩率等级，1-9，1：压缩速度最快，压缩率最低。</p>
<blockquote>
<p>Syntax:    gzip_comp_level level;<br>Default:    gzip_comp_level 1;<br>Context:    http, server, location</p>
</blockquote>
<p>是否在响应中返回 <code>Vary: Accept-Encoding</code>。</p>
<blockquote>
<p>Syntax:    gzip_vary on | off;<br>Default:    gzip_vary off;<br>Context:    http, server, location</p>
</blockquote>
<p>变量</p>
<ul>
<li>压缩率 <code>$gzip_ratio</code> </li>
</ul>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 开启缓存</span></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~* ^.+\.(ico|gif|jpg|jpeg|png)$</span> { </span><br><span class="line">    <span class="attribute">access_log</span>   <span class="literal">off</span>; </span><br><span class="line">    <span class="attribute">expires</span>      <span class="number">2d</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~* ^.+\.(css|js|txt|xml|swf|wav)$</span> {</span><br><span class="line">    <span class="attribute">access_log</span>   <span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">expires</span>      <span class="number">24h</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~* ^.+\.(html|htm)$</span> {</span><br><span class="line">    <span class="attribute">expires</span>      <span class="number">1h</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~* ^.+\.(eot|ttf|otf|woff|svg)$</span> {</span><br><span class="line">    <span class="attribute">access_log</span>   <span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">expires</span> max;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<p>升级更高效的 http2 协议：向前兼容 <code>http/1.x</code> 协议</p>
<h5 id="nginx-开启-HTTP-2-前置条件-http-nginx-org-en-docs-http-ngx-http-v2-module-html"><a href="#nginx-开启-HTTP-2-前置条件-http-nginx-org-en-docs-http-ngx-http-v2-module-html" class="headerlink" title="nginx 开启 HTTP/2 前置条件 - http://nginx.org/en/docs/http/ngx_http_v2_module.html"></a>nginx 开启 HTTP/2 前置条件 - <a href="http://nginx.org/en/docs/http/ngx_http_v2_module.html">http://nginx.org/en/docs/http/ngx_http_v2_module.html</a></h5><ul>
<li><p><code>HTTP/2</code> 是建立在 <code>TLS/SSL</code> 协议上的，所以必须有证书支持。</p>
</li>
<li><p>nginx &gt;= 1.9.5。可通过 <code>nginx -v</code> 查看当前版本。</p>
</li>
<li><p>编译 nginx 时所使用的 openssl &gt;= 1.0.2。可通过 <code>openssl version</code> 查看当前系统 <code>openssl</code> 版本，通过 <code>nginx -v</code> 可查看编译 nginx 时 <code>openssl</code> 版本。</p>
</li>
</ul>
<h5 id="开启-HTTP-2"><a href="#开启-HTTP-2" class="headerlink" title="开启 HTTP/2"></a>开启 HTTP/2</h5><figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="section">server</span> {</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl http2;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span> server.crt;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> server.key;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h5 id="检查开启状态"><a href="#检查开启状态" class="headerlink" title="检查开启状态"></a>检查开启状态</h5><ul>
<li>Chrome 扩展程序：<code>HTTP/2 and SPDY indicator</code>。</li>
<li></li>
</ul>
<h4 id="磁盘IO优化"><a href="#磁盘IO优化" class="headerlink" title="磁盘IO优化"></a>磁盘IO优化</h4><ul>
<li><p>适用于大文件：直接IO。- <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#directio">http://nginx.org/en/docs/http/ngx_http_core_module.html#directio</a></p>
<blockquote>
<p>Syntax:    directio size | off;<br>Default:    directio off;<br>Context:    http, server, location</p>
</blockquote>
<figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 当文件 size 大于 10M 时，启用 directio。</span></span><br><span class="line"><span class="attribute">directio</span> <span class="number">10m</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>当启用 <code>directio</code> 时，将自动禁用 <code>sendfile</code>。</p>
</li>
<li><p>异步IO - <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#aio">http://nginx.org/en/docs/http/ngx_http_core_module.html#aio</a></p>
<blockquote>
<p>Syntax:    aio on | off | threads[=pool];<br>Default:    aio off;<br>Context:    http, server, location</p>
</blockquote>
</li>
</ul>
<p><code>sendfile on;</code> 将使用零拷贝技术：通过获取对应文件的句柄发送给 socket 缓冲区。</p>
<h5 id="gzip-static-模块-http-nginx-org-en-docs-http-ngx-http-gzip-static-module-html"><a href="#gzip-static-模块-http-nginx-org-en-docs-http-ngx-http-gzip-static-module-html" class="headerlink" title="gzip_static 模块 - http://nginx.org/en/docs/http/ngx_http_gzip_static_module.html"></a>gzip_static 模块 - <a href="http://nginx.org/en/docs/http/ngx_http_gzip_static_module.html">http://nginx.org/en/docs/http/ngx_http_gzip_static_module.html</a></h5><p>模块：<code>ngx_http_gzip_static_module</code>，通过 <code>--with-http_gzip_static_module</code> 启用模块。</p>
<p>功能：检测到同名 <code>.gz</code> 文件时，返回 <code>.gz</code> 文件内容。</p>
<blockquote>
<p>Syntax:    gzip_static on | off | always;<br>Default:    gzip_static off;<br>Context:    http, server, location</p>
</blockquote>
<h4 id="nginx-性能分析"><a href="#nginx-性能分析" class="headerlink" title="nginx 性能分析"></a>nginx 性能分析</h4><h4 id="Google-PerfTools-https-github-com-gperftools-gperftools"><a href="#Google-PerfTools-https-github-com-gperftools-gperftools" class="headerlink" title="Google PerfTools https://github.com/gperftools/gperftools"></a>Google PerfTools <a href="https://github.com/gperftools/gperftools">https://github.com/gperftools/gperftools</a></h4><h4 id="stub-status-http-nginx-org-en-docs-http-ngx-http-stub-status-module-html"><a href="#stub-status-http-nginx-org-en-docs-http-ngx-http-stub-status-module-html" class="headerlink" title="stub_status http://nginx.org/en/docs/http/ngx_http_stub_status_module.html"></a>stub_status <a href="http://nginx.org/en/docs/http/ngx_http_stub_status_module.html">http://nginx.org/en/docs/http/ngx_http_stub_status_module.html</a></h4><p>lua 防火墙 <a href="https://github.com/loveshell/ngx_lua_waf">https://github.com/loveshell/ngx_lua_waf</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">tcpdump -i lo port 514 -A -s 0</span><br></pre></td></tr></tbody></table></figure>





<ul>
<li>负载均衡（Server Load Balancer，下文简称 SLB）</li>
</ul>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">./configure --user=apache --group=apache --prefix=/data/nginx-debug \</span><br><span class="line">--with-debug \</span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line">--with-http_gunzip_module \</span><br><span class="line">--with-http_v2_module \</span><br><span class="line">--with-http_realip_module \</span><br><span class="line">--with-http_stub_status_module</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--with-http_auth_request_module --with-http_realip_module --with-http_v2_module --with-debug --add-module=/home/web/nginx-http-concat/ --with-http_random_index_module --with-http_sub_module --with-http_addition_module --with-http_secure_link_module --with-http_geoip_module --with-http_ssl_module --with-stream_ssl_module --with-stream_realip_module --with-stream_ssl_preread_module --with-stream --add-module=/home/web/ngx_cache_purge/ --with-http_slice_module --with-google_perftools_module --with-threads --with-ld-opt=-ltcmalloc --with-http_gzip_static_module --with-http_gunzip_module --with-http_stub_status_module</span><br></pre></td></tr></tbody></table></figure>



<h4 id="X-Forward-For"><a href="#X-Forward-For" class="headerlink" title="X-Forward_For"></a>X-Forward_For</h4><blockquote>
<p>HTTP请求11个阶段：<code>postread</code> 阶段</p>
</blockquote>
<p>在 X-Forward-For 的最左边才是真实用户的地址，右边都是代理地址，当我们把 real_ip_header 设置为  X-Forward-For 时，如果没有启用 环回地址 real_ip_recursive，我们取到的 $remote_addr 是  X-Forward-For 中最右边的 ip，无论是否设置了 set_real_ip_from；如果启用了环回地址  real_ip_recursive on，那么就获取最左边的 ip，也就是排除设置了  set_real_ip_from(可信地址外的)。不一定是最左边的IP，而是从右边开始数，第一个非可信地址的IP(set_real_ip_from 可信地址外的)</p>
<p>当 nginx 前存在 SLB、反向代理时，我们是无法直接通过 <code>$remote_addr</code> 得到客户端IP地址的，此时变量 <code>$remote_addr</code> 的值是 <code>SLB</code> 等服务器的IP，并非真实客户端请求IP。</p>
<p>进而无法通过 <code>$remote_addr</code> 变量来对客户端做限流、限速等策略。</p>
<p>可通过 <code>--with-http_realip_module</code> 模块来获取真实客户端IP，默认是没有编译到 <code>nginx</code> 中的，需要通过 <code>./configure</code> 配置时手动添加，来启用此模块。</p>
<h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">curl -H <span class="string">'X-Forwarded-For: 93.184.216.34, 192.168.96.3, 127.0.0.1'</span> -H <span class="string">'cdn-src-ip: 122.4.117.22'</span> realip.codezm.com</span><br></pre></td></tr></tbody></table></figure>



<h4 id="限流"><a href="#限流" class="headerlink" title="限流"></a>限流</h4><p>限制并发连接。</p>
<h4 id="限速"><a href="#限速" class="headerlink" title="限速"></a>限速</h4><h5 id="时间单位"><a href="#时间单位" class="headerlink" title="时间单位"></a>时间单位</h5><ul>
<li>ms milliseconds</li>
<li>s seconds</li>
<li>m minutes</li>
<li>h hours</li>
<li>d days</li>
<li>w weeks</li>
<li>M months, 30 days</li>
<li>y years, 365 days</li>
</ul>
<h4 id="Nginx-内置变量"><a href="#Nginx-内置变量" class="headerlink" title="Nginx 内置变量"></a>Nginx 内置变量</h4><h5 id="在-nginx-中，如何使用-Get-参数变量"><a href="#在-nginx-中，如何使用-Get-参数变量" class="headerlink" title="在 nginx 中，如何使用 Get 参数变量"></a>在 nginx 中，如何使用 Get 参数变量</h5><figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">location</span> / {</span><br><span class="line">  <span class="attribute">return</span> <span class="number">200</span> <span class="string">"Get-Request Variables: <span class="variable">$arg_name</span>, <span class="variable">$arg_age</span>\n"</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">curl <span class="string">"var.codezm.com?name=codezm&amp;age=22"</span></span><br></pre></td></tr></tbody></table></figure>



<h5 id="在-nginx-中，如何使用自定义-header-变量"><a href="#在-nginx-中，如何使用自定义-header-变量" class="headerlink" title="在 nginx 中，如何使用自定义 header 变量"></a>在 nginx 中，如何使用自定义 header 变量</h5><figure class="highlight nginx"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">location</span> / {</span><br><span class="line">	<span class="attribute">return</span> <span class="number">200</span> <span class="string">"Client real ip: <span class="variable">$http_cdn_src_ip</span>\n"</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">curl -H <span class="string">'cdn-src-ip: 93.184.216.34'</span> realip.codezm.com</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
        <tag>极客时间</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS-Web开发工具安装</title>
    <url>/posts/MacOS/e285372f.html</url>
    <content><![CDATA[<p>MacOS-Web开发工具安装</p>
<hr>
<a id="more"></a>

<h4 id="brew-软件包工具安装"><a href="#brew-软件包工具安装" class="headerlink" title="brew 软件包工具安装"></a>brew 软件包工具安装</h4><ol>
<li><p>到 <a href="https://brew.sh/">https://brew.sh</a> 网站复制 <code>/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"</code> 脚本，在终端中，执行安装 <code>brew</code> 工具。</p>
</li>
<li><p><code>brew</code> 安装过程中，卡在 <code>Downloading Command Line Tools for Xcode</code>，至 <a href="https://developer.apple.com/download/more/">https://developer.apple.com/download/more/</a> 下载，对应 <code>xcode</code> 版本的 <code>Command_Line_Tools_for_Xcode_12.4.dmg</code> 安装文件，进行手动安装。或者通过 <code>xcode-select --intall</code> 命令进行安装（可查看安装进度）。</p>
</li>
<li><p><code>Xcode</code> 命令行工具安装成功后，继续执行 <code>/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</code> 命令，安装 <code>brew</code>。</p>
</li>
</ol>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ brew update</span><br><span class="line">error: Not a valid ref: refs/remotes/origin/master</span><br><span class="line">fatal: ambiguous argument <span class="string">'refs/remotes/origin/master'</span>: unknown revision or path not <span class="keyword">in</span> the working tree.</span><br><span class="line">$ rm -rf $(brew --repo homebrew/core)</span><br><span class="line">$ brew tap homebrew/core</span><br><span class="line">$ brew install nginx mysql</span><br><span class="line">$ brew services start nginx</span><br></pre></td></tr></tbody></table></figure>



<h4 id="启动系统自带-php-版本的-php-fpm-程序。"><a href="#启动系统自带-php-版本的-php-fpm-程序。" class="headerlink" title="启动系统自带 php 版本的 php-fpm 程序。"></a>启动系统自带 php 版本的 php-fpm 程序。</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 解决：</span></span><br><span class="line"><span class="comment"># 1. ERROR: failed to open configuration file '/private/etc/php-fpm.conf': No such file or directory (2)</span></span><br><span class="line">$ sudo cp /private/etc/php-fpm.conf.default /private/etc/php-fpm.conf</span><br><span class="line"><span class="comment"># 2. ERROR: No pool defined. at least one pool section must be specified in config file</span></span><br><span class="line">$ sudo cp /private/etc/php-fpm.d/www.conf.default /private/etc/php-fpm.d/www.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 系统中并无 `/usr/var/log` 目录，修改配置 php-fpm.log 错误日志路径：error_log = /usr/local/var/log/php-fpm.log</span></span><br><span class="line"><span class="comment"># ERROR: failed to open error_log (/usr/var/log/php-fpm.log): No such file or directory (2)</span></span><br><span class="line">$ sudo vi /private/etc/php-fpm.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 php-fpm</span></span><br><span class="line">$ sudo php-fpm</span><br></pre></td></tr></tbody></table></figure>



<h4 id="启动-mysql-服务"><a href="#启动-mysql-服务" class="headerlink" title="启动 mysql 服务"></a>启动 mysql 服务</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ mysql --version</span><br><span class="line">mysql  Ver 8.0.23 <span class="keyword">for</span> osx10.15 on x86_64 (Homebrew)</span><br><span class="line">$ brew services start mysql</span><br><span class="line">$ mysql -uroot phpcms &lt; /Users/codezm/www/police/phpcmsv9.sql</span><br><span class="line"><span class="comment"># mysql 8.0 对 enum 有更严格的要求，对插入数据的 `5724` 行开始起，修改 `enum` 字段默认值由 `''` 为 `'0'`。</span></span><br><span class="line">$ vi /Users/codezm/www/police/phpcmsv9.sql</span><br><span class="line">$ mysql -uroot phpcms &lt; /Users/codezm/www/police/phpcmsv9.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 mysql root 账号密码</span></span><br><span class="line">$ mysql -uroot</span><br><span class="line">mysql&gt; use mysql</span><br><span class="line">mysql&gt; ALTER USER <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED WITH mysql_native_password BY <span class="string">'1234'</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql 配置文件</span></span><br><span class="line">$ ls -la /usr/<span class="built_in">local</span>/etc/my.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment"># brew services start mysql 实际上将 /usr/local/opt/mysql/homebrew.mxcl.mysql.plist 复制到 /Users/codezm/Library/LaunchAgents/homebrew.mxcl.mysql.plist</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql.server start</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql 8.0</span></span><br><span class="line">vim /usr/<span class="built_in">local</span>/etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br><span class="line"><span class="comment"># ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '1234';</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="解决上传图片问题"><a href="#解决上传图片问题" class="headerlink" title="解决上传图片问题"></a>解决上传图片问题</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 解决 nginx：413 状态码错误</span></span><br><span class="line">$ vi /usr/<span class="built_in">local</span>/etc/nginx/nginx.conf</span><br><span class="line"></span><br><span class="line">http {</span><br><span class="line">	...</span><br><span class="line">	client_max_body_size 20m;</span><br><span class="line">	...</span><br><span class="line">	</span><br><span class="line">	server {</span><br><span class="line">		...</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认配置项值</span></span><br><span class="line">$ vi php.ini</span><br><span class="line">upload_max_filesize = 2M</span><br><span class="line">post-max-size = 8M</span><br><span class="line"></span><br><span class="line">$ vi /usr/<span class="built_in">local</span>/var/<span class="built_in">log</span>/nginx/error.log</span><br><span class="line">[error] 63127<span class="comment">#0: *180 FastCGI sent in stderr: "PHP message: PHP Warning:  POST Content-Length of 11096034 bytes exceeds the limit of 10485760 bytes in Unknown on line 0" while reading response header from upstream, client: 127.0.0.1, server: , request: "POST /index.php"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改配置项值</span></span><br><span class="line">$ vi php.ini</span><br><span class="line">upload_max_filesize = 100M</span><br><span class="line">post-max-size = 100M</span><br><span class="line"></span><br><span class="line">$ chmod -R 777 caches sites</span><br></pre></td></tr></tbody></table></figure>



<h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><h4 id="Mac-自带-php-版本-GD-库缺少-Freetype"><a href="#Mac-自带-php-版本-GD-库缺少-Freetype" class="headerlink" title="Mac 自带 php 版本 GD 库缺少 Freetype"></a>Mac 自带 php 版本 GD 库缺少 <code>Freetype</code></h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ brew install php@7.2 --build-from-source</span><br><span class="line"><span class="comment"># 7.4 起, 已将 get_magic_quotes_gpc() is deprecated</span></span><br><span class="line">$ brew install php@7.4 --build-from-source</span><br></pre></td></tr></tbody></table></figure>

<h4 id="配置-php-环境变量"><a href="#配置-php-环境变量" class="headerlink" title="配置 php 环境变量"></a>配置 php 环境变量</h4><p>默认系统自带 php 的版本是 <code>7.1.23</code>，而新安装的 php 版本是 <code>7.2.34</code>。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">brew link --overwrite php@7.2</span><br></pre></td></tr></tbody></table></figure>

<h4 id="PHP-安装部署相关路径"><a href="#PHP-安装部署相关路径" class="headerlink" title="PHP 安装部署相关路径"></a>PHP 安装部署相关路径</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># php-fpm 日志路径</span></span><br><span class="line">$ tail -f /usr/<span class="built_in">local</span>/var/<span class="built_in">log</span>/php-fpm.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># php 可执行文件</span></span><br><span class="line">$ ls -la /usr/<span class="built_in">local</span>/Cellar/php@7.4/7.4.16_1/bin</span><br><span class="line">total 78640</span><br><span class="line">drwxr-xr-x  12 codezm  admin       384  6  3 15:48 .</span><br><span class="line">drwxr-xr-x  15 codezm  admin       480  6  3 15:48 ..</span><br><span class="line">-r-xr-xr-x   1 codezm  admin       970  6  3 15:48 pear</span><br><span class="line">-r-xr-xr-x   1 codezm  admin       991  6  3 15:48 peardev</span><br><span class="line">-r-xr-xr-x   1 codezm  admin       904  6  3 15:48 pecl</span><br><span class="line">lrwxr-xr-x   1 codezm  admin         9  3  2 18:35 phar -&gt; phar.phar</span><br><span class="line">-rwxr-xr-x   1 codezm  admin     14912  6  3 15:48 phar.phar</span><br><span class="line">-r-xr-xr-x   1 codezm  admin  13377808  6  3 15:48 php</span><br><span class="line">-r-xr-xr-x   1 codezm  admin  13322488  6  3 15:48 php-cgi</span><br><span class="line">-r-xr-xr-x   1 codezm  admin      7108  6  3 15:48 php-config</span><br><span class="line">-r-xr-xr-x   1 codezm  admin  13510436  6  3 15:48 phpdbg</span><br><span class="line">-r-xr-xr-x   1 codezm  admin      4581  6  3 15:48 phpize</span><br><span class="line">ls -la /usr/<span class="built_in">local</span>/Cellar/php@7.4/7.4.16_1/sbin</span><br><span class="line">-r-xr-xr-x   1 codezm  admin  13411132  6  3 15:48 php-fpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件</span></span><br><span class="line">$ php --ini</span><br><span class="line">$ vim /usr/<span class="built_in">local</span>/etc/php/7.4/php.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># PHP扩展目录</span></span><br><span class="line">$ ls -la /usr/<span class="built_in">local</span>/lib/php/pecl/20190902</span><br></pre></td></tr></tbody></table></figure>



<h4 id="安装PHP扩展"><a href="#安装PHP扩展" class="headerlink" title="安装PHP扩展"></a>安装PHP扩展</h4><p>在安装 php-7.2.34_2 版本时，通过执行 <code>pecl install</code> 安装命令，<code>so</code> 文件生成路径与 <code>php.ini</code> 中路径配置不一致。</p>
<p>下面将介绍如何使两处配置为同一引用路径。</p>
<p>修改 <code>vim $(which php-config)</code> 生成 <code>so</code> 文件保存路径。</p>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 源</span></span><br><span class="line"><span class="attr">extension_dir</span>=<span class="string">'/usr/local/Cellar/php@7.2/7.2.34_2/pecl/20170718'</span></span><br><span class="line"><span class="comment"># 改为</span></span><br><span class="line"><span class="attr">extension_dir</span>=<span class="string">'/usr/local/Cellar/php@7.2/7.2.34_2/lib/php/20170718'</span></span><br></pre></td></tr></tbody></table></figure>

<p><code>vim $(php --ini | grep Loaded | awk '{print $4}') </code></p>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 源</span></span><br><span class="line"><span class="comment">;extension_dir = "/usr/local/lib/php/pecl/20170718"</span></span><br><span class="line"><span class="comment"># 改为</span></span><br><span class="line"><span class="attr">extension_dir</span> = <span class="string">"/usr/local/Cellar/php@7.2/7.2.34_2/lib/php/20170718"</span></span><br></pre></td></tr></tbody></table></figure>



<h5 id="安装PHP扩展：swoole"><a href="#安装PHP扩展：swoole" class="headerlink" title="安装PHP扩展：swoole"></a>安装PHP扩展：swoole</h5><p>配置 openssl 库路径</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> LDFLAGS=<span class="string">"-L/usr/local/opt/openssl/lib"</span></span><br><span class="line"><span class="built_in">export</span> CPPFLAGS=<span class="string">"-I/usr/local/opt/openssl/include"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># swoole-4.6.6</span></span><br><span class="line">pecl install --configureoptions <span class="string">'enable-sockets="yes" enable-openssl="yes" enable-http2="yes" enable-mysqlnd="yes" enable-swoole-json="yes" enable-swoole-curl="yes"'</span> swoole</span><br><span class="line"><span class="comment"># pecl install -D 'enable-sockets="no" enable-openssl="yes" enable-http2="yes" enable-mysqlnd="yes" enable-swoole-json="no" enable-swoole-curl="yes"' swoole</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># swoole-1.10.5</span></span><br><span class="line">pecl install --configureoptions <span class="string">'enable-swoole-debug="no" enable-sockets="no" enable-openssl="no" enable-http2="no" enable-async-redis="no" enable-mysqlnd="no"'</span> https://pecl.php.net/get/swoole-1.10.5.tgz</span><br></pre></td></tr></tbody></table></figure>



<h5 id="安装PHP扩展：yaf、redis、memcached、"><a href="#安装PHP扩展：yaf、redis、memcached、" class="headerlink" title="安装PHP扩展：yaf、redis、memcached、"></a>安装PHP扩展：yaf、redis、memcached、</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># yaf-3.3.2</span></span><br><span class="line">pecl install yaf</span><br><span class="line"></span><br><span class="line"><span class="comment"># redis-5.3.4</span></span><br><span class="line">pecl install -D <span class="string">'enable-redis-igbinary="no" enable-redis-lzf="yes" enable-redis-zstd="yes"'</span> redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># memcached-3.1.5</span></span><br><span class="line">pecl install memcached libmemcached</span><br><span class="line">pecl install -D <span class="string">'with-libmemcached-dir="yes" with-zlib-dir="yes" with-system-fastlz="no" enable-memcached-igbinary="no" enable-memcached-msgpack="no" enable-memcached-json="yes" enable-memcached-protocol="no" enable-memcached-sasl="yes" enable-memcached-session="yes"'</span> memcached</span><br><span class="line"></span><br><span class="line"><span class="comment"># memcache-4.0.5.2</span></span><br><span class="line"><span class="comment"># pecl install -D 'enable-memcache-session="yes"' https://pecl.php.net/get/memcache-4.0.5.2.tgz</span></span><br><span class="line"><span class="comment"># checking for the location of zlib... configure: error: memcache support requires ZLIB. Use --with-zlib-dir=&lt;DIR&gt; to specify prefix where ZLIB include and library are located</span></span><br><span class="line"><span class="comment"># ERROR: `/private/tmp/memcache/configure --with-php-config=/usr/local/opt/php@7.4/bin/php-config --enable-memcache-session=yes' failed</span></span><br><span class="line">brew install zlib</span><br><span class="line">pecl download https://pecl.php.net/get/memcache-4.0.5.2.tgz</span><br><span class="line">tar zxf memcache-4.0.5.2.tgz</span><br><span class="line"><span class="built_in">cd</span> <span class="built_in">cd</span> memcache-4.0.5.2</span><br><span class="line">/usr/<span class="built_in">local</span>/opt/php@7.4/bin/phpize</span><br><span class="line">./configure --with-php-config=/usr/<span class="built_in">local</span>/opt/php@7.4/bin/php-config --enable-memcache-session=yes --with-zlib-dir=<span class="string">"/usr/local/Cellar/zlib/1.2.11"</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>

<h4 id="多个php版本切换使用"><a href="#多个php版本切换使用" class="headerlink" title="多个php版本切换使用"></a>多个php版本切换使用</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 php@7.2 版本</span></span><br><span class="line">brew unlink php@7.4</span><br><span class="line">brew link php@7.2</span><br><span class="line"></span><br><span class="line">brew link --overwrite php@7.4</span><br></pre></td></tr></tbody></table></figure>



<h4 id="php-多版本启用"><a href="#php-多版本启用" class="headerlink" title="php 多版本启用"></a>php 多版本启用</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># listen=127.0.0.1:9074</span></span><br><span class="line">vim /usr/<span class="built_in">local</span>/etc/php/7.4/php-fpm.d/www.conf</span><br></pre></td></tr></tbody></table></figure>



<h3 id="Mysql-Server"><a href="#Mysql-Server" class="headerlink" title="Mysql-Server"></a>Mysql-Server</h3><ul>
<li><a href="https://imysql.com/my-cnf-wizard.html">my.cnf 配置文件生成工具</a></li>
</ul>
<h4 id="mysql-8-0-24-server-部署"><a href="#mysql-8-0-24-server-部署" class="headerlink" title="mysql-8.0.24 server 部署"></a>mysql-8.0.24 server 部署</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">mv ~/Downloads/mysql-8.0.24-macos11-x86_64 /usr/<span class="built_in">local</span>/opt/mysql@8.0</span><br><span class="line">mdkir /Volumes/work/web/databases/3309-8.0</span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/etc/mysql@8.0</span><br><span class="line">vim /usr/<span class="built_in">local</span>/etc/mysql@8.0/my.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库初始化</span></span><br><span class="line">/usr/<span class="built_in">local</span>/opt/mysql@8.0/bin/mysqld --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@8.0/my.cnf --initialize</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动数据库 Server</span></span><br><span class="line">/usr/<span class="built_in">local</span>/opt/mysql@8.0/bin/mysqld --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@8.0/my.cnf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/opt/mysql@8.0/bin/mysql --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@8.0/my.cnf -u mysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/opt/mysql@8.0/bin/mysqld_safe --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@8.0/master.cnf --user=mysql --skip-grant-tables --skip-networking</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mkdir /Volumes/work/web/databases/master-13306-8.0.23 /Volumes/work/web/databases/slave-23306-8.0.23 /Volumes/work/web/databases/slave-33306-8.0.23</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/opt/mysql@8.0/bin/mysqld --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@8.0/master.cnf --initialize</span><br><span class="line">/usr/<span class="built_in">local</span>/opt/mysql@8.0/bin/mysqld --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@8.0/slave.cnf --initialize</span><br><span class="line">/usr/<span class="built_in">local</span>/opt/mysql@8.0/bin/mysqld --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@8.0/slave-33306.cnf --initialize</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动主库</span></span><br><span class="line">/usr/<span class="built_in">local</span>/opt/mysql@8.0/bin/mysqld --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@8.0/master.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动从库</span></span><br><span class="line">/usr/<span class="built_in">local</span>/opt/mysql@8.0/bin/mysqld --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@8.0/slave.cnf</span><br><span class="line">/usr/<span class="built_in">local</span>/opt/mysql@8.0/bin/mysqld --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@8.0/slave-33306.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取主库临时密码</span></span><br><span class="line">grep <span class="string">"A temporary password"</span> /Volumes/work/web/databases/master-13306-8.0.23/error.log</span><br><span class="line"><span class="comment"># 更改主库临时密码</span></span><br><span class="line">mysql80-master -u root -p</span><br><span class="line">alter user <span class="string">"root"</span>@<span class="string">"localhost"</span> identified by <span class="string">"1234"</span>;</span><br><span class="line"><span class="comment"># 查看主库状态</span></span><br><span class="line">show master status\G;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取从库临时密码</span></span><br><span class="line">grep <span class="string">"A temporary password"</span> /Volumes/work/web/databases/slave-23306-8.0.23/error.log</span><br><span class="line"><span class="comment"># 更改主库临时密码</span></span><br><span class="line">mysql80-master -u root -p</span><br><span class="line">alter user <span class="string">"root"</span>@<span class="string">"localhost"</span> identified by <span class="string">"1234"</span>;</span><br><span class="line"><span class="comment"># 1130 - Host '127.0.0.1' is not allowed to connect to this MySQL server</span></span><br><span class="line">use mysql;</span><br><span class="line">update user <span class="built_in">set</span> host =<span class="string">'%'</span><span class="built_in">where</span> user =<span class="string">'root'</span> and host =<span class="string">'localhost'</span>;</span><br><span class="line"><span class="comment"># 刷新使用权限命令</span></span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从库订阅主库</span></span><br><span class="line">change master to master_host=<span class="string">'127.0.0.1'</span>,master_port=13306,master_user=<span class="string">'root'</span>,master_password=<span class="string">'1234'</span>,master_log_file=<span class="string">'mybinlog.000002'</span>,master_log_pos=477;</span><br><span class="line"><span class="comment"># 启动 slave 同步</span></span><br><span class="line">start slave;</span><br><span class="line"><span class="comment"># 查看同步状态</span></span><br><span class="line">show slave status\G;</span><br></pre></td></tr></tbody></table></figure>



<p><code>vim /usr/local/opt/mysql@8.0/homebrew.mxcl.mysql.plist</code></p>
<p>原文件内容</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span><br><span class="line">&lt;plist version="1.0"&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">  &lt;key&gt;KeepAlive&lt;/key&gt;</span><br><span class="line">  &lt;true/&gt;</span><br><span class="line">  &lt;key&gt;Label&lt;/key&gt;</span><br><span class="line">  &lt;string&gt;homebrew.mxcl.mysql&lt;/string&gt;</span><br><span class="line">  &lt;key&gt;ProgramArguments&lt;/key&gt;</span><br><span class="line">  &lt;array&gt;</span><br><span class="line">    &lt;string&gt;/usr/local/opt/mysql/bin/mysqld_safe&lt;/string&gt;</span><br><span class="line">    &lt;string&gt;--datadir=/usr/local/var/mysql&lt;/string&gt;</span><br><span class="line">  &lt;/array&gt;</span><br><span class="line">  &lt;key&gt;RunAtLoad&lt;/key&gt;</span><br><span class="line">  &lt;true/&gt;</span><br><span class="line">  &lt;key&gt;WorkingDirectory&lt;/key&gt;</span><br><span class="line">  &lt;string&gt;/usr/local/var/mysql&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/plist&gt;</span><br></pre></td></tr></tbody></table></figure>

<p>改为：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span><br><span class="line">&lt;plist version="1.0"&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">  &lt;key&gt;KeepAlive&lt;/key&gt;</span><br><span class="line">  &lt;true/&gt;</span><br><span class="line">  &lt;key&gt;Label&lt;/key&gt;</span><br><span class="line">  &lt;string&gt;homebrew.mxcl.mysql&lt;/string&gt;</span><br><span class="line">  &lt;key&gt;ProgramArguments&lt;/key&gt;</span><br><span class="line">  &lt;array&gt;</span><br><span class="line">    &lt;string&gt;/usr/local/opt/mysql/bin/mysqld_safe&lt;/string&gt;</span><br><span class="line">    &lt;string&gt;--defaults-file=/usr/local/etc/mysql@8.0/master.cnf&lt;/string&gt;</span><br><span class="line">  &lt;/array&gt;</span><br><span class="line">  &lt;key&gt;RunAtLoad&lt;/key&gt;</span><br><span class="line">  &lt;true/&gt;</span><br><span class="line">  &lt;key&gt;WorkingDirectory&lt;/key&gt;</span><br><span class="line">  &lt;string&gt;/Volumes/work/web/databases/master-13306-8.0.23&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/plist&gt;</span><br></pre></td></tr></tbody></table></figure>



<h4 id="mysql-5-5-3-server-部署"><a href="#mysql-5-5-3-server-部署" class="headerlink" title="mysql-5.5.3 server 部署"></a>mysql-5.5.3 server 部署</h4><ul>
<li><p><a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p>
</li>
<li><p><a href="https://downloads.mysql.com/archives/get/p/23/file/mysql-5.5.3-m3-osx10.6-x86_64.tar.gz">https://downloads.mysql.com/archives/get/p/23/file/mysql-5.5.3-m3-osx10.6-x86_64.tar.gz</a></p>
</li>
</ul>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">mv ~/Downloads/mysql-5.5.3-m3-osx10.6-x86_64/ /usr/<span class="built_in">local</span>/opt/mysql@5.5</span><br><span class="line">chown -R codezm:staff /usr/<span class="built_in">local</span>/opt/mysql@5.5</span><br><span class="line">mkdir /Volumes/work/web/databases/3305</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件</span></span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/etc/mysql@5.5</span><br><span class="line">vim /usr/<span class="built_in">local</span>/etc/mysql@5.5/my.cnf</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">port=3305</span><br><span class="line">socket=/Volumes/work/web/databases/3305/mysql.sock</span><br><span class="line">[mysqld]</span><br><span class="line">bind-address = 127.0.0.1</span><br><span class="line">port=3305</span><br><span class="line">datadir=/Volumes/work/web/databases/3305</span><br><span class="line">socket=/Volumes/work/web/databases/3305/mysql.sock</span><br><span class="line">pid-file=/Volumes/work/web/databases/3305/mysql.pid</span><br><span class="line">table_open_cache=1024</span><br><span class="line">max_allowed_packet=104857600</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化数据库</span></span><br><span class="line">sudo /usr/<span class="built_in">local</span>/opt/mysql@5.5/scripts/mysql_install_db --user=root --datadir=/Volumes/work/web/databases/3305 --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@5.5/my.cnf</span><br><span class="line">chown -R codezm:staff /Volumes/work/web/databases/3305</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 mysql server</span></span><br><span class="line">sudo /usr/<span class="built_in">local</span>/opt/mysql@5.5/bin/mysqld_safe --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@5.5/my.cnf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># /usr/local/opt/mysql@5.5/bin/mysqld --defaults-file=/usr/local/etc/mysql@5.5/my.cnf --basedir=/usr/local/opt/mysql@5.5</span></span><br></pre></td></tr></tbody></table></figure>

<h5 id="遇到的问题及解决方案"><a href="#遇到的问题及解决方案" class="headerlink" title="遇到的问题及解决方案"></a>遇到的问题及解决方案</h5><h6 id="ERROR-Can-39-t-find-messagefile-39-usr-share-errmsg-sys-39"><a href="#ERROR-Can-39-t-find-messagefile-39-usr-share-errmsg-sys-39" class="headerlink" title="[ERROR] Can't find messagefile '/usr/share/errmsg.sys'"></a><code>[ERROR] Can't find messagefile '/usr/share/errmsg.sys'</code></h6><p>mysql的启动目录不正确，使用 <code>--basedir</code> 参数设置启动目录。</p>
<h6 id="Can-39-t-find-file-39-mysql-plugin-frm-39-errno-13"><a href="#Can-39-t-find-file-39-mysql-plugin-frm-39-errno-13" class="headerlink" title="Can't find file: './mysql/plugin.frm' (errno: 13)"></a><code>Can't find file: './mysql/plugin.frm' (errno: 13)</code></h6><p>mysql 脚本目录 或 mysql 数据库目录权限有问题。</p>
<h5 id="修改默认-root-账号密码"><a href="#修改默认-root-账号密码" class="headerlink" title="修改默认 root 账号密码"></a>修改默认 root 账号密码</h5><p>默认 root 账号的密码是空的。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ /usr/<span class="built_in">local</span>/opt/mysql@5.5/bin/mysql --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@5.5/my.cnf -u root</span><br><span class="line">mysql&gt; <span class="built_in">set</span> password <span class="keyword">for</span> root@localhost = password(<span class="string">'1234'</span>);</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>注意：不要漏了 <code>-u root</code> 参数，作用是使用 <code>root</code> 账号登录。不加则是匿名登录，权限有限无法实现更改密码操作。</p>
<p>mysql&gt; show databases;<br>+——————–+<br>| Database           |<br>+——————–+<br>| information_schema |<br>| test               |<br>+——————–+<br>2 rows in set (0.00 sec)</p>
<p>mysql&gt; set password for root@localhost = password(‘1234’);<br>ERROR 1044 (42000): Access denied for user ‘’@’localhost’ to database ‘mysql’</p>
</blockquote>
<h6 id="禁止匿名登录"><a href="#禁止匿名登录" class="headerlink" title="禁止匿名登录"></a>禁止匿名登录</h6><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; delete from user where user='';</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; \q</span><br></pre></td></tr></tbody></table></figure>

<h6 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h6><p>修改了 root 账号密码、禁用了匿名登录，如何再使用命令行模式时无需输入账号密码？</p>
<p><code>vim /usr/local/etc/mysql@5.5/my.cnf</code></p>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3305</span></span><br><span class="line"><span class="attr">socket</span>=/Volumes/work/web/databases/<span class="number">3305</span>/mysql.sock</span><br><span class="line"><span class="attr">user</span>=root</span><br><span class="line"><span class="attr">password</span>=<span class="number">1234</span></span><br></pre></td></tr></tbody></table></figure>

<p>保存配置文件后，再通过 client 命令登录时，就无需输入账号及密码了。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ /usr/<span class="built_in">local</span>/opt/mysql@5.5/bin/mysql --defaults-file=/usr/<span class="built_in">local</span>/etc/mysql@5.5/my.cnf</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></tbody></table></figure>



<h5 id="开启远程连接"><a href="#开启远程连接" class="headerlink" title="开启远程连接"></a>开启远程连接</h5><h6 id="1-更改-mysqld-监听IP地址。"><a href="#1-更改-mysqld-监听IP地址。" class="headerlink" title="1. 更改 mysqld 监听IP地址。"></a>1. 更改 mysqld 监听IP地址。</h6><p>编辑 <code>vim /usr/local/etc/mysql@5.5/my.cnf</code> 配置文件，在 <code>mysqld</code> 中，禁用监听本地IP。</p>
<figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment"># bind-address = 127.0.0.1</span></span><br></pre></td></tr></tbody></table></figure>

<h6 id="2-开启外网访问权限。"><a href="#2-开启外网访问权限。" class="headerlink" title="2. 开启外网访问权限。"></a>2. 开启外网访问权限。</h6><p><code>grant all privileges on *.* to 'root'@'[允许的ip]' identified by '[密码]' with grant option;</code></p>
<p>其中 <code>[允许的ip]</code> 如果设置为 <code>%</code> 的话则表示所有ip都可以访问，<code>[密码]</code> 表示外网访问的密码是什么。此处设置成所有ip都可访问，密码是 <code>1234</code>：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; select user,host from user;</span><br><span class="line">+------+--------------------+</span><br><span class="line">| user | host               |</span><br><span class="line">+------+--------------------+</span><br><span class="line">| root | 127.0.0.1          |</span><br><span class="line">| root | ::1                |</span><br><span class="line">| root | codezmdeiMac.local |</span><br><span class="line">| root | localhost          |</span><br><span class="line">+------+--------------------+</span><br><span class="line">4 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all privileges on *.* to 'root'@'%' identified by '1234' with grant option;</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; select user,host from user;</span><br><span class="line">+------+--------------------+</span><br><span class="line">| user | host               |</span><br><span class="line">+------+--------------------+</span><br><span class="line">| root | %                  |</span><br><span class="line">| root | 127.0.0.1          |</span><br><span class="line">| root | ::1                |</span><br><span class="line">| root | codezmdeiMac.local |</span><br><span class="line">| root | localhost          |</span><br><span class="line">+------+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></tbody></table></figure>



<h5 id="优化-mysql-server-启动方式、客户端连接方式。"><a href="#优化-mysql-server-启动方式、客户端连接方式。" class="headerlink" title="优化 mysql-server 启动方式、客户端连接方式。"></a>优化 mysql-server 启动方式、客户端连接方式。</h5><p>记不住这一长串命令启动 mysql-server 命令，客户端连接命令。通过以下方式创建命令别名。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"alias mysql55='/usr/local/opt/mysql@5.5/bin/mysql --defaults-file=/usr/local/etc/mysql@5.5/my.cnf'"</span> &gt;&gt; ~/.zshrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"alias mysqld55='cd /usr/local/opt/mysql@5.5 &amp;&amp; (/usr/local/opt/mysql@5.5/bin/mysqld_safe --defaults-file=/usr/local/etc/mysql@5.5/my.cnf &amp;) &amp;&amp; cd -'"</span> &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 mysql-5.5.3 server</span></span><br><span class="line">mysqld55</span><br><span class="line"><span class="comment"># 运行 mysql 客户端</span></span><br><span class="line">mysql55</span><br></pre></td></tr></tbody></table></figure>



<h4 id="Redis-Server"><a href="#Redis-Server" class="headerlink" title="Redis Server"></a>Redis Server</h4><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">brew install redis</span><br><span class="line">redis-server /usr/<span class="built_in">local</span>/etc/redis.conf</span><br></pre></td></tr></tbody></table></figure>





<h4 id="Nginx-每次必须使用-sudo-权限，否则无法上传图片"><a href="#Nginx-每次必须使用-sudo-权限，否则无法上传图片" class="headerlink" title="Nginx 每次必须使用 sudo 权限，否则无法上传图片"></a>Nginx 每次必须使用 sudo 权限，否则无法上传图片</h4><p>查看错误日志： <code>tail -f /usr/local/var/log/nginx/error.log</code>，日志详情如下。</p>
<blockquote>
<p>2021/05/11 13:49:26 [crit] 97853#0: *4 open() “/usr/local/var/run/nginx/client_body_temp/0000000001” failed (13: Permission denied), client: 192.168.36.47, server: , request: “POST /index.php?m=attachment&amp;c=attachments&amp;a=upload&amp;module=content&amp;catid=17&amp;dosubmit=1 HTTP/1.1”, host: “192.168.36.47:8080”, referrer: “<a href="http://192.168.36.47:8080/index.php?m=content&amp;c=content&amp;a=add&amp;menuid=&amp;catid=17&amp;pc_hash=542G5c&amp;pc_hash=542G5c&quot;">http://192.168.36.47:8080/index.php?m=content&amp;c=content&amp;a=add&amp;menuid=&amp;catid=17&amp;pc_hash=542G5c&amp;pc_hash=542G5c"</a></p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ /usr/<span class="built_in">local</span>/var/run/</span><br><span class="line">drwxr-xr-x   6 codezm  admin  192  5 11 13:47 .</span><br><span class="line">drwxrwxr-x  10 codezm  admin  320  5 10 17:16 ..</span><br><span class="line">drwxr-xr-x   2 codezm  admin   64  3 11 17:21 httpd</span><br><span class="line">drwxr-xr-x   4 codezm  admin  128  9 29  2019 libvirt</span><br><span class="line">drwxr-xr-x   7 codezm  admin  224  7 11  2017 nginx</span><br><span class="line">-rw-r--r--   1 codezm  admin    6  5 11 13:47 nginx.pid</span><br><span class="line">$ ls -la /usr/<span class="built_in">local</span>/var/run/nginx/</span><br><span class="line">drwx------   2 nobody  admin   64  5 11 13:34 client_body_temp</span><br><span class="line">drwx------   2 nobody  admin   64  7 11  2017 fastcgi_temp</span><br><span class="line">drwx------  12 nobody  admin  384  9 11  2017 proxy_temp</span><br><span class="line">drwx------   2 nobody  admin   64  7 11  2017 scgi_temp</span><br><span class="line">drwx------   2 nobody  admin   64  7 11  2017 uwsgi_temp</span><br><span class="line">$ sudo chown -R codezm:admin /usr/<span class="built_in">local</span>/var/run/nginx</span><br></pre></td></tr></tbody></table></figure>



<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">brew services start mysql@5.7 /usr/<span class="built_in">local</span>/Cellar/mysql@5.7/5.7.32/homebrew.mxcl.mysql@5.7.plist</span><br></pre></td></tr></tbody></table></figure>



<h4 id="关于-brew-加速"><a href="#关于-brew-加速" class="headerlink" title="关于 brew 加速"></a>关于 brew 加速</h4><ul>
<li><a href="https://zhuanlan.zhihu.com/p/89941189">https://zhuanlan.zhihu.com/p/89941189</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/90508170">https://zhuanlan.zhihu.com/p/90508170</a></li>
</ul>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>MacOS</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客搭建之_config.next.yml</title>
    <url>/posts/hexo/2bbc4a18.html</url>
    <content><![CDATA[<p>记录 - 完整主题配置文件：</p>
<a id="more"></a>

<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Theme Core Configuration Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/theme-settings/</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If false, merge configs from `_data/next.yml` into default configuration (rewrite).</span></span><br><span class="line"><span class="comment"># If true, will fully override default configuration by options from `_data/next.yml` (override). Only for NexT settings.</span></span><br><span class="line"><span class="comment"># And if true, all config from default NexT `_config.yml` have to be copied into `next.yml`. Use if you know what you are doing.</span></span><br><span class="line"><span class="comment"># Useful if you want to comment some options from NexT `_config.yml` by `next.yml` without editing default config.</span></span><br><span class="line"><span class="attr">override:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Console reminder if new version released.</span></span><br><span class="line"><span class="attr">reminder:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Allow to cache content generation. Introduced in NexT v6.0.0.</span></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove unnecessary files after hexo generate.</span></span><br><span class="line"><span class="attr">minify:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define custom file paths.</span></span><br><span class="line"><span class="comment"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span></span><br><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.swig</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.swig</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.swig</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.swig</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.swig</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.swig</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.swig</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="comment">#style: source/_data/styles.styl</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Site Information Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/getting-started/</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-16x16-next.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-32x32-next.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show multilingual switcher in footer.</span></span><br><span class="line"><span class="attr">language_switcher:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="comment"># Specify the date when the site was setup. If not defined, current year will be used.</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2016</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Icon between year and copyright info.</span></span><br><span class="line">  <span class="attr">icon:</span></span><br><span class="line">    <span class="comment"># Icon name in Font Awesome. See: https://fontawesome.com/icons</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">fa</span> <span class="string">fa-heart</span></span><br><span class="line">    <span class="comment"># If you want to animate the icon, set it to true.</span></span><br><span class="line">    <span class="attr">animated:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Change the color of icon, using Hex Code.</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">"#ff0000"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If not defined, `author` from Hexo `_config.yml` will be used.</span></span><br><span class="line">  <span class="attr">copyright:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Powered by Hexo &amp; NexT</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Beian ICP and gongan information for Chinese users. See: https://beian.miit.gov.cn, http://www.beian.gov.cn</span></span><br><span class="line">  <span class="attr">beian:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">icp:</span></span><br><span class="line">    <span class="comment"># The digit in the num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_id:</span></span><br><span class="line">    <span class="comment"># The full num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_num:</span></span><br><span class="line">    <span class="comment"># The icon for gongan beian. See: http://www.beian.gov.cn/portal/download</span></span><br><span class="line">    <span class="attr">gongan_icon_url:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/share-your-work/licensing-types-examples</span></span><br><span class="line"><span class="comment"># Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line"><span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">language:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Dark Mode</span></span><br><span class="line"><span class="attr">darkmode:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># External url should start with http:// or https://</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="comment">#about: /about/ || fa fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="comment">#archives: /archives/ || fa fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable / Disable menu icons / item badges.</span></span><br><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">badges:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Sidebar Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/theme-settings/sidebar</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="comment"># Sidebar Position.</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">  <span class="comment">#position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Manual define the sidebar width. If commented, will be default for:</span></span><br><span class="line">  <span class="comment"># Muse | Mist: 320</span></span><br><span class="line">  <span class="comment"># Pisces | Gemini: 240</span></span><br><span class="line">  <span class="comment">#width: 300</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar Display (only for Muse | Mist), available values:</span></span><br><span class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></span><br><span class="line">  <span class="comment">#  - always  expand for all pages automatically.</span></span><br><span class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line">  <span class="comment">#  - remove  totally remove sidebar including sidebar toggle.</span></span><br><span class="line">  <span class="attr">display:</span> <span class="string">post</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar padding in pixels.</span></span><br><span class="line">  <span class="attr">padding:</span> <span class="number">18</span></span><br><span class="line">  <span class="comment"># Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span></span><br><span class="line">  <span class="attr">offset:</span> <span class="number">12</span></span><br><span class="line">  <span class="comment"># Enable sidebar on narrow view (only for Muse | Mist).</span></span><br><span class="line">  <span class="attr">onmobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="comment">#/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Posts / Categories / Tags in sidebar.</span></span><br><span class="line"><span class="attr">site_state:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/codezm</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">codezm@163.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || fab fa-google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || fab fa-facebook</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || fab fa-youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || fab fa-instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || fab fa-skype</span></span><br><span class="line"></span><br><span class="line"><span class="attr">social_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">icons_only:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">transition:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Blog rolls</span></span><br><span class="line"><span class="attr">links_settings:</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Links</span></span><br><span class="line">  <span class="comment"># Available values: block | inline</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">block</span></span><br><span class="line"></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="comment">#Title: http://yoursite.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Table of Contents in the Sidebar</span></span><br><span class="line"><span class="comment"># Front-matter variable (unsupport wrap expand_all).</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Maximum heading depth of generated toc.</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A button to open designated chat widget in sidebar.</span></span><br><span class="line"><span class="comment"># Firstly, you need enable the chat service you want to activate its sidebar button.</span></span><br><span class="line"><span class="attr">chat:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment">#service: chatra</span></span><br><span class="line">  <span class="comment">#service: tidio</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-comment</span> <span class="comment"># Icon name in Font Awesome, set false to disable icon.</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">Chat</span> <span class="comment"># Button text, change it as you wish.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Post Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/theme-settings/posts</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read more button</span></span><br><span class="line"><span class="comment"># If true, the read more button will be displayed in excerpt section.</span></span><br><span class="line"><span class="attr">read_more_btn:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">created_at:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">updated_at:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">another_day:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span></span><br><span class="line"><span class="attr">tag_icon:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Reward (Donate)</span></span><br><span class="line"><span class="comment"># Front-matter variable (unsupport animation).</span></span><br><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, reward will be displayed in every article by default.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment">#comment: Donate comment here.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="comment">#wechatpay: /images/wechatpay.png</span></span><br><span class="line">  <span class="comment">#alipay: /images/alipay.png</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Subscribe through Telegram Channel, Twitter, etc.</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon` (Font Awesome)</span></span><br><span class="line"><span class="attr">follow_me:</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/username || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#Telegram: https://t.me/channel_name || fab fa-telegram</span></span><br><span class="line">  <span class="comment">#WeChat: /images/wechat_channel.jpg || fab fa-weixin</span></span><br><span class="line">  <span class="comment">#RSS: /atom.xml || fa fa-rss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Related popular posts</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/tea3/hexo-related-popular-posts</span></span><br><span class="line"><span class="attr">related_posts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">title:</span> <span class="comment"># Custom header, leave empty to use the default one</span></span><br><span class="line">  <span class="attr">display_in_home:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">maxCount:</span> <span class="number">5</span></span><br><span class="line">    <span class="comment">#PPMixingRate: 0.0</span></span><br><span class="line">    <span class="comment">#isDate: false</span></span><br><span class="line">    <span class="comment">#isImage: false</span></span><br><span class="line">    <span class="comment">#isExcerpt: false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post edit</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/hexojs/hexo-deployer-git</span></span><br><span class="line"><span class="attr">post_edit:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name</span> <span class="comment"># Link for view source</span></span><br><span class="line">  <span class="comment">#url: https://github.com/user-name/repo-name/edit/branch-name/subdirectory-name # Link for fork &amp; edit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show previous post and next post in post footer if exists</span></span><br><span class="line"><span class="comment"># Available values: left | right | false</span></span><br><span class="line"><span class="attr">post_navigation:</span> <span class="string">left</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Custom Page Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/theme-settings/custom-pages</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TagCloud settings for tags page.</span></span><br><span class="line"><span class="attr">tagcloud:</span></span><br><span class="line">  <span class="comment"># All values below are same as default, change them by yourself.</span></span><br><span class="line">  <span class="attr">min:</span> <span class="number">12</span> <span class="comment"># Minimun font size in px</span></span><br><span class="line">  <span class="attr">max:</span> <span class="number">30</span> <span class="comment"># Maxium font size in px</span></span><br><span class="line">  <span class="attr">start:</span> <span class="string">"#ccc"</span> <span class="comment"># Start color (hex, rgba, hsla or color keywords)</span></span><br><span class="line">  <span class="attr">end:</span> <span class="string">"#111"</span> <span class="comment"># End color (hex, rgba, hsla or color keywords)</span></span><br><span class="line">  <span class="attr">amount:</span> <span class="number">200</span> <span class="comment"># Amount of tags, change it if you have more than 200 tags</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Calendar</span></span><br><span class="line"><span class="comment"># Share your recent schedule to others via calendar page.</span></span><br><span class="line"><span class="attr">calendar:</span></span><br><span class="line">  <span class="attr">calendar_id:</span> <span class="string">&lt;required&gt;</span> <span class="comment"># Your Google account E-Mail</span></span><br><span class="line">  <span class="attr">api_key:</span> <span class="string">&lt;required&gt;</span></span><br><span class="line">  <span class="attr">orderBy:</span> <span class="string">startTime</span></span><br><span class="line">  <span class="attr">offsetMax:</span> <span class="number">24</span> <span class="comment"># Time Range</span></span><br><span class="line">  <span class="attr">offsetMin:</span> <span class="number">4</span> <span class="comment"># Time Range</span></span><br><span class="line">  <span class="attr">showDeleted:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">singleEvents:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">maxResults:</span> <span class="number">250</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Misc Theme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the text alignment in posts / pages.</span></span><br><span class="line"><span class="attr">text_align:</span></span><br><span class="line">  <span class="comment"># Available values: start | end | left | right | center | justify | justify-all | match-parent</span></span><br><span class="line">  <span class="attr">desktop:</span> <span class="string">justify</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="string">justify</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Reduce padding / margin indents on devices with narrow width.</span></span><br><span class="line"><span class="attr">mobile_layout_economy:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Android Chrome header panel color ($brand-bg / $headband-bg =&gt; $black-deep).</span></span><br><span class="line"><span class="attr">android_chrome_color:</span> <span class="string">"#222"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom Logo (Do not support scheme Mist)</span></span><br><span class="line"><span class="attr">custom_logo:</span> <span class="comment">#/uploads/custom-logo.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Reading progress bar</span></span><br><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Available values: top | bottom</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">"#37c6c0"</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">3px</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bookmark Support</span></span><br><span class="line"><span class="attr">bookmark:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Customize the color of the bookmark.</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">"#222"</span></span><br><span class="line">  <span class="comment"># If auto, save the reading progress when closing the page or clicking the bookmark-icon.</span></span><br><span class="line">  <span class="comment"># If manual, only save it by clicking the bookmark-icon.</span></span><br><span class="line">  <span class="attr">save:</span> <span class="string">auto</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># `Follow me on GitHub` banner in the top-right corner.</span></span><br><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/yourname</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Font Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/theme-settings/#Fonts-Customization</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Find fonts on Google Fonts (https://www.google.com/fonts)</span></span><br><span class="line"><span class="comment"># All fonts set here will have the following styles:</span></span><br><span class="line"><span class="comment">#   light | light italic | normal | normal italic | bold | bold italic</span></span><br><span class="line"><span class="comment"># Be aware that setting too much fonts will cause site running slowly</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># To avoid space between header and sidebar in scheme Pisces / Gemini, Web Safe fonts are recommended for `global` (and `title`):</span></span><br><span class="line"><span class="comment"># Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic Sans MS | Trebuchet MS</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Uri of fonts host, e.g. https://fonts.googleapis.com (Default).</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font options:</span></span><br><span class="line">  <span class="comment"># `external: true` will load this font family from `host` above.</span></span><br><span class="line">  <span class="comment"># `family: Times New Roman`. Without any quotes.</span></span><br><span class="line">  <span class="comment"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Global font settings used for all elements inside &lt;body&gt;.</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Lato</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for site title (.site-title).</span></span><br><span class="line">  <span class="attr">title:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).</span></span><br><span class="line">  <span class="attr">headings:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for posts (.post-body).</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for &lt;code&gt; and code blocks.</span></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># SEO Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Baidu transformation on mobile devices.</span></span><br><span class="line"><span class="attr">disable_baidu_transformation:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If true, site-subtitle will be added to index page.</span></span><br><span class="line"><span class="comment"># Remember to set up your site-subtitle in Hexo `_config.yml` (e.g. subtitle: Subtitle)</span></span><br><span class="line"><span class="attr">index_with_subtitle:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically add external URL with Base64 encrypt &amp; decrypt.</span></span><br><span class="line"><span class="attr">exturl:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://www.google.com/webmasters</span></span><br><span class="line"><span class="attr">google_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bing Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://www.bing.com/webmaster</span></span><br><span class="line"><span class="attr">bing_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Yandex Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://webmaster.yandex.ru</span></span><br><span class="line"><span class="attr">yandex_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Baidu Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://ziyuan.baidu.com/site</span></span><br><span class="line"><span class="attr">baidu_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO.</span></span><br><span class="line"><span class="attr">baidu_push:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Third Party Plugins &amp; Services Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/third-party-services/</span></span><br><span class="line"><span class="comment"># More plugins: https://github.com/theme-next/awesome-next</span></span><br><span class="line"><span class="comment"># You may need to install dependencies or set CDN URLs in `vendors`</span></span><br><span class="line"><span class="comment"># There are two different CDN providers by default:</span></span><br><span class="line"><span class="comment">#   - jsDelivr (cdn.jsdelivr.net), works everywhere even in China</span></span><br><span class="line"><span class="comment">#   - CDNJS (cdnjs.cloudflare.com), provided by cloudflare</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Math Formulas Render Support</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># Default (true) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in Front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-renderer-pandoc (or hexo-renderer-kramed) required for full MathJax support.</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># See: https://mhchem.github.io/MathJax-mhchem/</span></span><br><span class="line">    <span class="attr">mhchem:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-renderer-markdown-it-plus (or hexo-renderer-markdown-it with markdown-it-katex plugin) required for full Katex support.</span></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class="line">    <span class="attr">copy_tex:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Easily enable fast Ajax navigation on your website.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pjax</span></span><br><span class="line"><span class="attr">pjax:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># FancyBox is a tool that offers a nice and elegant way to add zooming functionality for images.</span></span><br><span class="line"><span class="comment"># For more information: https://fancyapps.com/fancybox</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A JavaScript library for zooming images like Medium.</span></span><br><span class="line"><span class="comment"># Do not enable both `fancybox` and `mediumzoom`.</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/francoischalifour/medium-zoom</span></span><br><span class="line"><span class="attr">mediumzoom:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Vanilla JavaScript plugin for lazyloading images.</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/ApoorvSaxena/lozad.js</span></span><br><span class="line"><span class="attr">lazyload:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pangu Support</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/vinta/pangu.js</span></span><br><span class="line"><span class="attr">pangu:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Quicklink Support</span></span><br><span class="line"><span class="comment"># Do not enable both `pjax` and `quicklink`.</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/GoogleChromeLabs/quicklink</span></span><br><span class="line"><span class="comment"># Front-matter (unsupport home archive).</span></span><br><span class="line"><span class="attr">quicklink:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Home page and archive page can be controlled through home and archive options below.</span></span><br><span class="line">  <span class="comment"># This configuration item is independent of `enable`.</span></span><br><span class="line">  <span class="attr">home:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">archive:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Default (true) will initialize quicklink after the load event fires.</span></span><br><span class="line">  <span class="attr">delay:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom a time in milliseconds by which the browser must execute prefetching.</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">3000</span></span><br><span class="line">  <span class="comment"># Default (true) will enable fetch() or falls back to XHR.</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># For more flexibility you can add some patterns (RegExp, Function, or Array) to ignores.</span></span><br><span class="line">  <span class="comment"># See: https://github.com/GoogleChromeLabs/quicklink#custom-ignore-patterns</span></span><br><span class="line">  <span class="attr">ignores:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Comments Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/third-party-services/comments</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Multiple Comment System Support</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Available values: tabs | buttons</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">tabs</span></span><br><span class="line">  <span class="comment"># Choose a comment system to be displayed by default.</span></span><br><span class="line">  <span class="comment"># Available values: changyan | disqus | disqusjs | gitalk | livere | valine</span></span><br><span class="line">  <span class="attr">active:</span></span><br><span class="line">  <span class="comment"># Setting `true` means remembering the comment system selected by the visitor.</span></span><br><span class="line">  <span class="attr">storage:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Lazyload all comment systems.</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Modify texts or order for any navs, here are some examples.</span></span><br><span class="line">  <span class="attr">nav:</span></span><br><span class="line">    <span class="comment">#disqus:</span></span><br><span class="line">    <span class="comment">#  text: Load Disqus</span></span><br><span class="line">    <span class="comment">#  order: -1</span></span><br><span class="line">    <span class="comment">#gitalk:</span></span><br><span class="line">    <span class="comment">#  order: -2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disqus</span></span><br><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">shortname:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DisqusJS</span></span><br><span class="line"><span class="comment"># Alternative Disqus - Render comment component using Disqus API.</span></span><br><span class="line"><span class="comment"># Demo: https://suka.js.org/DisqusJS/</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/SukkaW/DisqusJS</span></span><br><span class="line"><span class="attr">disqusjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># API Endpoint of Disqus API (https://disqus.com/api/).</span></span><br><span class="line">  <span class="comment"># Leave api empty if you are able to connect to Disqus API. Otherwise you need a reverse proxy for it.</span></span><br><span class="line">  <span class="comment"># For example:</span></span><br><span class="line">  <span class="comment"># api: https://disqus.skk.moe/disqus/</span></span><br><span class="line">  <span class="attr">api:</span></span><br><span class="line">  <span class="attr">apikey:</span> <span class="comment"># Register new application from https://disqus.com/api/applications/</span></span><br><span class="line">  <span class="attr">shortname:</span> <span class="comment"># See: https://disqus.com/admin/settings/general/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Changyan</span></span><br><span class="line"><span class="attr">changyan:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">appid:</span></span><br><span class="line">  <span class="attr">appkey:</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># LiveRe comments system</span></span><br><span class="line"><span class="comment"># You can get your uid from https://livere.com/insight/myCode (General web site)</span></span><br><span class="line"><span class="attr">livere_uid:</span> <span class="comment"># &lt;your_uid&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Gitalk</span></span><br><span class="line"><span class="comment"># For more information: https://gitalk.github.io, https://github.com/gitalk/gitalk</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">github_id:</span> <span class="comment"># GitHub repo owner</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="comment"># Repository name to store issues</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="comment"># GitHub Application Client ID</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="comment"># GitHub Application Client Secret</span></span><br><span class="line">  <span class="attr">admin_user:</span> <span class="comment"># GitHub repo owner and collaborators, only these guys can initialize gitHub issues</span></span><br><span class="line">  <span class="attr">distraction_free_mode:</span> <span class="literal">true</span> <span class="comment"># Facebook-like distraction free mode</span></span><br><span class="line">  <span class="comment"># Gitalk's display language depends on user's browser or system environment</span></span><br><span class="line">  <span class="comment"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class="line">  <span class="comment"># Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span></span><br><span class="line">  <span class="attr">language:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Post Widgets &amp; Content Sharing Services</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/third-party-services/post-widgets</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Star rating support to each article.</span></span><br><span class="line"><span class="comment"># To get your ID visit https://widgetpack.com</span></span><br><span class="line"><span class="attr">rating:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">id:</span>     <span class="comment"># &lt;app_id&gt;</span></span><br><span class="line">  <span class="attr">color:</span>  <span class="string">fc6423</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># AddThis Share. See: https://www.addthis.com</span></span><br><span class="line"><span class="comment"># Go to https://www.addthis.com/dashboard to customize your tools.</span></span><br><span class="line"><span class="attr">add_this_id:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Statistics and Analytics</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/third-party-services/statistics-and-analytics</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Analytics</span></span><br><span class="line"><span class="attr">google_analytics:</span></span><br><span class="line">  <span class="attr">tracking_id:</span> <span class="comment"># &lt;app_id&gt;</span></span><br><span class="line">  <span class="comment"># By default, NexT will load an external gtag.js script on your site.</span></span><br><span class="line">  <span class="comment"># If you only need the pageview feature, set the following option to true to get a better performance.</span></span><br><span class="line">  <span class="attr">only_pageview:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Baidu Analytics</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="comment"># &lt;app_id&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Growingio Analytics</span></span><br><span class="line"><span class="attr">growingio_analytics:</span> <span class="comment"># &lt;project_id&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CNZZ count</span></span><br><span class="line"><span class="attr">cnzz_siteid:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show number of visitors of each article.</span></span><br><span class="line"><span class="comment"># You can visit https://leancloud.cn to get AppID and AppKey.</span></span><br><span class="line"><span class="comment"># AppID and AppKey are recommended to be the same as valine's for counter compatibility.</span></span><br><span class="line"><span class="comment"># Do not enable both `valine.visitor` and `leancloud_visitors`.</span></span><br><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="comment"># &lt;your app id&gt;</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="comment"># &lt;your app key&gt;</span></span><br><span class="line">  <span class="comment"># Required for apps from CN region</span></span><br><span class="line">  <span class="attr">server_url:</span> <span class="comment"># &lt;your server url&gt;</span></span><br><span class="line">  <span class="comment"># Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security</span></span><br><span class="line">  <span class="comment"># If you don't care about security in leancloud counter and just want to use it directly</span></span><br><span class="line">  <span class="comment"># (without hexo-leancloud-counter-security plugin), set `security` to `false`.</span></span><br><span class="line">  <span class="attr">security:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Another tool to show number of visitors to each article.</span></span><br><span class="line"><span class="comment"># Visit https://console.firebase.google.com/u/0/ to get apiKey and projectId.</span></span><br><span class="line"><span class="comment"># Visit https://firebase.google.com/docs/firestore/ to get more information about firestore.</span></span><br><span class="line"><span class="attr">firestore:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">collection:</span> <span class="string">articles</span> <span class="comment"># Required, a string collection name to access firestore database</span></span><br><span class="line">  <span class="attr">apiKey:</span> <span class="comment"># Required</span></span><br><span class="line">  <span class="attr">projectId:</span> <span class="comment"># Required</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Search Services</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/third-party-services/search-services</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Algolia Search</span></span><br><span class="line"><span class="comment"># For more information: https://www.algolia.com</span></span><br><span class="line"><span class="attr">algolia_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hits:</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line">    <span class="attr">hits_empty:</span> <span class="string">"We didn't find any results for the search: ${query}"</span></span><br><span class="line">    <span class="attr">hits_stats:</span> <span class="string">"${hits} results found in ${time} ms"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Swiftype Search API Key</span></span><br><span class="line"><span class="attr">swiftype_key:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Chat Services</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/third-party-services/chat-services</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Chatra Support</span></span><br><span class="line"><span class="comment"># See: https://chatra.io</span></span><br><span class="line"><span class="comment"># Dashboard: https://app.chatra.io/settings/general</span></span><br><span class="line"><span class="attr">chatra:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">async:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">id:</span> <span class="comment"># Visit Dashboard to get your ChatraID</span></span><br><span class="line">  <span class="comment">#embed: # Unfinished experimental feature for developers. See: https://chatra.io/help/api/#injectto</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tidio Support</span></span><br><span class="line"><span class="comment"># See: https://www.tidiochat.com</span></span><br><span class="line"><span class="comment"># Dashboard: https://www.tidiochat.com/panel/dashboard</span></span><br><span class="line"><span class="attr">tidio:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">key:</span> <span class="comment"># Public Key, get it from dashboard. See: https://www.tidiochat.com/panel/settings/developer</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Tags Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/tag-plugins/</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note tag (bs-callout)</span></span><br><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tabs tag</span></span><br><span class="line"><span class="attr">tabs:</span></span><br><span class="line">  <span class="attr">transition:</span></span><br><span class="line">    <span class="attr">tabs:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">labels:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PDF tag</span></span><br><span class="line"><span class="comment"># NexT will try to load pdf files natively, if failed, pdf.js will be used.</span></span><br><span class="line"><span class="comment"># So, you have to install the dependency of pdf.js if you want to use pdf tag and make it available to all browsers.</span></span><br><span class="line"><span class="comment"># See: https://github.com/theme-next/theme-next-pdf</span></span><br><span class="line"><span class="attr">pdf:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Default height</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">500px</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mermaid tag</span></span><br><span class="line"><span class="attr">mermaid:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Available themes: default | dark | forest | neutral</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">forest</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Animation Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use velocity to animate everything.</span></span><br><span class="line"><span class="comment"># For more information: http://velocityjs.org</span></span><br><span class="line"><span class="attr">motion:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">async:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">transition:</span></span><br><span class="line">    <span class="comment"># Transition variants:</span></span><br><span class="line">    <span class="comment"># fadeIn | flipXIn | flipYIn | flipBounceXIn | flipBounceYIn</span></span><br><span class="line">    <span class="comment"># swoopIn | whirlIn | shrinkIn | expandIn</span></span><br><span class="line">    <span class="comment"># bounceIn | bounceUpIn | bounceDownIn | bounceLeftIn | bounceRightIn</span></span><br><span class="line">    <span class="comment"># slideUpIn | slideDownIn | slideLeftIn | slideRightIn</span></span><br><span class="line">    <span class="comment"># slideUpBigIn | slideDownBigIn | slideLeftBigIn | slideRightBigIn</span></span><br><span class="line">    <span class="comment"># perspectiveUpIn | perspectiveDownIn | perspectiveLeftIn | perspectiveRightIn</span></span><br><span class="line">    <span class="attr">post_block:</span> <span class="string">fadeIn</span></span><br><span class="line">    <span class="attr">post_header:</span> <span class="string">slideDownIn</span></span><br><span class="line">    <span class="attr">post_body:</span> <span class="string">slideDownIn</span></span><br><span class="line">    <span class="attr">coll_header:</span> <span class="string">slideLeftIn</span></span><br><span class="line">    <span class="comment"># Only for Pisces | Gemini.</span></span><br><span class="line">    <span class="attr">sidebar:</span> <span class="string">slideUpIn</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pace</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/HubSpot/pace</span></span><br><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Themes list:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">minimal</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># JavaScript 3D library.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-three</span></span><br><span class="line"><span class="attr">three:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">three_waves:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">canvas_lines:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">canvas_sphere:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Canvas-ribbon</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-canvas-ribbon</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/zproo/canvas-ribbon</span></span><br><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">size:</span> <span class="number">300</span> <span class="comment"># The width of the ribbon</span></span><br><span class="line">  <span class="attr">alpha:</span> <span class="number">0.6</span> <span class="comment"># The transparency of the ribbon</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span> <span class="comment"># The display level of the ribbon</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#! ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#! DO NOT EDIT THE FOLLOWING SETTINGS</span></span><br><span class="line"><span class="comment">#! UNLESS YOU KNOW WHAT YOU ARE DOING</span></span><br><span class="line"><span class="comment">#! See: https://theme-next.org/docs/advanced-settings</span></span><br><span class="line"><span class="comment">#! ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Script Vendors. Set a CDN address for the vendor you want to customize.</span></span><br><span class="line"><span class="comment"># Be aware that you would better use the same version as internal ones to avoid potential problems.</span></span><br><span class="line"><span class="comment"># Remember to use the https protocol of CDN files when you enable https on your site.</span></span><br><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="comment"># Internal path prefix.</span></span><br><span class="line">  <span class="attr">_internal:</span> <span class="string">lib</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 3.1.0</span></span><br><span class="line">  <span class="comment"># anime: //cdn.jsdelivr.net/npm/animejs@3.1.0/lib/anime.min.js</span></span><br><span class="line">  <span class="attr">anime:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 5.13.0</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5/css/all.min.css</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css</span></span><br><span class="line">  <span class="attr">fontawesome:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># MathJax</span></span><br><span class="line">  <span class="comment"># mathjax: //cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># KaTeX</span></span><br><span class="line">  <span class="comment"># katex: //cdn.jsdelivr.net/npm/katex@0/dist/katex.min.css</span></span><br><span class="line">  <span class="comment"># katex: //cdnjs.cloudflare.com/ajax/libs/KaTeX/0.11.1/katex.min.css</span></span><br><span class="line">  <span class="comment"># copy_tex_js: //cdn.jsdelivr.net/npm/katex@0/dist/contrib/copy-tex.min.js</span></span><br><span class="line">  <span class="comment"># copy_tex_css: //cdn.jsdelivr.net/npm/katex@0/dist/contrib/copy-tex.min.css</span></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">  <span class="attr">copy_tex_js:</span></span><br><span class="line">  <span class="attr">copy_tex_css:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 0.2.8</span></span><br><span class="line">  <span class="comment"># pjax: //cdn.jsdelivr.net/gh/theme-next/theme-next-pjax@0/pjax.min.js</span></span><br><span class="line">  <span class="attr">pjax:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># FancyBox</span></span><br><span class="line">  <span class="comment"># jquery: //cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js</span></span><br><span class="line">  <span class="comment"># fancybox: //cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.js</span></span><br><span class="line">  <span class="comment"># fancybox_css: //cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.css</span></span><br><span class="line">  <span class="attr">jquery:</span></span><br><span class="line">  <span class="attr">fancybox:</span></span><br><span class="line">  <span class="attr">fancybox_css:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Medium-zoom</span></span><br><span class="line">  <span class="comment"># mediumzoom: //cdn.jsdelivr.net/npm/medium-zoom@1/dist/medium-zoom.min.js</span></span><br><span class="line">  <span class="attr">mediumzoom:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Lazyload</span></span><br><span class="line">  <span class="comment"># lazyload: //cdn.jsdelivr.net/npm/lozad@1/dist/lozad.min.js</span></span><br><span class="line">  <span class="comment"># lazyload: //cdnjs.cloudflare.com/ajax/libs/lozad.js/1.14.0/lozad.min.js</span></span><br><span class="line">  <span class="attr">lazyload:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Pangu</span></span><br><span class="line">  <span class="comment"># pangu: //cdn.jsdelivr.net/npm/pangu@4/dist/browser/pangu.min.js</span></span><br><span class="line">  <span class="comment"># pangu: //cdnjs.cloudflare.com/ajax/libs/pangu/4.0.7/pangu.min.js</span></span><br><span class="line">  <span class="attr">pangu:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Quicklink</span></span><br><span class="line">  <span class="comment"># quicklink: //cdn.jsdelivr.net/npm/quicklink@1/dist/quicklink.umd.js</span></span><br><span class="line">  <span class="attr">quicklink:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># DisqusJS</span></span><br><span class="line">  <span class="comment"># disqusjs_js: //cdn.jsdelivr.net/npm/disqusjs@1/dist/disqus.js</span></span><br><span class="line">  <span class="comment"># disqusjs_css: //cdn.jsdelivr.net/npm/disqusjs@1/dist/disqusjs.css</span></span><br><span class="line">  <span class="attr">disqusjs_js:</span></span><br><span class="line">  <span class="attr">disqusjs_css:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Valine</span></span><br><span class="line">  <span class="comment"># valine: //cdn.jsdelivr.net/npm/valine@1/dist/Valine.min.js</span></span><br><span class="line">  <span class="comment"># valine: //cdnjs.cloudflare.com/ajax/libs/valine/1.3.10/Valine.min.js</span></span><br><span class="line">  <span class="attr">valine:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Gitalk</span></span><br><span class="line">  <span class="comment"># gitalk_js: //cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js</span></span><br><span class="line">  <span class="comment"># gitalk_css: //cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.css</span></span><br><span class="line">  <span class="attr">gitalk_js:</span></span><br><span class="line">  <span class="attr">gitalk_css:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Algolia Search</span></span><br><span class="line">  <span class="comment"># algolia_search: //cdn.jsdelivr.net/npm/algoliasearch@4/dist/algoliasearch-lite.umd.js</span></span><br><span class="line">  <span class="comment"># instant_search: //cdn.jsdelivr.net/npm/instantsearch.js@4/dist/instantsearch.production.min.js</span></span><br><span class="line">  <span class="attr">algolia_search:</span></span><br><span class="line">  <span class="attr">instant_search:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Mermaid</span></span><br><span class="line">  <span class="comment"># mermaid: //cdn.jsdelivr.net/npm/mermaid@8/dist/mermaid.min.js</span></span><br><span class="line">  <span class="comment"># mermaid: //cdnjs.cloudflare.com/ajax/libs/mermaid/8.4.8/mermaid.min.js</span></span><br><span class="line">  <span class="attr">mermaid:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 1.2.1</span></span><br><span class="line">  <span class="comment"># velocity: //cdn.jsdelivr.net/npm/velocity-animate@1/velocity.min.js</span></span><br><span class="line">  <span class="comment"># velocity: //cdnjs.cloudflare.com/ajax/libs/velocity/1.2.1/velocity.min.js</span></span><br><span class="line">  <span class="comment"># velocity_ui: //cdn.jsdelivr.net/npm/velocity-animate@1/velocity.ui.min.js</span></span><br><span class="line">  <span class="comment"># velocity_ui: //cdnjs.cloudflare.com/ajax/libs/velocity/1.2.1/velocity.ui.min.js</span></span><br><span class="line">  <span class="attr">velocity:</span></span><br><span class="line">  <span class="attr">velocity_ui:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 1.0.2</span></span><br><span class="line">  <span class="attr">pace:</span> <span class="string">//cdn.jsdelivr.net/npm/pace-js@1/pace.min.js</span></span><br><span class="line">  <span class="comment"># pace: //cdnjs.cloudflare.com/ajax/libs/pace/1.0.2/pace.min.js</span></span><br><span class="line">  <span class="attr">pace_css:</span> <span class="string">//cdn.jsdelivr.net/npm/pace-js@1/themes/blue/pace-theme-minimal.css</span></span><br><span class="line">  <span class="comment"># pace_css: //cdnjs.cloudflare.com/ajax/libs/pace/1.0.2/themes/blue/pace-theme-minimal.min.css</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 1.0.0</span></span><br><span class="line">  <span class="comment"># three: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1/three.min.js</span></span><br><span class="line">  <span class="comment"># three_waves: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1/three-waves.min.js</span></span><br><span class="line">  <span class="comment"># canvas_lines: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1/canvas_lines.min.js</span></span><br><span class="line">  <span class="comment"># canvas_sphere: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1/canvas_sphere.min.js</span></span><br><span class="line">  <span class="attr">three:</span></span><br><span class="line">  <span class="attr">three_waves:</span></span><br><span class="line">  <span class="attr">canvas_lines:</span></span><br><span class="line">  <span class="attr">canvas_sphere:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 1.0.0</span></span><br><span class="line">  <span class="comment"># canvas_ribbon: //cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-ribbon@1/canvas-ribbon.js</span></span><br><span class="line">  <span class="attr">canvas_ribbon:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Assets</span></span><br><span class="line"><span class="attr">css:</span> <span class="string">css</span></span><br><span class="line"><span class="attr">js:</span> <span class="string">js</span></span><br><span class="line"><span class="attr">images:</span> <span class="string">images</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#auto_excerpt:</span></span><br><span class="line">  <span class="comment">#enable: true</span></span><br><span class="line">  <span class="comment">#length: 150</span></span><br><span class="line">  <span class="string">ss</span></span><br><span class="line"><span class="comment"># Emoji</span></span><br><span class="line"><span class="attr">githubEmojis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">className:</span> <span class="string">github-emoji</span></span><br><span class="line">  <span class="attr">inject:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">styles:</span></span><br><span class="line">  <span class="attr">customEmojis:</span></span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>前端自动化构建工具 - Gulp</title>
    <url>/posts/JavaScript/cbb45792.html</url>
    <content><![CDATA[<h4 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h4><p>Grunt、Gulp、Webpack，更多构建工具参考对比详见 <a href="https://segmentfault.com/a/1190000017183743">前端构建：3类13种热门工具的选型参考</a> 。</p>
<p>也可以参考下这篇文章： <a href="https://www.zhihu.com/question/45536395">2020年，gulp 有哪些功能是 webpack 不能替代的？</a></p>
<a id="more"></a>

<h4 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h4><p>项目线上后，静态资源 (HTML、CSS、JavaScript、Images) 因需求变动或解决问题，需要重新覆盖线上文件，但覆盖 (因：服务端会对静态资源做缓存处理，诸如：css、js、images、fonts、txt 之类) 后，之前已经加载过这个页面的浏览器不能马上响应新的变更。主要是因为本地浏览器根据服务端的响应规则给缓存了，而要解决这个问题也很简单，就是在引用静态资源的 <code>URL</code> 地址后面追加个参数，这个参数可以是固定的、也可以是变动的，加了这个参数后浏览器就不会使用本地缓存来渲染页面了。</p>
<p>原始资源引用</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://www.abc.com/amucsite/stat/WebClick.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>给引用资源增加个版本号</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http//www.abc.com/amucsite/stat/WebClick.js?v=1.0.0"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>



<p>固定的参数每次改动引用的静态资源都要保证后缀与上次设置不一致，要不然没法保证哪些用户浏览器已经加载过页面了，使用的是非本地缓存。而变动的虽然省去的每次修改代码变更 <code>URL</code> 参数的麻烦，同样也失去了用户端浏览器本地缓存的功能，每次都会向服务器发起请求。</p>
<h4 id="Gulp-能做什么？"><a href="#Gulp-能做什么？" class="headerlink" title="Gulp 能做什么？"></a>Gulp 能做什么？</h4><p>首先，它能解决上面的问题，那怎么解决的呢？这需要个 <code>Gulp </code>的插件 <code>gulp-rev-all</code>，它会给静态资源文件名添加个 <code>hash</code> 值，这个 <code>hash</code> 值是基于文件内容的，也就是说假设文件内容更改了，那就会生成一个新的 <code>hash</code> 值。这样也就解决了浏览器缓存问题。</p>
<p>那它还能做什么？</p>
<ul>
<li><p>性能优化</p>
<p>我们都知道浏览器请求的文件越多越耗时，请求的文件越大越耗时。为了代码更清晰，结构更合理，我们就会有很多 JS 文件，无疑又拖慢了网页的速度。为了解决这个问题，因此我们需要做两件事</p>
<ul>
<li><p>文件合并</p>
<p>浏览器需要下载多个JS文件，而浏览器是有并发限制，也就是同时并发只能下载几个文件，假如浏览器并发数是5，你有20个JS文件，而每5个需要2S, 那么你光下载JS文件都需要8S，那么网页的性能可想而知，所以我们需要合并多个文件以减少文件的数量。</p>
</li>
<li><p>文件压缩</p>
<p>我们知道文件越大，下载越慢，而针对JavaScript和CSS, 里面的空格，换行这些都是为了让我们读代码时更容易阅读，但是对机器来说，这些对它没有影响，所以为了减少文件大小，一般的情况我们都会用工具去掉空格和换行，有时候我们还会用比较短的变量名(记住这个要让工具最后压缩时做，而源代码一定要保证命名可读性) 来减少文件大小。</p>
</li>
</ul>
</li>
<li><p>效率提升</p>
<ul>
<li><p>Vender CSS 前缀</p>
<p>在 CSS3 使用越来越多的时候，我们都知道一些CSS的特性，不同的浏览器 CSS 有不同的前缀，如果我们手工添加将会很繁琐，而如果使用构建工具，很多构建工具可以自动添加 CSS 的 Vendor 前缀</p>
<ul>
<li><p><a href="https://www.webhek.com/post/vendor-prefixes.html">为什么需要浏览器引擎前缀</a></p>
</li>
<li><p><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Vendor_Prefix">浏览器引擎前缀 | MDN</a></p>
</li>
</ul>
</li>
<li><p>单元测试</p>
<p>单元测试是质量保证的一个很重要的手段，所以在上传代码之前，使用构建工具自动跑一遍我们的单元测试是非常重要的。</p>
</li>
<li><p>代码分析</p>
<p>写的JavaScript很多时候会有一些潜在的bug, 比如忘了添加分号，某个变量没有等等，使用一些JavaScript的代码分析工具，可以很好的帮我们检查一些常见的问题。</p>
</li>
</ul>
</li>
</ul>
<p>根据文件类型可以做哪些处理</p>
<ul>
<li>HTML<ul>
<li><a href="https://www.npmjs.com/package/gulp-htmlmin">gulp-htmlmin</a>  HTML 代码压缩处理。</li>
</ul>
</li>
<li>Images<ul>
<li>图片压缩处理</li>
<li>雪碧图<ul>
<li><a href="https://www.npmjs.com/package/gulp.spritesmith">gulp.spritesmith</a></li>
</ul>
</li>
</ul>
</li>
<li>JavaScript<ul>
<li>代码压缩处理</li>
<li>ES6 新语法转换(To ES5)</li>
<li>Eslint 检测</li>
<li>单元测试</li>
</ul>
</li>
<li>CSS<ul>
<li>代码压缩处理</li>
<li>Vender Css prefixes</li>
<li>Less、Sass 转换</li>
</ul>
</li>
</ul>
<h4 id="安装、入门操作"><a href="#安装、入门操作" class="headerlink" title="安装、入门操作"></a>安装、入门操作</h4><ol>
<li><p>检查 <code>node</code>、<code>npm</code> 和 <code>npx</code> 是否正确安装，详见： <a href="https://nodejs.org/en/">nodejs 官网</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ node --version</span><br><span class="line">$ npm --version</span><br><span class="line">$ npx --version</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>安装 <code>gulp</code> 命令行工具</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install --global gulp</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>初始化项目</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ mkdir gulp-demo</span><br><span class="line">$ <span class="built_in">cd</span> gulp-demo</span><br><span class="line">$ npm init -y</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>安装 <code>gulp</code> 作为开发时依赖项</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install --save-dev gulp</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>创建 <code>gulpfile.js</code> 文件</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">defaultTask</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">  <span class="comment">// place code for your default task here</span></span><br><span class="line">  cb();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.default = defaultTask</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>运行</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ gulp</span><br></pre></td></tr></tbody></table></figure>

<p>如需运行多个任务（task），可以执行 <code>gulp &lt;task&gt; &lt;othertask&gt;</code>。</p>
</li>
<li><p>输出结果<br>默认任务（task）将执行，因为任务为空，因此没有实际动作。</p>
<p><img data-src="https://gulpjs.com/img/docs-gulp-command.png" alt="Output: Starting default &amp; Finished default"></p>
</li>
</ol>
<p>当然命令行工具也可以本地安装：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm intall --save-dev gulp-cli</span><br></pre></td></tr></tbody></table></figure>

<p>运行方式则变成了：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npx gulp</span><br></pre></td></tr></tbody></table></figure>



<h4 id="JavaScript-和-Gulpfile"><a href="#JavaScript-和-Gulpfile" class="headerlink" title="JavaScript 和 Gulpfile"></a>JavaScript 和 Gulpfile</h4><p>Gulp 允许使用现有 JavaScript 知识来书写 gulpfile 文件，或者利用所掌握的 gulpfile 经验来书写普通的 JavaScript 代码。虽然gulp 提供了一些实用工具来简化文件系统和命令行的操作，但是所编写的其他代码都是纯 JavaScript 代码。</p>
<h5 id="Gulpfile-详解"><a href="#Gulpfile-详解" class="headerlink" title="Gulpfile 详解"></a>Gulpfile 详解</h5><p>gulpfile 是项目目录下名为 <code>gulpfile.js</code> （或者首字母大写 <code>Gulpfile.js</code>，就像 Makefile 一样命名）的文件，在运行 <code>gulp</code> 命令时会被自动加载。在这个文件中，你经常会看到类似 <code>src()</code>、<code>dest()</code>、<code>series()</code> 或 <code>parallel()</code> 函数之类的 gulp API，除此之外，纯 JavaScript 代码或 Node 模块也会被使用。任何导出（export）的函数都将注册到 gulp 的任务（task）系统中。</p>
<h4 id="Demo-演示"><a href="#Demo-演示" class="headerlink" title="Demo 演示"></a>Demo 演示</h4><h5 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h5><figure class="highlight tex"><table><tbody><tr><td class="code"><pre><span class="line">src/</span><br><span class="line">├── css</span><br><span class="line">│   └── index.css</span><br><span class="line">├── fonts</span><br><span class="line">│   ├── glyphicons-halflings-regular.eot</span><br><span class="line">│   ├── glyphicons-halflings-regular.svg</span><br><span class="line">│   ├── glyphicons-halflings-regular.ttf</span><br><span class="line">│   └── glyphicons-halflings-regular.woff</span><br><span class="line">├── images</span><br><span class="line">│   └── example.jpg</span><br><span class="line">├── js</span><br><span class="line">│   ├── calculator</span><br><span class="line">│   │   ├── addition.js</span><br><span class="line">│   │   ├── division.js</span><br><span class="line">│   │   ├── multiply.js</span><br><span class="line">│   │   └── subtraction.js</span><br><span class="line">│   └── index.js</span><br><span class="line">├── lib</span><br><span class="line">│   └── jquery.min.js</span><br><span class="line">└── index.html</span><br></pre></td></tr></tbody></table></figure>



<h5 id="示例项目代码"><a href="#示例项目代码" class="headerlink" title="示例项目代码"></a>示例项目代码</h5><p>index.html</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div {</span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span><span class="selector-pseudo">:14px</span>;</span></span><br><span class="line">        }</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/index.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- container --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"  "</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">data-url</span>=<span class="string">" "</span>   <span class="attr">data-name</span>=<span class="string">" "</span> <span class="attr">style</span>=<span class="string">"font-size:20px; margin:0 auto; text-align:center; margin-top:20%"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/example.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        Gulp 演示 7<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>Hello World!</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/index.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/calculator/addition.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 计算器: 加</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(addition(<span class="number">1</span>, <span class="number">1</span>))</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>



<h5 id="HTML-处理"><a href="#HTML-处理" class="headerlink" title="HTML 处理"></a>HTML 处理</h5><p>来，上插件:  <a href="https://www.npmjs.com/package/gulp-htmlmin">gulp-htmlmin</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install --save-dev gulp-htmlmin</span><br></pre></td></tr></tbody></table></figure>

<p>vim gulpfile.js</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">html</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// more options, see @link https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>, <span class="comment">// 压缩HTML</span></span><br><span class="line">        collapseBooleanAttributes: <span class="literal">true</span>,<span class="comment">//省略布尔属性的值 &lt;input type="checkbox" checked="checked"&gt; =&gt; &lt;input type="checkbox" checked&gt;</span></span><br><span class="line">        removeComments: <span class="literal">true</span>, <span class="comment">// 删除HTML注释</span></span><br><span class="line">        removeEmptyAttributes: <span class="literal">true</span>, <span class="comment">// 删除所有带有仅空格值的属性 &lt;div id=""&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        removeScriptTypeAttributes: <span class="literal">true</span>, <span class="comment">// 将 type="text/javascript" 从script标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        removeStyleLinkTypeAttributes: <span class="literal">true</span>, <span class="comment">// type="text/css" 从style和link标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        minifyJS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的JS</span></span><br><span class="line">        minifyCSS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的CSS</span></span><br><span class="line">        removeEmptyElements: <span class="literal">true</span>, <span class="comment">// 删除所有内容为空的元素 &lt;div&gt;&lt;p&gt;  &lt;/p&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        keepClosingSlash: <span class="literal">true</span>, <span class="comment">// 在单例元素上保留斜线, 即 &lt;br /&gt; =&gt; &lt;br/&gt;</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/*.html'</span>, { <span class="attr">since</span>: gulp.lastRun(html) })</span><br><span class="line">        .pipe(htmlmin(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">    <span class="keyword">default</span>: html</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>执行构建命令</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gulp</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者通过 npx 命令执行本地 gulp-cli</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npx gulp</span></span><br></pre></td></tr></tbody></table></figure>

<p>index.html 构建后内容</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"><span class="selector-tag">body</span>{<span class="attribute">font-size</span>:<span class="number">14px</span>}<span class="selector-tag">img</span>{<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">width</span>:<span class="number">100px</span>}</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-url</span>=<span class="string">" "</span> <span class="attr">data-name</span>=<span class="string">" "</span> <span class="attr">style</span>=<span class="string">"font-size:20px;margin:0 auto;text-align:center;margin-top:20%"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/example.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>Gulp 演示<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span>&gt;</span>Hello World!<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/calculator/addition.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">console</span>.log(addition(<span class="number">1</span>,<span class="number">1</span>))</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>



<p>开发完，总不能每每都要手动执行构建吧？这个时候 <a href="https://www.gulpjs.com.cn/docs/api/watch/"><code>gulp.watch</code></a> 就派上用场了。</p>
<p>vim gulpfile.js</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">html</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// more options, see @link https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>, <span class="comment">// 压缩HTML</span></span><br><span class="line">        collapseBooleanAttributes: <span class="literal">true</span>,<span class="comment">//省略布尔属性的值 &lt;input type="checkbox" checked="checked"&gt; =&gt; &lt;input type="checkbox" checked&gt;</span></span><br><span class="line">        removeComments: <span class="literal">true</span>, <span class="comment">// 删除HTML注释</span></span><br><span class="line">        removeEmptyAttributes: <span class="literal">true</span>, <span class="comment">// 删除所有带有仅空格值的属性 &lt;div id=""&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        removeScriptTypeAttributes: <span class="literal">true</span>, <span class="comment">// 将 type="text/javascript" 从script标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        removeStyleLinkTypeAttributes: <span class="literal">true</span>, <span class="comment">// type="text/css" 从style和link标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        minifyJS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的JS</span></span><br><span class="line">        minifyCSS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的CSS</span></span><br><span class="line">        removeEmptyElements: <span class="literal">true</span>, <span class="comment">// 删除所有内容为空的元素 &lt;div&gt;&lt;p&gt;  &lt;/p&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        keepClosingSlash: <span class="literal">true</span>, <span class="comment">// 在单例元素上保留斜线, 即 &lt;br /&gt; =&gt; &lt;br/&gt;</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/*.html'</span>, { <span class="attr">since</span>: gulp.lastRun(html) })</span><br><span class="line">        .pipe(htmlmin(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// watch task</span></span><br><span class="line">watch = <span class="function">(<span class="params">cb</span>) =&gt;</span> {</span><br><span class="line">    gulp.watch(<span class="string">'./src/**/*.html'</span> , {</span><br><span class="line">        events: <span class="string">'all'</span>,</span><br><span class="line">        ignoreInitial: <span class="literal">false</span></span><br><span class="line">    }, gulp.series(</span><br><span class="line">        html</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">    <span class="keyword">default</span>: watch</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>监听文件事件自动构建的问题解决了，但没修改完代码都需要刷新下浏览器，好烦啊。。。</p>
<p>来，上插件:  <a href="https://www.npmjs.com/package/browser-sync">browser-sync</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install --save-dev browser-sync</span><br></pre></td></tr></tbody></table></figure>

<p>vim gulpfile.js</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>),</span><br><span class="line">    htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// html task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">html</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// more options, see @link https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>, <span class="comment">// 压缩HTML</span></span><br><span class="line">        collapseBooleanAttributes: <span class="literal">true</span>,<span class="comment">//省略布尔属性的值 &lt;input type="checkbox" checked="checked"&gt; =&gt; &lt;input type="checkbox" checked&gt;</span></span><br><span class="line">        removeComments: <span class="literal">true</span>, <span class="comment">// 删除HTML注释</span></span><br><span class="line">        removeEmptyAttributes: <span class="literal">true</span>, <span class="comment">// 删除所有带有仅空格值的属性 &lt;div id=""&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        removeScriptTypeAttributes: <span class="literal">true</span>, <span class="comment">// 将 type="text/javascript" 从script标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        removeStyleLinkTypeAttributes: <span class="literal">true</span>, <span class="comment">// type="text/css" 从style和link标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        minifyJS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的JS</span></span><br><span class="line">        minifyCSS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的CSS</span></span><br><span class="line">        removeEmptyElements: <span class="literal">true</span>, <span class="comment">// 删除所有内容为空的元素 &lt;div&gt;&lt;p&gt;  &lt;/p&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        keepClosingSlash: <span class="literal">true</span>, <span class="comment">// 在单例元素上保留斜线, 即 &lt;br /&gt; =&gt; &lt;br/&gt;</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/*.html'</span>, { <span class="attr">since</span>: gulp.lastRun(html) })</span><br><span class="line">        .pipe(htmlmin(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// watch task</span></span><br><span class="line">watch = <span class="function">(<span class="params">cb</span>) =&gt;</span> {</span><br><span class="line">    gulp.watch(<span class="string">'./src/**/*.html'</span> , {</span><br><span class="line">        events: <span class="string">'all'</span>,</span><br><span class="line">        ignoreInitial: <span class="literal">false</span></span><br><span class="line">    }, gulp.series(</span><br><span class="line">        html,</span><br><span class="line">      	browserReload</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser server task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserServer</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync({</span><br><span class="line">        server: {</span><br><span class="line">            baseDir: <span class="string">"dist"</span></span><br><span class="line">        }</span><br><span class="line">    })</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser reload task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserReload</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync.reload()</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">    <span class="keyword">default</span>: gulp.series(watch, browserServer)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>改下 html 代码，瞅下浏览器，完美…</p>
<h5 id="JavaScript-处理"><a href="#JavaScript-处理" class="headerlink" title="JavaScript 处理"></a>JavaScript 处理</h5><p>我们可以使用 <a href="https://www.npmjs.com/package/gulp-uglify"><code>gulp-uglify</code></a> 插件来对 <code>JavaScript</code> 文件进行压缩。如果想使用 <code>ES6</code> 语法新特性，则可以使用 <a href="https://www.npmjs.com/package/gulp-babel"><code>gulp-babel</code></a> 插件转换成 <code>ES5</code> 代码。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install --save-dev gulp-uglify</span><br><span class="line"></span><br><span class="line"># Babel 7</span><br><span class="line">$ npm install --save-dev gulp-babel @babel/core @babel/preset-env</span><br><span class="line"></span><br><span class="line"># Babel 6</span><br><span class="line">$ npm install --save-dev gulp-babel@7 babel-core babel-preset-env</span><br></pre></td></tr></tbody></table></figure>

<p>vim gulpfile.js</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>),</span><br><span class="line">    babel = <span class="built_in">require</span>(<span class="string">'gulp-babel'</span>),</span><br><span class="line">    browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>),</span><br><span class="line">    htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// html task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">html</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// more options, see @link https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>, <span class="comment">// 压缩HTML</span></span><br><span class="line">        collapseBooleanAttributes: <span class="literal">true</span>,<span class="comment">//省略布尔属性的值 &lt;input type="checkbox" checked="checked"&gt; =&gt; &lt;input type="checkbox" checked&gt;</span></span><br><span class="line">        removeComments: <span class="literal">true</span>, <span class="comment">// 删除HTML注释</span></span><br><span class="line">        removeEmptyAttributes: <span class="literal">true</span>, <span class="comment">// 删除所有带有仅空格值的属性 &lt;div id=""&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        removeScriptTypeAttributes: <span class="literal">true</span>, <span class="comment">// 将 type="text/javascript" 从script标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        removeStyleLinkTypeAttributes: <span class="literal">true</span>, <span class="comment">// type="text/css" 从style和link标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        minifyJS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的JS</span></span><br><span class="line">        minifyCSS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的CSS</span></span><br><span class="line">        removeEmptyElements: <span class="literal">true</span>, <span class="comment">// 删除所有内容为空的元素 &lt;div&gt;&lt;p&gt;  &lt;/p&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        keepClosingSlash: <span class="literal">true</span>, <span class="comment">// 在单例元素上保留斜线, 即 &lt;br /&gt; =&gt; &lt;br/&gt;</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/*.html'</span>, { <span class="attr">since</span>: gulp.lastRun(html) })</span><br><span class="line">        .pipe(htmlmin(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// javascript task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">script</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// 处理第三方库文件</span></span><br><span class="line">    gulp.src(<span class="string">'./src/lib/**/*.js'</span>)</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/lib'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/js/**/*.js'</span>)</span><br><span class="line">        .pipe(babel({</span><br><span class="line">            presets: [<span class="string">'@babel/env'</span>]</span><br><span class="line">        }))</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/js'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// watch task</span></span><br><span class="line">watch = <span class="function">(<span class="params">cb</span>) =&gt;</span> {</span><br><span class="line">    gulp.watch(<span class="string">'./src/**/*.html'</span> , {</span><br><span class="line">        events: <span class="string">'all'</span>,</span><br><span class="line">        ignoreInitial: <span class="literal">false</span></span><br><span class="line">    }, gulp.series(</span><br><span class="line">        html,</span><br><span class="line">      	browserReload</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line">    gulp.watch(<span class="string">'./src/**/*.js'</span> , {</span><br><span class="line">        events: <span class="string">'all'</span>,</span><br><span class="line">        ignoreInitial: <span class="literal">false</span></span><br><span class="line">    }, gulp.series(</span><br><span class="line">        script,</span><br><span class="line">      	browserReload</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser server task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserServer</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync({</span><br><span class="line">        server: {</span><br><span class="line">            baseDir: <span class="string">"dist"</span></span><br><span class="line">        }</span><br><span class="line">    })</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser reload task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserReload</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync.reload()</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">    <span class="keyword">default</span>: gulp.series(watch, browserServer)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>为了能看出 <code>babel</code> 转换的效果，我们创建个 <code>index.js</code> 文件</p>
<p>vim src/js/index.js</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> output = <span class="function">(<span class="params">msg</span>) =&gt;</span> {</span><br><span class="line">    <span class="built_in">console</span>.log(msg)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//var output = function (msg) {</span></span><br><span class="line">    <span class="comment">//console.log(msg)</span></span><br><span class="line"><span class="comment">//}</span></span><br><span class="line"></span><br><span class="line">output(<span class="string">'Hello World, From by index.js!'</span>)</span><br></pre></td></tr></tbody></table></figure>

<p>执行构建命令后，原来的 <code>index.js</code> 代码就会被转化并压缩成这样：</p>
<p>vim dist/js/index.js</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;<span class="keyword">var</span> output=<span class="function"><span class="keyword">function</span>(<span class="params">o</span>)</span>{<span class="built_in">console</span>.log(o)};output(<span class="string">"Hello World, From by index.js!"</span>);</span><br></pre></td></tr></tbody></table></figure>

<p>那我们如何实现在每次编辑 <code>src/js/index.js</code> 时，引用它的 <code>html</code> 页面给加个 <code>hash</code> 戳，避免浏览器缓存呢？</p>
<p>这时我们可以通过 <a href="https://www.npmjs.com/package/gulp-rev-all"><code>gulp-rev-all</code></a> 插件来达到我们的目的。首先，我们通过执行以下命令来安装这个插件。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install --save-dev gulp-rev-all</span><br></pre></td></tr></tbody></table></figure>

<p>vim gulpfile.js</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    revAll = <span class="built_in">require</span>(<span class="string">'gulp-rev-all'</span>),</span><br><span class="line">    uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>),</span><br><span class="line">    babel = <span class="built_in">require</span>(<span class="string">'gulp-babel'</span>),</span><br><span class="line">    browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>),</span><br><span class="line">    htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// html task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">html</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// more options, see @link https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>, <span class="comment">// 压缩HTML</span></span><br><span class="line">        collapseBooleanAttributes: <span class="literal">true</span>,<span class="comment">//省略布尔属性的值 &lt;input type="checkbox" checked="checked"&gt; =&gt; &lt;input type="checkbox" checked&gt;</span></span><br><span class="line">        removeComments: <span class="literal">true</span>, <span class="comment">// 删除HTML注释</span></span><br><span class="line">        removeEmptyAttributes: <span class="literal">true</span>, <span class="comment">// 删除所有带有仅空格值的属性 &lt;div id=""&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        removeScriptTypeAttributes: <span class="literal">true</span>, <span class="comment">// 将 type="text/javascript" 从script标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        removeStyleLinkTypeAttributes: <span class="literal">true</span>, <span class="comment">// type="text/css" 从style和link标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        minifyJS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的JS</span></span><br><span class="line">        minifyCSS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的CSS</span></span><br><span class="line">        removeEmptyElements: <span class="literal">true</span>, <span class="comment">// 删除所有内容为空的元素 &lt;div&gt;&lt;p&gt;  &lt;/p&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        keepClosingSlash: <span class="literal">true</span>, <span class="comment">// 在单例元素上保留斜线, 即 &lt;br /&gt; =&gt; &lt;br/&gt;</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/*.html'</span>, { <span class="attr">since</span>: gulp.lastRun(html) })</span><br><span class="line">        .pipe(htmlmin(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// javascript task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">script</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// 处理第三方库文件</span></span><br><span class="line">    gulp.src(<span class="string">'./src/lib/**/*.js'</span>)</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/lib'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/js/**/*.js'</span>)</span><br><span class="line">        .pipe(babel({</span><br><span class="line">            presets: [<span class="string">'@babel/env'</span>]</span><br><span class="line">        }))</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/js'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给文件加个 hash</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rev_all</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">// More options, see @link https://www.npmjs.com/package/gulp-rev-all#options</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        <span class="comment">//prefix: 'https://www.abc.com/', // html文件的css，js地址一般是相对路径，用此参数可配置前缀，一般用于设置CDN的前缀。</span></span><br><span class="line">        dontGlobal: [ <span class="regexp">/^favicon.ico$/</span> ], <span class="comment">// 不要做任何处理</span></span><br><span class="line">        dontRenameFile: [ <span class="regexp">/\.html$/</span> ], <span class="comment">// 不要加hash重命名，但是可以修改内部引用地址</span></span><br><span class="line">        fileNameManifest: <span class="string">"rev-manifest.json"</span>, <span class="comment">// 设置revAll.manifestFile()产生的文件名称，默认: rev-manifest.json</span></span><br><span class="line">        hashLength: <span class="number">8</span>, <span class="comment">// 追加的hash的长度，默认是8</span></span><br><span class="line">        includeFilesInManifest: [<span class="string">'.css'</span>, <span class="string">'.js'</span>], <span class="comment">// 指定rev-manifest.json中可以有哪些类型，即不是对所有文件都生成一个Map，默认: ['.css', '.js']</span></span><br><span class="line">        <span class="comment">// 将路径中的一部分替换掉</span></span><br><span class="line">        <span class="comment">//transformPath: function (rev, source, path) {</span></span><br><span class="line">            <span class="comment">//// on the remote server, image files are served from `/images`</span></span><br><span class="line">            <span class="comment">//return rev.replace('/imgs', '/images').replace('/js', '/script');</span></span><br><span class="line">        <span class="comment">//},</span></span><br><span class="line">        <span class="comment">// 改变默认的命名规则（文件名+hash+后缀 可修改顺序）, 如果想更改命名规则，请确认是否已加载 var path = require("path");</span></span><br><span class="line">        <span class="comment">//transformFilename: function (file, hash) {</span></span><br><span class="line">            <span class="comment">//var ext = path.extname(file.path);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//return hash.substr(0, 5) + '.'  + path.basename(file.path, ext) + ext; // ${filename}.${ext} =&gt; ${hash}.${filename}.${ext}</span></span><br><span class="line">        <span class="comment">//}</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//return gulp.src('./src/**/*', { since: gulp.lastRun(rev_all) })</span></span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'./dist/**/*'</span>, <span class="string">'!./dist/lib/*'</span>])</span><br><span class="line">        .pipe(revAll.revision(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">        .pipe(revAll.manifestFile())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./src/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// watch task</span></span><br><span class="line">watch = <span class="function">(<span class="params">cb</span>) =&gt;</span> {</span><br><span class="line">    gulp.watch(<span class="string">'./src/**/*.html'</span> , {</span><br><span class="line">        events: <span class="string">'all'</span>,</span><br><span class="line">        <span class="comment">//ignoreInitial: false</span></span><br><span class="line">    }, gulp.series(</span><br><span class="line">        html,</span><br><span class="line">      	browserReload</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line">    gulp.watch(<span class="string">'./src/**/*.js'</span> , {</span><br><span class="line">        events: <span class="string">'all'</span>,</span><br><span class="line">        ignoreInitial: <span class="literal">false</span></span><br><span class="line">    }, gulp.series(</span><br><span class="line">        script,</span><br><span class="line">        rev_all,</span><br><span class="line">      	browserReload</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser server task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserServer</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync({</span><br><span class="line">        server: {</span><br><span class="line">            baseDir: <span class="string">"dist"</span></span><br><span class="line">        }</span><br><span class="line">    })</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser reload task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserReload</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync.reload()</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">    <span class="keyword">default</span>: gulp.series(watch, browserServer)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<p>执行构建命令后，<code>dist/index.html</code> 文件内容： </p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"><span class="selector-tag">body</span>{<span class="attribute">font-size</span>:<span class="number">14px</span>}<span class="selector-tag">img</span>{<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">width</span>:<span class="number">100px</span>}</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-url</span>=<span class="string">" "</span> <span class="attr">data-name</span>=<span class="string">" "</span> <span class="attr">style</span>=<span class="string">"font-size:20px;margin:0 auto;text-align:center;margin-top:20%"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/example.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>Gulp 演示 7<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span>&gt;</span>Hello World!<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/index.a5bb2424.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/calculator/addition.f78b4480.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">console</span>.log(addition(<span class="number">1</span>,<span class="number">1</span>))</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>看起来满足我们的需求了，但这时 <code>dist</code> 目录变成了这样：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">dist</span><br><span class="line">├── index.html</span><br><span class="line">├── js</span><br><span class="line">│   ├── calculator</span><br><span class="line">│   │   ├── addition.f78b4480.js</span><br><span class="line">│   │   ├── addition.js</span><br><span class="line">│   │   ├── division.3e99bad9.js</span><br><span class="line">│   │   ├── division.js</span><br><span class="line">│   │   ├── multiply.e0dfcee8.js</span><br><span class="line">│   │   ├── multiply.js</span><br><span class="line">│   │   ├── subtraction.be5375aa.js</span><br><span class="line">│   │   └── subtraction.js</span><br><span class="line">│   ├── index.5e5e8a83.js</span><br><span class="line">│   └── index.js</span><br><span class="line">└── lib</span><br><span class="line">    └── jquery.min.js</span><br></pre></td></tr></tbody></table></figure>

<p>额。。。源文件怎么处理呢？我们可以通过使用 <a href="https://www.npmjs.com/package/gulp-rev-dist-clean"><code>gulp-rev-dist-clean</code></a> 插件来移除源文件。它本质上是使用 <code>src/rev-manifest.json</code> 文件来进行比对，然后删除的。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install --save-dev gulp-rev-dist-clean</span><br></pre></td></tr></tbody></table></figure>

<p>vim gulpfile.js</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line">    revDistClean = <span class="built_in">require</span>(<span class="string">'gulp-rev-dist-clean'</span>),</span><br><span class="line">    revAll = <span class="built_in">require</span>(<span class="string">'gulp-rev-all'</span>),</span><br><span class="line">    uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>),</span><br><span class="line">    babel = <span class="built_in">require</span>(<span class="string">'gulp-babel'</span>),</span><br><span class="line">    browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>),</span><br><span class="line">    htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// html task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">html</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// more options, see @link https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>, <span class="comment">// 压缩HTML</span></span><br><span class="line">        collapseBooleanAttributes: <span class="literal">true</span>,<span class="comment">//省略布尔属性的值 &lt;input type="checkbox" checked="checked"&gt; =&gt; &lt;input type="checkbox" checked&gt;</span></span><br><span class="line">        removeComments: <span class="literal">true</span>, <span class="comment">// 删除HTML注释</span></span><br><span class="line">        removeEmptyAttributes: <span class="literal">true</span>, <span class="comment">// 删除所有带有仅空格值的属性 &lt;div id=""&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        removeScriptTypeAttributes: <span class="literal">true</span>, <span class="comment">// 将 type="text/javascript" 从script标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        removeStyleLinkTypeAttributes: <span class="literal">true</span>, <span class="comment">// type="text/css" 从style和link标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        minifyJS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的JS</span></span><br><span class="line">        minifyCSS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的CSS</span></span><br><span class="line">        removeEmptyElements: <span class="literal">true</span>, <span class="comment">// 删除所有内容为空的元素 &lt;div&gt;&lt;p&gt;  &lt;/p&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        keepClosingSlash: <span class="literal">true</span>, <span class="comment">// 在单例元素上保留斜线, 即 &lt;br /&gt; =&gt; &lt;br/&gt;</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/*.html'</span>, { <span class="attr">since</span>: gulp.lastRun(html) })</span><br><span class="line">        .pipe(htmlmin(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// javascript task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">script</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// 处理第三方库文件</span></span><br><span class="line">    gulp.src(<span class="string">'./src/lib/**/*.js'</span>)</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/lib'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/js/**/*.js'</span>)</span><br><span class="line">        .pipe(babel({</span><br><span class="line">            presets: [<span class="string">'@babel/env'</span>]</span><br><span class="line">        }))</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/js'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line"><span class="comment">// rev dist clean</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rev_dist_clean</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> gulp.src([</span><br><span class="line">            <span class="string">'./dist/**/*'</span>,</span><br><span class="line">            <span class="string">'!./dist/**/*.html'</span>,</span><br><span class="line">            <span class="string">'!dist/lib/*'</span></span><br><span class="line">        ])</span><br><span class="line">        .pipe(</span><br><span class="line">            revDistClean(<span class="string">'./src/rev-manifest.json'</span>, {</span><br><span class="line">                keepOriginalFiles: <span class="literal">false</span></span><br><span class="line">            })</span><br><span class="line">        )</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给文件加个 hash</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rev_all</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">// More options, see @link https://www.npmjs.com/package/gulp-rev-all#options</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        <span class="comment">//prefix: 'https://www.abc.com/', // html文件的css，js地址一般是相对路径，用此参数可配置前缀，一般用于设置CDN的前缀。</span></span><br><span class="line">        dontGlobal: [ <span class="regexp">/^favicon.ico$/</span> ], <span class="comment">// 不要做任何处理</span></span><br><span class="line">        dontRenameFile: [ <span class="regexp">/\.html$/</span> ], <span class="comment">// 不要加hash重命名，但是可以修改内部引用地址</span></span><br><span class="line">        fileNameManifest: <span class="string">"rev-manifest.json"</span>, <span class="comment">// 设置revAll.manifestFile()产生的文件名称，默认: rev-manifest.json</span></span><br><span class="line">        hashLength: <span class="number">8</span>, <span class="comment">// 追加的hash的长度，默认是8</span></span><br><span class="line">        includeFilesInManifest: [<span class="string">'.css'</span>, <span class="string">'.js'</span>], <span class="comment">// 指定rev-manifest.json中可以有哪些类型，即不是对所有文件都生成一个Map，默认: ['.css', '.js']</span></span><br><span class="line">        <span class="comment">// 将路径中的一部分替换掉</span></span><br><span class="line">        <span class="comment">//transformPath: function (rev, source, path) {</span></span><br><span class="line">            <span class="comment">//// on the remote server, image files are served from `/images`</span></span><br><span class="line">            <span class="comment">//return rev.replace('/imgs', '/images').replace('/js', '/script');</span></span><br><span class="line">        <span class="comment">//},</span></span><br><span class="line">        <span class="comment">// 改变默认的命名规则（文件名+hash+后缀 可修改顺序）, 如果想更改命名规则，请确认是否已加载 var path = require("path");</span></span><br><span class="line">        <span class="comment">//transformFilename: function (file, hash) {</span></span><br><span class="line">            <span class="comment">//var ext = path.extname(file.path);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//return hash.substr(0, 5) + '.'  + path.basename(file.path, ext) + ext; // ${filename}.${ext} =&gt; ${hash}.${filename}.${ext}</span></span><br><span class="line">        <span class="comment">//}</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//return gulp.src('./src/**/*', { since: gulp.lastRun(rev_all) })</span></span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'./dist/**/*'</span>, <span class="string">'!./dist/lib/*'</span>])</span><br><span class="line">        .pipe(revAll.revision(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">        .pipe(revAll.manifestFile())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./src/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// watch task</span></span><br><span class="line">watch = <span class="function">(<span class="params">cb</span>) =&gt;</span> {</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line">    gulp.watch([<span class="string">'./src/**/*'</span>, <span class="string">'!src/rev-manifest.json'</span>] , {</span><br><span class="line">        events: <span class="string">'all'</span>,</span><br><span class="line">        ignoreInitial: <span class="literal">false</span></span><br><span class="line">    }, gulp.series(</span><br><span class="line">        html,</span><br><span class="line">        script,</span><br><span class="line">        rev_all,</span><br><span class="line">        rev_dist_clean,</span><br><span class="line">      	browserReload</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser server task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserServer</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync({</span><br><span class="line">        server: {</span><br><span class="line">            baseDir: <span class="string">"dist"</span></span><br><span class="line">        }</span><br><span class="line">    })</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser reload task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserReload</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync.reload()</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">    <span class="keyword">default</span>: gulp.series(watch, browserServer)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>当执行构建命令后，<code>dist</code> 目录：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">dist</span><br><span class="line">├── index.html</span><br><span class="line">├── js</span><br><span class="line">│   ├── calculator</span><br><span class="line">│   │   ├── addition.f78b4480.f78b4480.js</span><br><span class="line">│   │   ├── addition.f78b4480.js</span><br><span class="line">│   │   ├── division.3e99bad9.3e99bad9.js</span><br><span class="line">│   │   ├── division.3e99bad9.js</span><br><span class="line">│   │   ├── multiply.e0dfcee8.e0dfcee8.js</span><br><span class="line">│   │   ├── multiply.e0dfcee8.js</span><br><span class="line">│   │   ├── subtraction.be5375aa.be5375aa.js</span><br><span class="line">│   │   └── subtraction.be5375aa.js</span><br><span class="line">│   ├── index.5e5e8a83.a5bb2424.js</span><br><span class="line">│   └── index.5e5e8a83.js</span><br><span class="line">└── lib</span><br><span class="line">    └── jquery.min.js</span><br></pre></td></tr></tbody></table></figure>

<p>如果跟随我的步骤一步一步操作，是会变成这样的，这是因为之前的步骤就已经生成了 <code>index.5e5e8a83.js</code> 文件，而再次执行便会对这个文件再加个戳。也可以看下 <code>src/rev-manifest.json</code> 文件，可以更好的理解其中的缘由：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">{</span><br><span class="line">  "js/index.5e5e8a83.js": "js/index.5e5e8a83.a5bb2424.js",</span><br><span class="line">  "js/index.js": "js/index.5e5e8a83.js",</span><br><span class="line">  "js/calculator/addition.f78b4480.js": "js/calculator/addition.f78b4480.f78b4480.js",</span><br><span class="line">  "js/calculator/addition.js": "js/calculator/addition.f78b4480.js",</span><br><span class="line">  "js/calculator/division.3e99bad9.js": "js/calculator/division.3e99bad9.3e99bad9.js",</span><br><span class="line">  "js/calculator/division.js": "js/calculator/division.3e99bad9.js",</span><br><span class="line">  "js/calculator/multiply.e0dfcee8.js": "js/calculator/multiply.e0dfcee8.e0dfcee8.js",</span><br><span class="line">  "js/calculator/multiply.js": "js/calculator/multiply.e0dfcee8.js",</span><br><span class="line">  "js/calculator/subtraction.be5375aa.js": "js/calculator/subtraction.be5375aa.be5375aa.js",</span><br><span class="line">  "js/calculator/subtraction.js": "js/calculator/subtraction.be5375aa.js"</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>这将导致每构建一次文件的数量就会翻倍的增加，而要解决这个问题，咱们还得用个文件删除的插件 <a href="https://www.npmjs.com/package/del"><code>del</code></a> ，再每次构建前都先清空下 <code>dist</code> 目录。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install --save-dev del</span><br></pre></td></tr></tbody></table></figure>

<p>vim gulpfile.js</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line">    del = <span class="built_in">require</span>(<span class="string">'del'</span>),</span><br><span class="line">    revDistClean = <span class="built_in">require</span>(<span class="string">'gulp-rev-dist-clean'</span>),</span><br><span class="line">    revAll = <span class="built_in">require</span>(<span class="string">'gulp-rev-all'</span>),</span><br><span class="line">    uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>),</span><br><span class="line">    babel = <span class="built_in">require</span>(<span class="string">'gulp-babel'</span>),</span><br><span class="line">    browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>),</span><br><span class="line">    htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// html task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">html</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// more options, see @link https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>, <span class="comment">// 压缩HTML</span></span><br><span class="line">        collapseBooleanAttributes: <span class="literal">true</span>,<span class="comment">//省略布尔属性的值 &lt;input type="checkbox" checked="checked"&gt; =&gt; &lt;input type="checkbox" checked&gt;</span></span><br><span class="line">        removeComments: <span class="literal">true</span>, <span class="comment">// 删除HTML注释</span></span><br><span class="line">        removeEmptyAttributes: <span class="literal">true</span>, <span class="comment">// 删除所有带有仅空格值的属性 &lt;div id=""&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        removeScriptTypeAttributes: <span class="literal">true</span>, <span class="comment">// 将 type="text/javascript" 从script标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        removeStyleLinkTypeAttributes: <span class="literal">true</span>, <span class="comment">// type="text/css" 从style和link标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        minifyJS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的JS</span></span><br><span class="line">        minifyCSS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的CSS</span></span><br><span class="line">        removeEmptyElements: <span class="literal">true</span>, <span class="comment">// 删除所有内容为空的元素 &lt;div&gt;&lt;p&gt;  &lt;/p&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        keepClosingSlash: <span class="literal">true</span>, <span class="comment">// 在单例元素上保留斜线, 即 &lt;br /&gt; =&gt; &lt;br/&gt;</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/*.html'</span>, { <span class="attr">since</span>: gulp.lastRun(html) })</span><br><span class="line">        .pipe(htmlmin(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// javascript task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">script</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// 处理第三方库文件</span></span><br><span class="line">    gulp.src(<span class="string">'./src/lib/**/*.js'</span>)</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/lib'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/js/**/*.js'</span>)</span><br><span class="line">        .pipe(babel({</span><br><span class="line">            presets: [<span class="string">'@babel/env'</span>]</span><br><span class="line">        }))</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/js'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clean</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> del(<span class="string">'./dist'</span>)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// rev dist clean</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rev_dist_clean</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> gulp.src([</span><br><span class="line">            <span class="string">'./dist/**/*'</span>,</span><br><span class="line">            <span class="string">'!./dist/**/*.html'</span>,</span><br><span class="line">            <span class="string">'!dist/lib/*'</span></span><br><span class="line">        ])</span><br><span class="line">        .pipe(</span><br><span class="line">            revDistClean(<span class="string">'./src/rev-manifest.json'</span>, {</span><br><span class="line">                keepOriginalFiles: <span class="literal">false</span></span><br><span class="line">            })</span><br><span class="line">        )</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给文件加个 hash</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rev_all</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">// More options, see @link https://www.npmjs.com/package/gulp-rev-all#options</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        <span class="comment">//prefix: 'https://www.abc.com/', // html文件的css，js地址一般是相对路径，用此参数可配置前缀，一般用于设置CDN的前缀。</span></span><br><span class="line">        dontGlobal: [ <span class="regexp">/^favicon.ico$/</span> ], <span class="comment">// 不要做任何处理</span></span><br><span class="line">        dontRenameFile: [ <span class="regexp">/\.html$/</span> ], <span class="comment">// 不要加hash重命名，但是可以修改内部引用地址</span></span><br><span class="line">        fileNameManifest: <span class="string">"rev-manifest.json"</span>, <span class="comment">// 设置revAll.manifestFile()产生的文件名称，默认: rev-manifest.json</span></span><br><span class="line">        hashLength: <span class="number">8</span>, <span class="comment">// 追加的hash的长度，默认是8</span></span><br><span class="line">        includeFilesInManifest: [<span class="string">'.css'</span>, <span class="string">'.js'</span>], <span class="comment">// 指定rev-manifest.json中可以有哪些类型，即不是对所有文件都生成一个Map，默认: ['.css', '.js']</span></span><br><span class="line">        <span class="comment">// 将路径中的一部分替换掉</span></span><br><span class="line">        <span class="comment">//transformPath: function (rev, source, path) {</span></span><br><span class="line">            <span class="comment">//// on the remote server, image files are served from `/images`</span></span><br><span class="line">            <span class="comment">//return rev.replace('/imgs', '/images').replace('/js', '/script');</span></span><br><span class="line">        <span class="comment">//},</span></span><br><span class="line">        <span class="comment">// 改变默认的命名规则（文件名+hash+后缀 可修改顺序）, 如果想更改命名规则，请确认是否已加载 var path = require("path");</span></span><br><span class="line">        <span class="comment">//transformFilename: function (file, hash) {</span></span><br><span class="line">            <span class="comment">//var ext = path.extname(file.path);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//return hash.substr(0, 5) + '.'  + path.basename(file.path, ext) + ext; // ${filename}.${ext} =&gt; ${hash}.${filename}.${ext}</span></span><br><span class="line">        <span class="comment">//}</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//return gulp.src('./src/**/*', { since: gulp.lastRun(rev_all) })</span></span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'./dist/**/*'</span>, <span class="string">'!./dist/lib/*'</span>])</span><br><span class="line">        .pipe(revAll.revision(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">        .pipe(revAll.manifestFile())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./src/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// watch task</span></span><br><span class="line">watch = <span class="function">(<span class="params">cb</span>) =&gt;</span> {</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line">    gulp.watch([<span class="string">'./src/**/*'</span>, <span class="string">'!src/rev-manifest.json'</span>] , {</span><br><span class="line">        events: <span class="string">'all'</span>,</span><br><span class="line">        ignoreInitial: <span class="literal">false</span></span><br><span class="line">    }, gulp.series(</span><br><span class="line">        clean,</span><br><span class="line">        html,</span><br><span class="line">        script,</span><br><span class="line">        rev_all,</span><br><span class="line">        rev_dist_clean,</span><br><span class="line">      	browserReload</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser server task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserServer</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync({</span><br><span class="line">        server: {</span><br><span class="line">            baseDir: <span class="string">"dist"</span></span><br><span class="line">        }</span><br><span class="line">    })</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser reload task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserReload</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync.reload()</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">    <span class="keyword">default</span>: gulp.parallel(watch, browserServer)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>这回再执行下构建命令，完美啦…</p>
<h5 id="CSS-处理"><a href="#CSS-处理" class="headerlink" title="CSS 处理"></a>CSS 处理</h5><p>可以对 <code>CSS</code> 文件进行：css文件压缩、less或sass 转 css、自动追加 vendor css。</p>
<p>通过 <a href="https://www.npmjs.com/package/gulp-postcss"><code>postcss</code></a> 插件，可以加速对 <code>css</code> 文件的处理，因为它仅解析一次。 </p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install --save-dev gulp-postcss cssnano autoprefixer</span><br></pre></td></tr></tbody></table></figure>

<p>vim gulpfile.js</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line">    postcss = <span class="built_in">require</span>(<span class="string">'gulp-postcss'</span>),</span><br><span class="line">    autoprefixer = <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>),</span><br><span class="line">    cssnano = <span class="built_in">require</span>(<span class="string">'cssnano'</span>),</span><br><span class="line">    del = <span class="built_in">require</span>(<span class="string">'del'</span>),</span><br><span class="line">    revDistClean = <span class="built_in">require</span>(<span class="string">'gulp-rev-dist-clean'</span>),</span><br><span class="line">    revAll = <span class="built_in">require</span>(<span class="string">'gulp-rev-all'</span>),</span><br><span class="line">    uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>),</span><br><span class="line">    babel = <span class="built_in">require</span>(<span class="string">'gulp-babel'</span>),</span><br><span class="line">    browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>),</span><br><span class="line">    htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// html task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">html</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// more options, see @link https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>, <span class="comment">// 压缩HTML</span></span><br><span class="line">        collapseBooleanAttributes: <span class="literal">true</span>,<span class="comment">//省略布尔属性的值 &lt;input type="checkbox" checked="checked"&gt; =&gt; &lt;input type="checkbox" checked&gt;</span></span><br><span class="line">        removeComments: <span class="literal">true</span>, <span class="comment">// 删除HTML注释</span></span><br><span class="line">        removeEmptyAttributes: <span class="literal">true</span>, <span class="comment">// 删除所有带有仅空格值的属性 &lt;div id=""&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        removeScriptTypeAttributes: <span class="literal">true</span>, <span class="comment">// 将 type="text/javascript" 从script标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        removeStyleLinkTypeAttributes: <span class="literal">true</span>, <span class="comment">// type="text/css" 从style和link标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        minifyJS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的JS</span></span><br><span class="line">        minifyCSS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的CSS</span></span><br><span class="line">        removeEmptyElements: <span class="literal">true</span>, <span class="comment">// 删除所有内容为空的元素 &lt;div&gt;&lt;p&gt;  &lt;/p&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        keepClosingSlash: <span class="literal">true</span>, <span class="comment">// 在单例元素上保留斜线, 即 &lt;br /&gt; =&gt; &lt;br/&gt;</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/*.html'</span>, { <span class="attr">since</span>: gulp.lastRun(html) })</span><br><span class="line">        .pipe(htmlmin(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// javascript task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">script</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// 处理第三方库文件</span></span><br><span class="line">  	<span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line">    gulp.src(<span class="string">'./src/lib/**/*'</span>)</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/lib'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/js/**/*.js'</span>)</span><br><span class="line">        .pipe(babel({</span><br><span class="line">            presets: [<span class="string">'@babel/env'</span>]</span><br><span class="line">        }))</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/js'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">css</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> plugins = [</span><br><span class="line">        autoprefixer(</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">// 更多选项配置详见：@link https://github.com/postcss/autoprefixer#options</span></span><br><span class="line">                <span class="comment">// css 未压缩是否美化属性，默认值: true</span></span><br><span class="line">                cascade: <span class="literal">false</span>,</span><br><span class="line">                <span class="comment">// (boolean): 是否应该加前缀，默认值为：true</span></span><br><span class="line">                add: <span class="literal">true</span>,</span><br><span class="line">                <span class="comment">// 是否移除不必要（过时）的前缀，默认值: true</span></span><br><span class="line">                remove: <span class="literal">true</span>,</span><br><span class="line">                <span class="comment">// 是否为Grid布局属性添加IE前缀，默认值为：true</span></span><br><span class="line">                grid: <span class="literal">true</span>,</span><br><span class="line">                <span class="comment">// 是否为"@supports"属性添加前缀，默认值为：true</span></span><br><span class="line">                supports: <span class="literal">true</span>,</span><br><span class="line">                <span class="comment">// flexbox (boolean|string): 是否为flexbox属性是否为IE的添加前缀，默认值为：true。如果值为"no-2009"，那么只会为最终和IE规范添加前缀。</span></span><br><span class="line">                flexbox: <span class="literal">true</span>,</span><br><span class="line">                browsers: [<span class="string">'last 3 version'</span>, <span class="string">"&gt;= android 4"</span>]</span><br><span class="line">            }</span><br><span class="line">        ),</span><br><span class="line">        cssnano()</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'src/css/**/*'</span>)</span><br><span class="line">        .pipe(</span><br><span class="line">            postcss(plugins)</span><br><span class="line">        )</span><br><span class="line">        .pipe(gulp.dest(<span class="string">"dist/css"</span>));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clean</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> del(<span class="string">'./dist'</span>)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// rev dist clean</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rev_dist_clean</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> gulp.src([</span><br><span class="line">            <span class="string">'./dist/**/*'</span>,</span><br><span class="line">            <span class="string">'!./dist/**/*.html'</span>,</span><br><span class="line">            <span class="string">'!dist/lib/*'</span></span><br><span class="line">        ])</span><br><span class="line">        .pipe(</span><br><span class="line">            revDistClean(<span class="string">'./src/rev-manifest.json'</span>, {</span><br><span class="line">                keepOriginalFiles: <span class="literal">false</span></span><br><span class="line">            })</span><br><span class="line">        )</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给文件加个 hash</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rev_all</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">// More options, see @link https://www.npmjs.com/package/gulp-rev-all#options</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        <span class="comment">//prefix: 'https://www.abc.com/', // html文件的css，js地址一般是相对路径，用此参数可配置前缀，一般用于设置CDN的前缀。</span></span><br><span class="line">        dontGlobal: [ <span class="regexp">/^favicon.ico$/</span> ], <span class="comment">// 不要做任何处理</span></span><br><span class="line">        dontRenameFile: [ <span class="regexp">/\.html$/</span> ], <span class="comment">// 不要加hash重命名，但是可以修改内部引用地址</span></span><br><span class="line">        fileNameManifest: <span class="string">"rev-manifest.json"</span>, <span class="comment">// 设置revAll.manifestFile()产生的文件名称，默认: rev-manifest.json</span></span><br><span class="line">        hashLength: <span class="number">8</span>, <span class="comment">// 追加的hash的长度，默认是8</span></span><br><span class="line">        includeFilesInManifest: [<span class="string">'.css'</span>, <span class="string">'.js'</span>], <span class="comment">// 指定rev-manifest.json中可以有哪些类型，即不是对所有文件都生成一个Map，默认: ['.css', '.js']</span></span><br><span class="line">        <span class="comment">// 将路径中的一部分替换掉</span></span><br><span class="line">        <span class="comment">//transformPath: function (rev, source, path) {</span></span><br><span class="line">            <span class="comment">//// on the remote server, image files are served from `/images`</span></span><br><span class="line">            <span class="comment">//return rev.replace('/imgs', '/images').replace('/js', '/script');</span></span><br><span class="line">        <span class="comment">//},</span></span><br><span class="line">        <span class="comment">// 改变默认的命名规则（文件名+hash+后缀 可修改顺序）, 如果想更改命名规则，请确认是否已加载 var path = require("path");</span></span><br><span class="line">        <span class="comment">//transformFilename: function (file, hash) {</span></span><br><span class="line">            <span class="comment">//var ext = path.extname(file.path);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//return hash.substr(0, 5) + '.'  + path.basename(file.path, ext) + ext; // ${filename}.${ext} =&gt; ${hash}.${filename}.${ext}</span></span><br><span class="line">        <span class="comment">//}</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//return gulp.src('./src/**/*', { since: gulp.lastRun(rev_all) })</span></span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'./dist/**/*'</span>, <span class="string">'!./dist/lib/*'</span>])</span><br><span class="line">        .pipe(revAll.revision(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">        .pipe(revAll.manifestFile())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./src/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// watch task</span></span><br><span class="line">watch = <span class="function">(<span class="params">cb</span>) =&gt;</span> {</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line">    gulp.watch([<span class="string">'./src/**/*'</span>, <span class="string">'!src/rev-manifest.json'</span>] , {</span><br><span class="line">        events: <span class="string">'all'</span>,</span><br><span class="line">        ignoreInitial: <span class="literal">false</span></span><br><span class="line">    }, gulp.series(</span><br><span class="line">        clean,</span><br><span class="line">        html,</span><br><span class="line">        script,</span><br><span class="line">      	<span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line">        css,</span><br><span class="line">        rev_all,</span><br><span class="line">        rev_dist_clean,</span><br><span class="line">      	browserReload</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser server task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserServer</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync({</span><br><span class="line">        server: {</span><br><span class="line">            baseDir: <span class="string">"dist"</span></span><br><span class="line">        }</span><br><span class="line">    })</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser reload task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserReload</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync.reload()</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">    <span class="keyword">default</span>: gulp.series(watch, browserServer)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>css 源文件内容：</p>
<figure class="highlight css"><table><tbody><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> {</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">10px</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> {</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">transition</span>: opacity <span class="number">1s</span> linear;</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>构建后 css 文件内容：</p>
<figure class="highlight css"><table><tbody><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>{<span class="attribute">font-size</span>:<span class="number">10px</span>}<span class="selector-tag">img</span>{<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">width</span>:<span class="number">100px</span>;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-webkit-transition</span>:opacity <span class="number">1s</span> linear;<span class="attribute">-o-transition</span>:opacity <span class="number">1s</span> linear;<span class="attribute">transition</span>:opacity <span class="number">1s</span> linear}<span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>{<span class="attribute">opacity</span>:<span class="number">0</span>}</span><br></pre></td></tr></tbody></table></figure>



<h5 id="Images-处理"><a href="#Images-处理" class="headerlink" title="Images 处理"></a>Images 处理</h5><p>可以使用插件：<a href="https://www.npmjs.com/package/gulp-imagemin">gulp-imagemin</a> 来压缩图片大小、转换图片类型。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ cnpm install --save-dev gulp-imagemin</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install cnpm </span></span><br><span class="line">$ npm install --global cnpm</span><br></pre></td></tr></tbody></table></figure>

<p>vim gulpfile.js</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line">    imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>),</span><br><span class="line">    postcss = <span class="built_in">require</span>(<span class="string">'gulp-postcss'</span>),</span><br><span class="line">    autoprefixer = <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>),</span><br><span class="line">    cssnano = <span class="built_in">require</span>(<span class="string">'cssnano'</span>),</span><br><span class="line">    del = <span class="built_in">require</span>(<span class="string">'del'</span>),</span><br><span class="line">    revDistClean = <span class="built_in">require</span>(<span class="string">'gulp-rev-dist-clean'</span>),</span><br><span class="line">    revAll = <span class="built_in">require</span>(<span class="string">'gulp-rev-all'</span>),</span><br><span class="line">    uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>),</span><br><span class="line">    babel = <span class="built_in">require</span>(<span class="string">'gulp-babel'</span>),</span><br><span class="line">    browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>),</span><br><span class="line">    htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// html task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">html</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// more options, see @link https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        collapseWhitespace: <span class="literal">true</span>, <span class="comment">// 压缩HTML</span></span><br><span class="line">        collapseBooleanAttributes: <span class="literal">true</span>,<span class="comment">//省略布尔属性的值 &lt;input type="checkbox" checked="checked"&gt; =&gt; &lt;input type="checkbox" checked&gt;</span></span><br><span class="line">        removeComments: <span class="literal">true</span>, <span class="comment">// 删除HTML注释</span></span><br><span class="line">        removeEmptyAttributes: <span class="literal">true</span>, <span class="comment">// 删除所有带有仅空格值的属性 &lt;div id=""&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        removeScriptTypeAttributes: <span class="literal">true</span>, <span class="comment">// 将 type="text/javascript" 从script标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        removeStyleLinkTypeAttributes: <span class="literal">true</span>, <span class="comment">// type="text/css" 从style和link标签中删除, 其他 type 属性值保持不变</span></span><br><span class="line">        minifyJS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的JS</span></span><br><span class="line">        minifyCSS: <span class="literal">true</span>, <span class="comment">// 压缩页面中的CSS</span></span><br><span class="line">        removeEmptyElements: <span class="literal">true</span>, <span class="comment">// 删除所有内容为空的元素 &lt;div&gt;&lt;p&gt;  &lt;/p&gt;&lt;/div&gt; =&gt; &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line">        keepClosingSlash: <span class="literal">true</span>, <span class="comment">// 在单例元素上保留斜线, 即 &lt;br /&gt; =&gt; &lt;br/&gt;</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/*.html'</span>, { <span class="attr">since</span>: gulp.lastRun(html) })</span><br><span class="line">        .pipe(htmlmin(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// javascript task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">script</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="comment">// 处理第三方库文件</span></span><br><span class="line">    gulp.src(<span class="string">'./src/lib/**/*'</span>)</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/lib'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./src/js/**/*.js'</span>)</span><br><span class="line">        .pipe(babel({</span><br><span class="line">            presets: [<span class="string">'@babel/env'</span>]</span><br><span class="line">        }))</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/js'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">css</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> plugins = [</span><br><span class="line">        autoprefixer(</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">// 更多选项配置详见：@link https://github.com/postcss/autoprefixer#options</span></span><br><span class="line">                <span class="comment">// css 未压缩是否美化属性，默认值: true</span></span><br><span class="line">                cascade: <span class="literal">false</span>,</span><br><span class="line">                <span class="comment">// (boolean): 是否应该加前缀，默认值为：true</span></span><br><span class="line">                add: <span class="literal">true</span>,</span><br><span class="line">                <span class="comment">// 是否移除不必要（过时）的前缀，默认值: true</span></span><br><span class="line">                remove: <span class="literal">true</span>,</span><br><span class="line">                <span class="comment">// 是否为Grid布局属性添加IE前缀，默认值为：true</span></span><br><span class="line">                grid: <span class="literal">true</span>,</span><br><span class="line">                <span class="comment">// 是否为"@supports"属性添加前缀，默认值为：true</span></span><br><span class="line">                supports: <span class="literal">true</span>,</span><br><span class="line">                <span class="comment">// flexbox (boolean|string): 是否为flexbox属性是否为IE的添加前缀，默认值为：true。如果值为"no-2009"，那么只会为最终和IE规范添加前缀。</span></span><br><span class="line">                flexbox: <span class="literal">true</span>,</span><br><span class="line">                browsers: [<span class="string">'last 3 version'</span>]</span><br><span class="line">            }</span><br><span class="line">        ),</span><br><span class="line">        cssnano()</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'src/css/**/*'</span>)</span><br><span class="line">        .pipe(</span><br><span class="line">            postcss(plugins)</span><br><span class="line">        )</span><br><span class="line">        .pipe(gulp.dest(<span class="string">"dist/css"</span>));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">images</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'src/images/*'</span>)</span><br><span class="line">        .pipe(imagemin())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'dist/images'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clean</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> del(<span class="string">'./dist'</span>)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// rev dist clean</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rev_dist_clean</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> gulp.src([</span><br><span class="line">            <span class="string">'./dist/**/*'</span>,</span><br><span class="line">            <span class="string">'!./dist/**/*.html'</span>,</span><br><span class="line">            <span class="string">'!dist/lib/*'</span>,</span><br><span class="line">        ])</span><br><span class="line">        .pipe(</span><br><span class="line">            revDistClean(<span class="string">'./src/rev-manifest.json'</span>, {</span><br><span class="line">                keepOriginalFiles: <span class="literal">false</span></span><br><span class="line">            })</span><br><span class="line">        )</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给文件加个 hash</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rev_all</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">// More options, see @link https://www.npmjs.com/package/gulp-rev-all#options</span></span><br><span class="line">    <span class="keyword">var</span> options = {</span><br><span class="line">        <span class="comment">//prefix: 'https://www.abc.com/', // html文件的css，js地址一般是相对路径，用此参数可配置前缀，一般用于设置CDN的前缀。</span></span><br><span class="line">        dontGlobal: [ <span class="regexp">/^favicon.ico$/</span> ], <span class="comment">// 不要做任何处理</span></span><br><span class="line">        dontRenameFile: [ <span class="regexp">/\.html$/</span> ], <span class="comment">// 不要加hash重命名，但是可以修改内部引用地址</span></span><br><span class="line">        fileNameManifest: <span class="string">"rev-manifest.json"</span>, <span class="comment">// 设置revAll.manifestFile()产生的文件名称，默认: rev-manifest.json</span></span><br><span class="line">        hashLength: <span class="number">8</span>, <span class="comment">// 追加的hash的长度，默认是8</span></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line">        includeFilesInManifest: [<span class="string">'.css'</span>, <span class="string">'.js'</span>, <span class="string">'.jpg'</span>, <span class="string">'.png'</span>, <span class="string">'.jpeg'</span>, <span class="string">'.webp'</span>, <span class="string">'.gif'</span>, <span class="string">'.svg'</span>], <span class="comment">// 指定rev-manifest.json中可以有哪些类型，即不是对所有文件都生成一个Map，默认: ['.css', '.js']</span></span><br><span class="line">        <span class="comment">// 将路径中的一部分替换掉</span></span><br><span class="line">        <span class="comment">//transformPath: function (rev, source, path) {</span></span><br><span class="line">            <span class="comment">//// on the remote server, image files are served from `/images`</span></span><br><span class="line">            <span class="comment">//return rev.replace('/imgs', '/images').replace('/js', '/script');</span></span><br><span class="line">        <span class="comment">//},</span></span><br><span class="line">        <span class="comment">// 改变默认的命名规则（文件名+hash+后缀 可修改顺序）, 如果想更改命名规则，请确认是否已加载 var path = require("path");</span></span><br><span class="line">        <span class="comment">//transformFilename: function (file, hash) {</span></span><br><span class="line">            <span class="comment">//var ext = path.extname(file.path);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//return hash.substr(0, 5) + '.'  + path.basename(file.path, ext) + ext; // ${filename}.${ext} =&gt; ${hash}.${filename}.${ext}</span></span><br><span class="line">        <span class="comment">//}</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//return gulp.src('./src/**/*', { since: gulp.lastRun(rev_all) })</span></span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'./dist/**/*'</span>, <span class="string">'!./dist/lib/*'</span>])</span><br><span class="line">        .pipe(revAll.revision(options))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./dist/'</span>))</span><br><span class="line">        .pipe(revAll.manifestFile())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./src/'</span>))</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// watch task</span></span><br><span class="line">watch = <span class="function">(<span class="params">cb</span>) =&gt;</span> {</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> modify</span></span><br><span class="line">    gulp.watch([<span class="string">'./src/**/*'</span>, <span class="string">'!src/rev-manifest.json'</span>] , {</span><br><span class="line">        events: <span class="string">'all'</span>,</span><br><span class="line">        ignoreInitial: <span class="literal">false</span></span><br><span class="line">    }, gulp.series(</span><br><span class="line">        clean,</span><br><span class="line">        images,</span><br><span class="line">        html,</span><br><span class="line">        script,</span><br><span class="line">        css,</span><br><span class="line">        rev_all,</span><br><span class="line">        rev_dist_clean,</span><br><span class="line">      	browserReload</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser server task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserServer</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync({</span><br><span class="line">        server: {</span><br><span class="line">            baseDir: <span class="string">"dist"</span></span><br><span class="line">        }</span><br><span class="line">    })</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// browser reload task</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">browserReload</span>(<span class="params">cb</span>) </span>{</span><br><span class="line">    browserSync.reload()</span><br><span class="line">    cb()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">    <span class="keyword">default</span>: gulp.parallel(watch, browserServer)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>总结下来，你可能需要安装这些插件。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install --save-dev \</span><br><span class="line">        gulp \</span><br><span class="line">        gulp-cli \</span><br><span class="line">        gulp-htmlmin \</span><br><span class="line">        gulp-rev-all \</span><br><span class="line">        gulp-rev-dist-clean \</span><br><span class="line">        del \</span><br><span class="line">        gulp-uglify \</span><br><span class="line">        gulp-babel \</span><br><span class="line">        @babel/core \</span><br><span class="line">        @babel/preset-env \</span><br><span class="line">        browser-sync \</span><br><span class="line">        gulp-postcss \</span><br><span class="line">        cssnano \</span><br><span class="line">        autoprefixer \</span><br><span class="line">        gulp-imagemin</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Gulp</tag>
      </tags>
  </entry>
  <entry>
    <title>若依用户分表鉴权</title>
    <url>/posts/java/d3954bd.html</url>
    <content><![CDATA[<h1 id="若依用户分表鉴权"><a href="#若依用户分表鉴权" class="headerlink" title="若依用户分表鉴权"></a>若依用户分表鉴权</h1><p>若依自带了管理后台及服务端，但项目通常还有客户端业务。那客户端如何实现鉴权？最简单的方式是在原有的 sys_user 上增加业务逻辑，但随着项目越做越大耦合度也会成倍增加。那解耦就势在必行。</p>
<p>本篇将介绍如何让客户端拥有一套独立表来实现用户鉴权。完整代码<a href="https://github.com/codezm/codezm-auths">参见</a>。</p>
<a id="more"></a>



<h2 id="创建-auths-Maven-模块"><a href="#创建-auths-Maven-模块" class="headerlink" title="创建 auths Maven 模块"></a>创建 auths Maven 模块</h2><p>一个项目有可能有多个业务用户鉴权需求，所有的鉴权都放在这个模块中进行管理。</p>
<p>接下来我们将以创建 <code>news</code> 业务出发，目录文件结构如下：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">codezm-auths</span><br><span class="line">├── pom.xml</span><br><span class="line">└── src</span><br><span class="line">    └── main</span><br><span class="line">        ├── java</span><br><span class="line">        │&nbsp;&nbsp; └── com</span><br><span class="line">        │&nbsp;&nbsp;     └── codezm</span><br><span class="line">        │&nbsp;&nbsp;         └── auths</span><br><span class="line">        │&nbsp;&nbsp;             └── news</span><br><span class="line">        │&nbsp;&nbsp;                 ├── config</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; ├── NewsSecurityConfig.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; └── properties</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp;     └── PermitAllUrlProperties.java</span><br><span class="line">        │&nbsp;&nbsp;                 ├── constant</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; └── CacheConstants.java</span><br><span class="line">        │&nbsp;&nbsp;                 ├── domain</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; ├── NewsLoginBody.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; ├── NewsLoginUser.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; └── NewsUser.java</span><br><span class="line">        │&nbsp;&nbsp;                 ├── manager</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; ├── AsyncManager.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; └── factory</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp;     └── AsyncFactory.java</span><br><span class="line">        │&nbsp;&nbsp;                 ├── mapper</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; └── LoginUserMapper.java</span><br><span class="line">        │&nbsp;&nbsp;                 ├── security</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; ├── UserPwdAuthenticationProvider.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; ├── UserPwdAuthenticationToken.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; ├── context</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; │&nbsp;&nbsp; ├── AuthenticationContextHolder.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; │&nbsp;&nbsp; └── PermissionContextHolder.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; ├── filter</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; │&nbsp;&nbsp; └── JwtAuthenticationTokenFilter.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; └── handle</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp;     ├── AuthenticationEntryPointImpl.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp;     └── LogoutSuccessHandlerImpl.java</span><br><span class="line">        │&nbsp;&nbsp;                 ├── service</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; ├── ILoginUserService.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; ├── LoginService.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; ├── TokenService.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; ├── UserPwdServiceImpl.java</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp; └── impl</span><br><span class="line">        │&nbsp;&nbsp;                 │&nbsp;&nbsp;     └── LoginUserServiceImpl.java</span><br><span class="line">        │&nbsp;&nbsp;                 └── untils</span><br><span class="line">        │&nbsp;&nbsp;                     └── SecurityUtils.java</span><br><span class="line">        └── resources</span><br><span class="line">            └── mapper</span><br><span class="line">                └── news</span><br><span class="line">                    └── LoginUserMapper.xml</span><br></pre></td></tr></tbody></table></figure>



<p>auths/src/main/java/com/codezm/auths/news/config/NewsSecurityConfig.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.config.properties.PermitAllUrlProperties;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.security.UserPwdAuthenticationProvider;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.security.filter.JwtAuthenticationTokenFilter;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.security.handle.AuthenticationEntryPointImpl;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.security.handle.LogoutSuccessHandlerImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.http.SessionCreationPolicy;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.logout.LogoutFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * spring security配置</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//@EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true)</span></span><br><span class="line"><span class="comment">//@EnableWebSecurity</span></span><br><span class="line"><span class="meta">@Order(1)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewsSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 系统前台用户身份认证逻辑</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier("NewsUserPwdServiceImpl")</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userPwdService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 认证失败处理类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier("NewsAuthenticationEntryPointImpl")</span></span><br><span class="line">    <span class="keyword">private</span> AuthenticationEntryPointImpl unauthorizedHandler;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 退出处理类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier("NewsLogoutSuccessHandlerImpl")</span></span><br><span class="line">    <span class="keyword">private</span> LogoutSuccessHandlerImpl logoutSuccessHandler;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * token认证过滤器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier("NewsJwtAuthenticationTokenFilter")</span></span><br><span class="line">    <span class="keyword">private</span> JwtAuthenticationTokenFilter authenticationTokenFilter;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跨域过滤器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CorsFilter corsFilter;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 允许匿名访问的地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier("NewsPermitAllUrlProperties")</span></span><br><span class="line">    <span class="keyword">private</span> PermitAllUrlProperties permitAllUrl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解决 无法直接注入 AuthenticationManager</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean("NewsAuthenticationManager")</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AuthenticationManager <span class="title">authenticationManagerBean</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.authenticationManagerBean();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * anyRequest          |   匹配所有请求路径</span></span><br><span class="line"><span class="comment">     * access              |   SpringEl表达式结果为true时可以访问</span></span><br><span class="line"><span class="comment">     * anonymous           |   匿名可以访问</span></span><br><span class="line"><span class="comment">     * denyAll             |   用户不能访问</span></span><br><span class="line"><span class="comment">     * fullyAuthenticated  |   用户完全认证可以访问（非remember-me下自动登录）</span></span><br><span class="line"><span class="comment">     * hasAnyAuthority     |   如果有参数，参数表示权限，则其中任何一个权限可以访问</span></span><br><span class="line"><span class="comment">     * hasAnyRole          |   如果有参数，参数表示角色，则其中任何一个角色可以访问</span></span><br><span class="line"><span class="comment">     * hasAuthority        |   如果有参数，参数表示权限，则其权限可以访问</span></span><br><span class="line"><span class="comment">     * hasIpAddress        |   如果有参数，参数表示IP地址，如果用户IP和参数匹配，则可以访问</span></span><br><span class="line"><span class="comment">     * hasRole             |   如果有参数，参数表示角色，则其角色可以访问</span></span><br><span class="line"><span class="comment">     * permitAll           |   用户可以任意访问</span></span><br><span class="line"><span class="comment">     * rememberMe          |   允许通过remember-me登录的用户访问</span></span><br><span class="line"><span class="comment">     * authenticated       |   用户登录后可访问</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity httpSecurity)</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="comment">// 注解标记允许匿名访问的url</span></span><br><span class="line">        ExpressionUrlAuthorizationConfigurer&lt;HttpSecurity&gt;.ExpressionInterceptUrlRegistry registry = httpSecurity.authorizeRequests();</span><br><span class="line">        permitAllUrl.getUrls().forEach(url -&gt; registry.antMatchers(url).permitAll());</span><br><span class="line"></span><br><span class="line">        httpSecurity</span><br><span class="line">                .requestMatchers((request) -&gt; {</span><br><span class="line">                    request.antMatchers(<span class="string">"/news/**"</span>);</span><br><span class="line">                })</span><br><span class="line">                <span class="comment">// CSRF禁用，因为不使用session</span></span><br><span class="line">                .csrf().disable()</span><br><span class="line">                <span class="comment">// 禁用HTTP响应标头</span></span><br><span class="line">                .headers().cacheControl().disable().and()</span><br><span class="line">                <span class="comment">// 认证失败处理类</span></span><br><span class="line">                .exceptionHandling().authenticationEntryPoint(unauthorizedHandler).and()</span><br><span class="line">                <span class="comment">// 基于token，所以不需要session</span></span><br><span class="line">                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and()</span><br><span class="line">                <span class="comment">// 过滤请求</span></span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                <span class="comment">// 对于登录login 注册register 验证码captchaImage 允许匿名访问</span></span><br><span class="line">                .antMatchers(<span class="string">"/news/login"</span>, <span class="string">"/news/register"</span>, <span class="string">"/news/captchaImage"</span>).anonymous()</span><br><span class="line">                <span class="comment">// 静态资源，可匿名访问</span></span><br><span class="line"><span class="comment">//                .antMatchers(HttpMethod.GET, "/", "/*.html", "/**/*.html", "/**/*.css", "/**/*.js", "/profile/**","/static/**").permitAll()</span></span><br><span class="line"><span class="comment">//                .antMatchers("/swagger-ui.html", "/swagger-resources/**", "/webjars/**", "/*/api-docs", "/druid/**").permitAll()</span></span><br><span class="line">                <span class="comment">// 除上面外的所有请求全部需要鉴权认证</span></span><br><span class="line">                .anyRequest().authenticated()</span><br><span class="line">                .and()</span><br><span class="line">                .headers().frameOptions().disable();</span><br><span class="line">        <span class="comment">// 添加Logout filter</span></span><br><span class="line">        httpSecurity.logout().logoutUrl(<span class="string">"/news/logout"</span>).logoutSuccessHandler(logoutSuccessHandler);</span><br><span class="line">        <span class="comment">// 添加JWT filter</span></span><br><span class="line">        httpSecurity.addFilterBefore(authenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span><br><span class="line">        <span class="comment">// 添加CORS filter</span></span><br><span class="line">        httpSecurity.addFilterBefore(corsFilter, JwtAuthenticationTokenFilter.class);</span><br><span class="line">        httpSecurity.addFilterBefore(corsFilter, LogoutFilter.class);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 身份认证接口</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        UserPwdAuthenticationProvider userPwdAuthenticationProvider = <span class="keyword">new</span> UserPwdAuthenticationProvider();</span><br><span class="line">        userPwdAuthenticationProvider.setUserDetailsService(userPwdService);</span><br><span class="line">        auth.authenticationProvider(userPwdAuthenticationProvider);</span><br><span class="line">        auth.userDetailsService(userPwdService).passwordEncoder(<span class="keyword">new</span> BCryptPasswordEncoder());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/config/properties/PermitAllUrlProperties.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.config.properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.annotation.Anonymous;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.RegExUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.InitializingBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextAware;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.AnnotationUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.method.HandlerMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.RequestMappingInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置Anonymous注解允许匿名访问的url</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component("NewsPermitAllUrlProperties")</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermitAllUrlProperties</span> <span class="keyword">implements</span> <span class="title">InitializingBean</span>, <span class="title">ApplicationContextAware</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Pattern PATTERN = Pattern.compile(<span class="string">"\\{(.*?)\\}"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; urls = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String ASTERISK = <span class="string">"*"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        RequestMappingHandlerMapping mapping = applicationContext.getBean(RequestMappingHandlerMapping.class);</span><br><span class="line">        Map&lt;RequestMappingInfo, HandlerMethod&gt; map = mapping.getHandlerMethods();</span><br><span class="line"></span><br><span class="line">        map.keySet().forEach(info -&gt; {</span><br><span class="line">            HandlerMethod handlerMethod = map.get(info);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取方法上边的注解 替代path variable 为 *</span></span><br><span class="line">            Anonymous method = AnnotationUtils.findAnnotation(handlerMethod.getMethod(), Anonymous.class);</span><br><span class="line">            Optional.ofNullable(method).ifPresent(anonymous -&gt; Objects.requireNonNull(info.getPatternsCondition().getPatterns())</span><br><span class="line">                    .forEach(url -&gt; urls.add(RegExUtils.replaceAll(url, PATTERN, ASTERISK))));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取类上边的注解, 替代path variable 为 *</span></span><br><span class="line">            Anonymous controller = AnnotationUtils.findAnnotation(handlerMethod.getBeanType(), Anonymous.class);</span><br><span class="line">            Optional.ofNullable(controller).ifPresent(anonymous -&gt; Objects.requireNonNull(info.getPatternsCondition().getPatterns())</span><br><span class="line">                    .forEach(url -&gt; urls.add(RegExUtils.replaceAll(url, PATTERN, ASTERISK))));</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext context)</span> <span class="keyword">throws</span> BeansException</span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.applicationContext = context;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getUrls</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> urls;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUrls</span><span class="params">(List&lt;String&gt; urls)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.urls = urls;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/constant/CacheConstants.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.constant;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 缓存的key 常量</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CacheConstants</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录用户 redis key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String LOGIN_TOKEN_KEY = <span class="string">"login_tokens_news:"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码 redis key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CAPTCHA_CODE_KEY = <span class="string">"captcha_codes:"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 参数管理 cache key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SYS_CONFIG_KEY = <span class="string">"sys_config:"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字典管理 cache key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SYS_DICT_KEY = <span class="string">"sys_dict:"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 防重提交 redis key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String REPEAT_SUBMIT_KEY = <span class="string">"repeat_submit:"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 限流 redis key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String RATE_LIMIT_KEY = <span class="string">"rate_limit:"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录账户密码错误次数 redis key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PWD_ERR_CNT_KEY = <span class="string">"pwd_err_cnt:"</span>;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/domain/NewsLoginBody.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.domain;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户登录对象</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewsLoginBody</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 唯一标识</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String uuid;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCode</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(String code)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUuid</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> uuid;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUuid</span><span class="params">(String uuid)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.uuid = uuid;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/domain/NewsLoginUser.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson2.annotation.JSONField;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.domain.NewsUser;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录用户身份权限</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewsLoginUser</span> <span class="keyword">implements</span> <span class="title">UserDetails</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long userId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 部门ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long deptId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * openId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String openId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户唯一标识</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String token;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long loginTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过期时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long expireTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录IP地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String ipaddr;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录地点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String loginLocation;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 浏览器类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String browser;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作系统</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String os;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 权限列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; permissions;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> NewsUser newsUser;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NewsLoginUser</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NewsLoginUser</span><span class="params">(NewsUser newsUser, Set&lt;String&gt; permissions)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.newsUser = newsUser;</span><br><span class="line">        <span class="keyword">this</span>.permissions = permissions;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NewsLoginUser</span><span class="params">(Long userId, Long deptId, NewsUser newsUser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.userId = userId;</span><br><span class="line">        <span class="keyword">this</span>.deptId = deptId;</span><br><span class="line">        <span class="keyword">this</span>.newsUser = newsUser;</span><br><span class="line">        <span class="comment">//this.permissions = permissions;</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getUserId</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> userId;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserId</span><span class="params">(Long userId)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.userId = userId;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getDeptId</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> deptId;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDeptId</span><span class="params">(Long deptId)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.deptId = deptId;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getToken</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setToken</span><span class="params">(String token)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.token = token;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getOpenId</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> openId;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOpenId</span><span class="params">(String openId)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.openId = openId;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@JSONField(serialize = false)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> newsUser.getPassword();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> newsUser.getUserName();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 账户是否未过期,过期无法验证</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JSONField(serialize = false)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAccountNonExpired</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定用户是否解锁,锁定的用户无法进行身份验证</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JSONField(serialize = false)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAccountNonLocked</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指示是否已过期的用户的凭据(密码),过期的凭据防止认证</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JSONField(serialize = false)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isCredentialsNonExpired</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否可用 ,禁用的用户不能身份验证</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JSONField(serialize = false)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEnabled</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getLoginTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginTime;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLoginTime</span><span class="params">(Long loginTime)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.loginTime = loginTime;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getIpaddr</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> ipaddr;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIpaddr</span><span class="params">(String ipaddr)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.ipaddr = ipaddr;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLoginLocation</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginLocation;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLoginLocation</span><span class="params">(String loginLocation)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.loginLocation = loginLocation;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBrowser</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> browser;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBrowser</span><span class="params">(String browser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.browser = browser;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getOs</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> os;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOs</span><span class="params">(String os)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.os = os;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getExpireTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> expireTime;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExpireTime</span><span class="params">(Long expireTime)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.expireTime = expireTime;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getPermissions</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> permissions;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPermissions</span><span class="params">(Set&lt;String&gt; permissions)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.permissions = permissions;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> NewsUser <span class="title">getUser</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> newsUser;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(NewsUser newsUser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.newsUser = newsUser;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Collection&lt;? extends GrantedAuthority&gt; getAuthorities()</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/domain/NewsUser.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.BaseEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.builder.ToStringBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.builder.ToStringStyle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户信息对象 news_user</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2024-03-05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewsUser</span> <span class="keyword">extends</span> <span class="title">BaseEntity</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 用户ID */</span></span><br><span class="line">    <span class="keyword">private</span> Long userId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 部门ID */</span></span><br><span class="line"><span class="comment">//    @Excel(name = "部门ID")</span></span><br><span class="line">    <span class="keyword">private</span> Long deptId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 用户账号 */</span></span><br><span class="line"><span class="comment">//    @Excel(name = "用户账号")</span></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 用户昵称 */</span></span><br><span class="line"><span class="comment">//    @Excel(name = "用户昵称")</span></span><br><span class="line">    <span class="keyword">private</span> String nickName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 用户类型（00系统用户） */</span></span><br><span class="line"><span class="comment">//    @Excel(name = "用户类型", readConverterExp = "0=0系统用户")</span></span><br><span class="line">    <span class="keyword">private</span> String userType;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 用户邮箱 */</span></span><br><span class="line"><span class="comment">//    @Excel(name = "用户邮箱")</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 手机号码 */</span></span><br><span class="line"><span class="comment">//    @Excel(name = "手机号码")</span></span><br><span class="line">    <span class="keyword">private</span> String phonenumber;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 用户性别（0男 1女 2未知） */</span></span><br><span class="line"><span class="comment">//    @Excel(name = "用户性别", readConverterExp = "0=男,1=女,2=未知")</span></span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 头像地址 */</span></span><br><span class="line"><span class="comment">//    @Excel(name = "头像地址")</span></span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 密码 */</span></span><br><span class="line"><span class="comment">//    @Excel(name = "密码")</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 帐号状态（0正常 1停用） */</span></span><br><span class="line"><span class="comment">//    @Excel(name = "帐号状态", readConverterExp = "0=正常,1=停用")</span></span><br><span class="line">    <span class="keyword">private</span> String status;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 删除标志（0代表存在 2代表删除） */</span></span><br><span class="line">    <span class="keyword">private</span> String delFlag;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 最后登录IP */</span></span><br><span class="line"><span class="comment">//    @Excel(name = "最后登录IP")</span></span><br><span class="line">    <span class="keyword">private</span> String loginIp;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 最后登录时间 */</span></span><br><span class="line"><span class="comment">//    @JsonFormat(pattern = "yyyy-MM-dd")</span></span><br><span class="line"><span class="comment">//    @Excel(name = "最后登录时间", width = 30, dateFormat = "yyyy-MM-dd")</span></span><br><span class="line">    <span class="keyword">private</span> Date loginDate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserId</span><span class="params">(Long userId)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.userId = userId;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getUserId</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> userId;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDeptId</span><span class="params">(Long deptId)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.deptId = deptId;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getDeptId</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> deptId;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNickName</span><span class="params">(String nickName)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.nickName = nickName;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getNickName</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> nickName;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserType</span><span class="params">(String userType)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.userType = userType;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserType</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> userType;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPhonenumber</span><span class="params">(String phonenumber)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.phonenumber = phonenumber;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPhonenumber</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> phonenumber;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAvatar</span><span class="params">(String avatar)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.avatar = avatar;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAvatar</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> avatar;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatus</span><span class="params">(String status)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.status = status;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getStatus</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDelFlag</span><span class="params">(String delFlag)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.delFlag = delFlag;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDelFlag</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> delFlag;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLoginIp</span><span class="params">(String loginIp)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.loginIp = loginIp;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLoginIp</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginIp;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLoginDate</span><span class="params">(Date loginDate)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">this</span>.loginDate = loginDate;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getLoginDate</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginDate;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ToStringBuilder(<span class="keyword">this</span>,ToStringStyle.MULTI_LINE_STYLE)</span><br><span class="line">            .append(<span class="string">"userId"</span>, getUserId())</span><br><span class="line">            .append(<span class="string">"deptId"</span>, getDeptId())</span><br><span class="line">            .append(<span class="string">"userName"</span>, getUserName())</span><br><span class="line">            .append(<span class="string">"nickName"</span>, getNickName())</span><br><span class="line">            .append(<span class="string">"userType"</span>, getUserType())</span><br><span class="line">            .append(<span class="string">"email"</span>, getEmail())</span><br><span class="line">            .append(<span class="string">"phonenumber"</span>, getPhonenumber())</span><br><span class="line">            .append(<span class="string">"sex"</span>, getSex())</span><br><span class="line">            .append(<span class="string">"avatar"</span>, getAvatar())</span><br><span class="line">            .append(<span class="string">"password"</span>, getPassword())</span><br><span class="line">            .append(<span class="string">"status"</span>, getStatus())</span><br><span class="line">            .append(<span class="string">"delFlag"</span>, getDelFlag())</span><br><span class="line">            .append(<span class="string">"loginIp"</span>, getLoginIp())</span><br><span class="line">            .append(<span class="string">"loginDate"</span>, getLoginDate())</span><br><span class="line">            .append(<span class="string">"createBy"</span>, getCreateBy())</span><br><span class="line">            .append(<span class="string">"createTime"</span>, getCreateTime())</span><br><span class="line">            .append(<span class="string">"updateBy"</span>, getUpdateBy())</span><br><span class="line">            .append(<span class="string">"updateTime"</span>, getUpdateTime())</span><br><span class="line">            .append(<span class="string">"remark"</span>, getRemark())</span><br><span class="line">            .toString();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/manager/factory/AsyncFactory.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.manager.factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.constant.Constants;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.LogUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.ServletUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.ip.AddressUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.ip.IpUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.spring.SpringUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.system.domain.SysLogininfor;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.system.domain.SysOperLog;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.system.service.ISysLogininforService;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.system.service.ISysOperLogService;</span><br><span class="line"><span class="keyword">import</span> eu.bitwalker.useragentutils.UserAgent;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.TimerTask;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异步工厂（产生任务用）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncFactory</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger sys_user_logger = LoggerFactory.getLogger(<span class="string">"sys-user"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 记录登录信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> status 状态</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message 消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args 列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 任务task</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TimerTask <span class="title">recordLogininfor</span><span class="params">(<span class="keyword">final</span> String username, <span class="keyword">final</span> String status, <span class="keyword">final</span> String message,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">final</span> Object... args)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">final</span> UserAgent userAgent = UserAgent.parseUserAgentString(ServletUtils.getRequest().getHeader(<span class="string">"User-Agent"</span>));</span><br><span class="line">        <span class="keyword">final</span> String ip = IpUtils.getIpAddr(ServletUtils.getRequest());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> TimerTask()</span><br><span class="line">        {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">            </span>{</span><br><span class="line">                String address = AddressUtils.getRealAddressByIP(ip);</span><br><span class="line">                StringBuilder s = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                s.append(LogUtils.getBlock(ip));</span><br><span class="line">                s.append(address);</span><br><span class="line">                s.append(LogUtils.getBlock(username));</span><br><span class="line">                s.append(LogUtils.getBlock(status));</span><br><span class="line">                s.append(LogUtils.getBlock(message));</span><br><span class="line">                <span class="comment">// 打印信息到日志</span></span><br><span class="line">                sys_user_logger.info(s.toString(), args);</span><br><span class="line">                <span class="comment">// 获取客户端操作系统</span></span><br><span class="line">                String os = userAgent.getOperatingSystem().getName();</span><br><span class="line">                <span class="comment">// 获取客户端浏览器</span></span><br><span class="line">                String browser = userAgent.getBrowser().getName();</span><br><span class="line">                <span class="comment">// 封装对象</span></span><br><span class="line">                SysLogininfor logininfor = <span class="keyword">new</span> SysLogininfor();</span><br><span class="line">                logininfor.setUserName(username);</span><br><span class="line">                logininfor.setIpaddr(ip);</span><br><span class="line">                logininfor.setLoginLocation(address);</span><br><span class="line">                logininfor.setBrowser(browser);</span><br><span class="line">                logininfor.setOs(os);</span><br><span class="line">                logininfor.setMsg(message);</span><br><span class="line">                <span class="comment">// 日志状态</span></span><br><span class="line">                <span class="keyword">if</span> (StringUtils.equalsAny(status, Constants.LOGIN_SUCCESS, Constants.LOGOUT, Constants.REGISTER))</span><br><span class="line">                {</span><br><span class="line">                    logininfor.setStatus(Constants.SUCCESS);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (Constants.LOGIN_FAIL.equals(status))</span><br><span class="line">                {</span><br><span class="line">                    logininfor.setStatus(Constants.FAIL);</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">// 插入数据</span></span><br><span class="line">                SpringUtils.getBean(ISysLogininforService.class).insertLogininfor(logininfor);</span><br><span class="line">            }</span><br><span class="line">        };</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作日志记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> operLog 操作日志信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 任务task</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TimerTask <span class="title">recordOper</span><span class="params">(<span class="keyword">final</span> SysOperLog operLog)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> TimerTask()</span><br><span class="line">        {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">            </span>{</span><br><span class="line">                <span class="comment">// 远程查询操作地点</span></span><br><span class="line">                operLog.setOperLocation(AddressUtils.getRealAddressByIP(operLog.getOperIp()));</span><br><span class="line">                SpringUtils.getBean(ISysOperLogService.class).insertOperlog(operLog);</span><br><span class="line">            }</span><br><span class="line">        };</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/manager/AsyncManager.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.manager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.Threads;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.spring.SpringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.TimerTask;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ScheduledExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异步任务管理器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncManager</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作延迟10毫秒</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> OPERATE_DELAY_TIME = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 异步操作任务调度线程池</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> ScheduledExecutorService executor = SpringUtils.getBean(<span class="string">"scheduledExecutorService"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 单例模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">AsyncManager</span><span class="params">()</span></span>{}</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> AsyncManager me = <span class="keyword">new</span> AsyncManager();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> AsyncManager <span class="title">me</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> me;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行任务</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> task 任务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(TimerTask task)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        executor.schedule(task, OPERATE_DELAY_TIME, TimeUnit.MILLISECONDS);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 停止任务线程池</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shutdown</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        Threads.shutdownAndAwaitTermination(executor);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/mapper/LoginUserMapper.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.domain.NewsUser;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户信息Mapper接口</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2024-03-05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LoginUserMapper</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 用户信息主键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> NewsUser <span class="title">selectUserByUserId</span><span class="params">(Long userId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userName 用户信息主键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> NewsUser <span class="title">selectUserByUserName</span><span class="params">(String userName)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phone 用户信息主键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> NewsUser <span class="title">selectUserByPhone</span><span class="params">(String phone)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户信息列表</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newsUser 用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;NewsUser&gt; <span class="title">selectUserList</span><span class="params">(NewsUser newsUser)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 新增用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * @param newsUser 用户信息</span></span><br><span class="line"><span class="comment">     * @return 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insertUser</span><span class="params">(NewsUser newsUser)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newsUser 用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(NewsUser newsUser)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 用户信息主键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteUserByUserId</span><span class="params">(Long userId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量删除用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userIds 需要删除的数据主键集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteUserByUserIds</span><span class="params">(Long[] userIds)</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/security/context/AuthenticationContextHolder.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.security.context;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 身份验证信息</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthenticationContextHolder</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;Authentication&gt; contextHolder = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Authentication <span class="title">getContext</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> contextHolder.get();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setContext</span><span class="params">(Authentication context)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        contextHolder.set(context);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">clearContext</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        contextHolder.remove();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/security/context/PermissionContextHolder.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.security.context;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 身份验证信息</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthenticationContextHolder</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;Authentication&gt; contextHolder = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Authentication <span class="title">getContext</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> contextHolder.get();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setContext</span><span class="params">(Authentication context)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        contextHolder.set(context);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">clearContext</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        contextHolder.remove();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/security/filter/JwtAuthenticationTokenFilter.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.security.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.domain.NewsLoginUser;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.service.TokenService;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.untils.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.WebAuthenticationDetailsSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.OncePerRequestFilter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * token过滤器 验证token有效性</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component("NewsJwtAuthenticationTokenFilter")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtAuthenticationTokenFilter</span> <span class="keyword">extends</span> <span class="title">OncePerRequestFilter</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TokenService tokenService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doFilterInternal</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException</span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        NewsLoginUser newsLoginUser = tokenService.getLoginUser(request);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotNull(newsLoginUser) &amp;&amp; StringUtils.isNull(SecurityUtils.getAuthentication()))</span><br><span class="line">        {</span><br><span class="line">            tokenService.verifyToken(newsLoginUser);</span><br><span class="line">            UsernamePasswordAuthenticationToken authenticationToken = <span class="keyword">new</span> UsernamePasswordAuthenticationToken(newsLoginUser, <span class="keyword">null</span>, newsLoginUser.getAuthorities());</span><br><span class="line">            authenticationToken.setDetails(<span class="keyword">new</span> WebAuthenticationDetailsSource().buildDetails(request));</span><br><span class="line">            SecurityContextHolder.getContext().setAuthentication(authenticationToken);</span><br><span class="line">        }</span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/security/handle/AuthenticationEntryPointImpl.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.security.handle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson2.JSON;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.constant.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.AjaxResult;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.ServletUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.AuthenticationEntryPoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 认证失败处理类 返回未授权</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component("NewsAuthenticationEntryPointImpl")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthenticationEntryPointImpl</span> <span class="keyword">implements</span> <span class="title">AuthenticationEntryPoint</span>, <span class="title">Serializable</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">8970718410437077606L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">commence</span><span class="params">(HttpServletRequest request, HttpServletResponse response, AuthenticationException e)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">int</span> code = HttpStatus.UNAUTHORIZED;</span><br><span class="line">        String msg = StringUtils.format(<span class="string">"请求访问：{}，认证失败，无法 访问系统资源"</span>, request.getRequestURI());</span><br><span class="line">        ServletUtils.renderString(response, JSON.toJSONString(AjaxResult.error(code, msg)));</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/security/handle/LogoutSuccessHandlerImpl.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.security.handle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson2.JSON;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.domain.NewsLoginUser;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.manager.AsyncManager;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.manager.factory.AsyncFactory;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.service.TokenService;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.constant.Constants;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.AjaxResult;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.ServletUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.logout.LogoutSuccessHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义退出处理类 返回成功</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component("NewsLogoutSuccessHandlerImpl")</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutSuccessHandlerImpl</span> <span class="keyword">implements</span> <span class="title">LogoutSuccessHandler</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TokenService tokenService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 退出处理</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLogoutSuccess</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Authentication authentication)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException, ServletException</span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        NewsLoginUser newsLoginUser = tokenService.getLoginUser(request);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotNull(newsLoginUser))</span><br><span class="line">        {</span><br><span class="line">            String userName = newsLoginUser.getUsername();</span><br><span class="line">            <span class="comment">// 删除用户缓存记录</span></span><br><span class="line">            tokenService.delLoginUser(newsLoginUser.getToken());</span><br><span class="line">            <span class="comment">// 记录用户退出日志</span></span><br><span class="line">            AsyncManager.me().execute(AsyncFactory.recordLogininfor(userName, Constants.LOGOUT, <span class="string">"退出成功"</span>));</span><br><span class="line">        }</span><br><span class="line">        ServletUtils.renderString(response, JSON.toJSONString(AjaxResult.success(<span class="string">"退出成功"</span>)));</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/security/UserPwdAuthenticationProvider.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AuthenticationProvider;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserPwdAuthenticationProvider</span> <span class="keyword">implements</span> <span class="title">AuthenticationProvider</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Authentication <span class="title">authenticate</span><span class="params">(Authentication authentication)</span> <span class="keyword">throws</span> AuthenticationException </span>{</span><br><span class="line">        UserPwdAuthenticationToken authenticationToken = (UserPwdAuthenticationToken) authentication;</span><br><span class="line"></span><br><span class="line">        String userName = (String) authenticationToken.getPrincipal();</span><br><span class="line"></span><br><span class="line">        UserDetails userDetails = userDetailsService.loadUserByUsername(userName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 此时鉴权成功后，应当重新 new 一个拥有鉴权的 authenticationResult 返回</span></span><br><span class="line">        UserPwdAuthenticationToken authenticationResult = <span class="keyword">new</span> UserPwdAuthenticationToken(userDetails, userDetails.getAuthorities());</span><br><span class="line"></span><br><span class="line">        authenticationResult.setDetails(authenticationToken.getDetails());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> authenticationResult;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supports</span><span class="params">(Class&lt;?&gt; authentication)</span> </span>{</span><br><span class="line">        <span class="comment">// 判断 authentication 是不是 SmsCodeAuthenticationToken 的子类或子接口</span></span><br><span class="line">        <span class="keyword">return</span> UserPwdAuthenticationToken.class.isAssignableFrom(authentication);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetailsService <span class="title">getUserDetailsService</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> userDetailsService;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserDetailsService</span><span class="params">(UserDetailsService userDetailsService)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.userDetailsService = userDetailsService;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/security/UserPwdAuthenticationToken.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AbstractAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.SpringSecurityCoreVersion;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserPwdAuthenticationToken</span> <span class="keyword">extends</span> <span class="title">AbstractAuthenticationToken</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在 UsernamePasswordAuthenticationToken 中该字段代表登录的用户名，</span></span><br><span class="line"><span class="comment">     * 在这里就代表登录的手机号码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Object principal;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Object credentials;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构建一个没有鉴权的 SmsCodeAuthenticationToken</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserPwdAuthenticationToken</span><span class="params">(Object principal, Object credentials)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>(<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">this</span>.principal = principal;</span><br><span class="line">        <span class="keyword">this</span>.credentials = credentials;</span><br><span class="line">        setAuthenticated(<span class="keyword">false</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构建拥有鉴权的 SmsCodeAuthenticationToken</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserPwdAuthenticationToken</span><span class="params">(Object principal, Object credentials,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      Collection&lt;? extends GrantedAuthority&gt; authorities)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>(authorities);</span><br><span class="line">        <span class="keyword">this</span>.principal = principal;</span><br><span class="line">        <span class="keyword">this</span>.credentials = credentials;</span><br><span class="line">        <span class="keyword">super</span>.setAuthenticated(<span class="keyword">true</span>); <span class="comment">// must use super, as we override</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getCredentials</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.credentials;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getPrincipal</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.principal;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAuthenticated</span><span class="params">(<span class="keyword">boolean</span> isAuthenticated)</span> <span class="keyword">throws</span> IllegalArgumentException </span>{</span><br><span class="line">        Assert.isTrue(!isAuthenticated,</span><br><span class="line">                <span class="string">"Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead"</span>);</span><br><span class="line">        <span class="keyword">super</span>.setAuthenticated(<span class="keyword">false</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eraseCredentials</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.eraseCredentials();</span><br><span class="line">        <span class="keyword">this</span>.credentials = <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>



<p>auths/src/main/java/com/codezm/auths/news/service/impl/LoginUserServiceImpl.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.domain.NewsUser;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.mapper.LoginUserMapper;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.service.ILoginUserService;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.service.TokenService;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.DateUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户信息Service业务层处理</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2024-03-05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginUserServiceImpl</span> <span class="keyword">implements</span> <span class="title">ILoginUserService</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginUserMapper loginUserMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TokenService tokenService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 用户信息主键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> NewsUser <span class="title">selectUserByUserId</span><span class="params">(Long userId)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.selectUserByUserId(userId);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户信息列表</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newsUser 用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;NewsUser&gt; <span class="title">selectUserList</span><span class="params">(NewsUser newsUser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.selectUserList(newsUser);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过用户名查询用户</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userName 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户对象信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> NewsUser <span class="title">selectUserByUserName</span><span class="params">(String userName)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.selectUserByUserName(userName);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newsUser 用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insertUser</span><span class="params">(NewsUser newsUser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        newsUser.setCreateTime(DateUtils.getNowDate());</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.insertUser(newsUser);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newsUser 用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(NewsUser newsUser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        newsUser.setUpdateTime(DateUtils.getNowDate());</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.updateUser(newsUser);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量删除用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userIds 需要删除的用户信息主键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteUserByUserIds</span><span class="params">(Long[] userIds)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.deleteUserByUserIds(userIds);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除用户信息信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 用户信息主键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteUserByUserId</span><span class="params">(Long userId)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.deleteUserByUserId(userId);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/service/ILoginUserService.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.domain.NewsUser;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.mapper.LoginUserMapper;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.service.ILoginUserService;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.service.TokenService;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.DateUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户信息Service业务层处理</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2024-03-05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginUserServiceImpl</span> <span class="keyword">implements</span> <span class="title">ILoginUserService</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginUserMapper loginUserMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TokenService tokenService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 用户信息主键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> NewsUser <span class="title">selectUserByUserId</span><span class="params">(Long userId)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.selectUserByUserId(userId);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户信息列表</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newsUser 用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;NewsUser&gt; <span class="title">selectUserList</span><span class="params">(NewsUser newsUser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.selectUserList(newsUser);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过用户名查询用户</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userName 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户对象信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> NewsUser <span class="title">selectUserByUserName</span><span class="params">(String userName)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.selectUserByUserName(userName);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newsUser 用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insertUser</span><span class="params">(NewsUser newsUser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        newsUser.setCreateTime(DateUtils.getNowDate());</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.insertUser(newsUser);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newsUser 用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(NewsUser newsUser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        newsUser.setUpdateTime(DateUtils.getNowDate());</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.updateUser(newsUser);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量删除用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userIds 需要删除的用户信息主键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteUserByUserIds</span><span class="params">(Long[] userIds)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.deleteUserByUserIds(userIds);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除用户信息信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 用户信息主键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteUserByUserId</span><span class="params">(Long userId)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> loginUserMapper.deleteUserByUserId(userId);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/service/LoginService.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.constant.CacheConstants;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.domain.NewsUser;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.domain.NewsLoginUser;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.manager.AsyncManager;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.manager.factory.AsyncFactory;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.security.context.AuthenticationContextHolder;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.constant.Constants;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.constant.UserConstants;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.redis.RedisCache;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.exception.ServiceException;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.exception.user.*;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.DateUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.ServletUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.ip.IpUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.system.service.ISysConfigService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.BadCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.MessageUtils;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component("NewsLoginService")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginService</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier("NewsTokenService")</span></span><br><span class="line">    <span class="keyword">private</span> TokenService tokenService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ISysConfigService configService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier("NewsAuthenticationManager")</span></span><br><span class="line">    <span class="keyword">private</span> AuthenticationManager authenticationManager;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisCache redisCache;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ILoginUserService loginUserService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录验证</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code 验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uuid 唯一标识</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String username, String password, String code, String uuid)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="comment">// 验证码校验</span></span><br><span class="line">        validateCaptcha(username, code, uuid);</span><br><span class="line">        <span class="comment">// 登录前置校验</span></span><br><span class="line">        loginPreCheck(username, password);</span><br><span class="line">        <span class="comment">// 用户验证</span></span><br><span class="line">        Authentication authentication = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        {</span><br><span class="line">            UsernamePasswordAuthenticationToken authenticationToken = <span class="keyword">new</span> UsernamePasswordAuthenticationToken(username, password);</span><br><span class="line">            AuthenticationContextHolder.setContext(authenticationToken);</span><br><span class="line">            <span class="comment">// 该方法会去调用UserDetailsServiceImpl.loadUserByUsername</span></span><br><span class="line">            authentication = authenticationManager.authenticate(authenticationToken);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (e <span class="keyword">instanceof</span> BadCredentialsException)</span><br><span class="line">            {</span><br><span class="line">                AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">"user.password.not.match"</span>)));</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> UserPasswordNotMatchException();</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, e.getMessage()));</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(e.getMessage());</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">finally</span></span><br><span class="line">        {</span><br><span class="line">            AuthenticationContextHolder.clearContext();</span><br><span class="line">        }</span><br><span class="line">        AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_SUCCESS, MessageUtils.message(<span class="string">"user.login.success"</span>)));</span><br><span class="line">        NewsLoginUser newsLoginUser = (NewsLoginUser) authentication.getPrincipal();</span><br><span class="line">        recordLoginInfo(newsLoginUser.getUserId());</span><br><span class="line">        <span class="comment">// 生成token</span></span><br><span class="line">        <span class="keyword">return</span> tokenService.createToken(newsLoginUser);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验验证码</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code 验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uuid 唯一标识</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">validateCaptcha</span><span class="params">(String username, String code, String uuid)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">boolean</span> captchaEnabled = configService.selectCaptchaOnOff();</span><br><span class="line">        <span class="keyword">if</span> (captchaEnabled)</span><br><span class="line">        {</span><br><span class="line">            String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + StringUtils.nvl(uuid, <span class="string">""</span>);</span><br><span class="line">            String captcha = redisCache.getCacheObject(verifyKey);</span><br><span class="line">            redisCache.deleteObject(verifyKey);</span><br><span class="line">            <span class="keyword">if</span> (captcha == <span class="keyword">null</span>)</span><br><span class="line">            {</span><br><span class="line">                AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">"user.jcaptcha.expire"</span>)));</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> CaptchaExpireException();</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (!code.equalsIgnoreCase(captcha))</span><br><span class="line">            {</span><br><span class="line">                AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">"user.jcaptcha.error"</span>)));</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> CaptchaException();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录前置校验</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 用户密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loginPreCheck</span><span class="params">(String username, String password)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="comment">// 用户名或密码为空 错误</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(username) || StringUtils.isEmpty(password))</span><br><span class="line">        {</span><br><span class="line">            AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">"not.null"</span>)));</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UserNotExistsException();</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 密码如果不在指定范围内 错误</span></span><br><span class="line">        <span class="keyword">if</span> (password.length() &lt; UserConstants.PASSWORD_MIN_LENGTH</span><br><span class="line">                || password.length() &gt; UserConstants.PASSWORD_MAX_LENGTH)</span><br><span class="line">        {</span><br><span class="line">            AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">"user.password.not.match"</span>)));</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UserPasswordNotMatchException();</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 用户名不在指定范围内 错误</span></span><br><span class="line">        <span class="keyword">if</span> (username.length() &lt; UserConstants.USERNAME_MIN_LENGTH</span><br><span class="line">                || username.length() &gt; UserConstants.USERNAME_MAX_LENGTH)</span><br><span class="line">        {</span><br><span class="line">            AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">"user.password.not.match"</span>)));</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UserPasswordNotMatchException();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 记录登录信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 用户ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">recordLoginInfo</span><span class="params">(Long userId)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        NewsUser newsUser = <span class="keyword">new</span> NewsUser();</span><br><span class="line">        newsUser.setUserId(userId);</span><br><span class="line">        newsUser.setLoginIp(IpUtils.getIpAddr(ServletUtils.getRequest()));</span><br><span class="line">        newsUser.setLoginDate(DateUtils.getNowDate());</span><br><span class="line">        loginUserService.updateUser(newsUser);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/service/TokenService.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.constant.CacheConstants;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.domain.NewsLoginUser;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.constant.Constants;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.redis.RedisCache;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.ServletUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.ip.AddressUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.ip.IpUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.uuid.IdUtils;</span><br><span class="line"><span class="keyword">import</span> eu.bitwalker.useragentutils.UserAgent;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Claims;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Jwts;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.SignatureAlgorithm;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * token验证处理</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component("NewsTokenService")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TokenService</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="comment">// 令牌自定义标识</span></span><br><span class="line">    <span class="meta">@Value("${news.token.header}")</span></span><br><span class="line">    <span class="keyword">private</span> String header;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 令牌秘钥</span></span><br><span class="line">    <span class="meta">@Value("${news.token.secret}")</span></span><br><span class="line">    <span class="keyword">private</span> String secret;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 令牌有效期（默认30分钟）</span></span><br><span class="line">    <span class="meta">@Value("${news.token.expireTime}")</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> expireTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> MILLIS_SECOND = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> MILLIS_MINUTE = <span class="number">60</span> * MILLIS_SECOND;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Long MILLIS_MINUTE_TEN = <span class="number">20</span> * <span class="number">60</span> * <span class="number">1000L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisCache redisCache;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取用户身份信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> NewsLoginUser <span class="title">getLoginUser</span><span class="params">(HttpServletRequest request)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        String token = getToken(request);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(token))</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                Claims claims = parseToken(token);</span><br><span class="line">                <span class="comment">// 解析对应的权限以及用户信息</span></span><br><span class="line">                String uuid = (String) claims.get(Constants.LOGIN_USER_KEY);</span><br><span class="line">                String userKey = getTokenKey(uuid);</span><br><span class="line">                NewsLoginUser user = redisCache.getCacheObject(userKey);</span><br><span class="line">                <span class="keyword">return</span> user;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            {</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置用户身份信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLoginUser</span><span class="params">(NewsLoginUser newsLoginUser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotNull(newsLoginUser) &amp;&amp; StringUtils.isNotEmpty(newsLoginUser.getToken()))</span><br><span class="line">        {</span><br><span class="line">            refreshToken(newsLoginUser);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除用户身份信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delLoginUser</span><span class="params">(String token)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(token))</span><br><span class="line">        {</span><br><span class="line">            String userKey = getTokenKey(token);</span><br><span class="line">            redisCache.deleteObject(userKey);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建令牌</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newsLoginUser 用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 令牌</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">createToken</span><span class="params">(NewsLoginUser newsLoginUser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        String token = IdUtils.fastUUID();</span><br><span class="line">        newsLoginUser.setToken(token);</span><br><span class="line">        setUserAgent(newsLoginUser);</span><br><span class="line">        refreshToken(newsLoginUser);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; claims = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        claims.put(Constants.LOGIN_USER_KEY, token);</span><br><span class="line">        <span class="keyword">return</span> createToken(claims);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证令牌有效期，相差不足20分钟，自动刷新缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newsLoginUser</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 令牌</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">verifyToken</span><span class="params">(NewsLoginUser newsLoginUser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">long</span> expireTime = newsLoginUser.getExpireTime();</span><br><span class="line">        <span class="keyword">long</span> currentTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">if</span> (expireTime - currentTime &lt;= MILLIS_MINUTE_TEN)</span><br><span class="line">        {</span><br><span class="line">            refreshToken(newsLoginUser);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 刷新令牌有效期</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newsLoginUser 登录信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">refreshToken</span><span class="params">(NewsLoginUser newsLoginUser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        newsLoginUser.setLoginTime(System.currentTimeMillis());</span><br><span class="line">        newsLoginUser.setExpireTime(newsLoginUser.getLoginTime() + expireTime * MILLIS_MINUTE);</span><br><span class="line">        <span class="comment">// 根据uuid将loginUser缓存</span></span><br><span class="line">        String userKey = getTokenKey(newsLoginUser.getToken());</span><br><span class="line">        redisCache.setCacheObject(userKey, newsLoginUser, expireTime, TimeUnit.MINUTES);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置用户代理信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newsLoginUser 登录信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserAgent</span><span class="params">(NewsLoginUser newsLoginUser)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        UserAgent userAgent = UserAgent.parseUserAgentString(ServletUtils.getRequest().getHeader(<span class="string">"User-Agent"</span>));</span><br><span class="line">        String ip = IpUtils.getIpAddr(ServletUtils.getRequest());</span><br><span class="line">        newsLoginUser.setIpaddr(ip);</span><br><span class="line">        newsLoginUser.setLoginLocation(AddressUtils.getRealAddressByIP(ip));</span><br><span class="line">        newsLoginUser.setBrowser(userAgent.getBrowser().getName());</span><br><span class="line">        newsLoginUser.setOs(userAgent.getOperatingSystem().getName());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从数据声明生成令牌</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> claims 数据声明</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 令牌</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">createToken</span><span class="params">(Map&lt;String, Object&gt; claims)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        String token = Jwts.builder()</span><br><span class="line">                .setClaims(claims)</span><br><span class="line">                .signWith(SignatureAlgorithm.HS512, secret).compact();</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从令牌中获取数据声明</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token 令牌</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 数据声明</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Claims <span class="title">parseToken</span><span class="params">(String token)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> Jwts.parser()</span><br><span class="line">                .setSigningKey(secret)</span><br><span class="line">                .parseClaimsJws(token)</span><br><span class="line">                .getBody();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从令牌中获取用户名</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token 令牌</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsernameFromToken</span><span class="params">(String token)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        Claims claims = parseToken(token);</span><br><span class="line">        <span class="keyword">return</span> claims.getSubject();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取请求token</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getToken</span><span class="params">(HttpServletRequest request)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        String token = request.getHeader(header);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(token) &amp;&amp; token.startsWith(Constants.TOKEN_PREFIX))</span><br><span class="line">        {</span><br><span class="line">            token = token.replace(Constants.TOKEN_PREFIX, <span class="string">""</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getTokenKey</span><span class="params">(String uuid)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> CacheConstants.LOGIN_TOKEN_KEY + uuid;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/service/UserPwdServiceImpl.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.domain.NewsUser;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.domain.NewsLoginUser;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.enums.UserStatus;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.exception.ServiceException;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service("NewsUserPwdServiceImpl")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserPwdServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(UserPwdServiceImpl.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ILoginUserService loginUserService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>{</span><br><span class="line">        NewsUser newsUser = loginUserService.selectUserByUserName(username);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNull(newsUser)) {</span><br><span class="line">            log.info(<span class="string">"登录用户：{} 不存在."</span>, username);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(<span class="string">"登录用户："</span> + username + <span class="string">" 不存在"</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (UserStatus.DELETED.getCode().equals(newsUser.getDelFlag())) {</span><br><span class="line">            log.info(<span class="string">"登录用户：{} 已被删除."</span>, username);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(<span class="string">"对不起，您的账号："</span> + username + <span class="string">" 已被删除"</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (UserStatus.DISABLE.getCode().equals(newsUser.getStatus())) {</span><br><span class="line">            log.info(<span class="string">"登录用户：{} 已被停用."</span>, username);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(<span class="string">"对不起，您的账号："</span> + username + <span class="string">" 未激活"</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> createLoginUser(newsUser);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">createLoginUser</span><span class="params">(NewsUser newsUser)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> NewsLoginUser(newsUser.getUserId(), newsUser.getDeptId(), newsUser);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>auths/src/main/java/com/codezm/auths/news/untils/SecurityUtils.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.auths.news.untils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.domain.NewsLoginUser;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.constant.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.exception.ServiceException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 安全服务工具类</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityUtils</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户ID</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title">getUserId</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">return</span> getLoginUser().getUserId();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(<span class="string">"获取用户ID异常"</span>, HttpStatus.UNAUTHORIZED);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户OpenId</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getOpenId</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">return</span> getLoginUser().getOpenId();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(<span class="string">"获取用户OpenId异常"</span>, HttpStatus.UNAUTHORIZED);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取部门ID</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title">getDeptId</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">return</span> getLoginUser().getDeptId();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(<span class="string">"获取部门ID异常"</span>, HttpStatus.UNAUTHORIZED);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取用户账户</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getUsername</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">return</span> getLoginUser().getUsername();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(<span class="string">"获取用户账户异常"</span>, HttpStatus.UNAUTHORIZED);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取用户</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> NewsLoginUser <span class="title">getLoginUser</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">return</span> (NewsLoginUser) getAuthentication().getPrincipal();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(<span class="string">"获取用户信息异常"</span>, HttpStatus.UNAUTHORIZED);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取Authentication</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Authentication <span class="title">getAuthentication</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> SecurityContextHolder.getContext().getAuthentication();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成BCryptPasswordEncoder密码</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 加密字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encryptPassword</span><span class="params">(String password)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        BCryptPasswordEncoder passwordEncoder = <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">        <span class="keyword">return</span> passwordEncoder.encode(password);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断密码是否相同</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rawPassword 真实密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> encodedPassword 加密后字符</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">matchesPassword</span><span class="params">(String rawPassword, String encodedPassword)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        BCryptPasswordEncoder passwordEncoder = <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">        <span class="keyword">return</span> passwordEncoder.matches(rawPassword, encodedPassword);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否为管理员</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 用户ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isAdmin</span><span class="params">(Long userId)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> userId != <span class="keyword">null</span> &amp;&amp; <span class="number">1L</span> == userId;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>/auths/src/main/resources/mapper/news/LoginUserMapper.xml</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">PUBLIC <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.codezm.auths.news.mapper.LoginUserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">"NewsUser"</span> <span class="attr">id</span>=<span class="string">"UserResult"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"userId"</span>    <span class="attr">column</span>=<span class="string">"user_id"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"deptId"</span>    <span class="attr">column</span>=<span class="string">"dept_id"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"userName"</span>    <span class="attr">column</span>=<span class="string">"user_name"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"nickName"</span>    <span class="attr">column</span>=<span class="string">"nick_name"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"userType"</span>    <span class="attr">column</span>=<span class="string">"user_type"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"email"</span>    <span class="attr">column</span>=<span class="string">"email"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"phonenumber"</span>    <span class="attr">column</span>=<span class="string">"phonenumber"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"sex"</span>    <span class="attr">column</span>=<span class="string">"sex"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"avatar"</span>    <span class="attr">column</span>=<span class="string">"avatar"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"password"</span>    <span class="attr">column</span>=<span class="string">"password"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"status"</span>    <span class="attr">column</span>=<span class="string">"status"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"delFlag"</span>    <span class="attr">column</span>=<span class="string">"del_flag"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"loginIp"</span>    <span class="attr">column</span>=<span class="string">"login_ip"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"loginDate"</span>    <span class="attr">column</span>=<span class="string">"login_date"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"createBy"</span>    <span class="attr">column</span>=<span class="string">"create_by"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"createTime"</span>    <span class="attr">column</span>=<span class="string">"create_time"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"updateBy"</span>    <span class="attr">column</span>=<span class="string">"update_by"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"updateTime"</span>    <span class="attr">column</span>=<span class="string">"update_time"</span>    /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"remark"</span>    <span class="attr">column</span>=<span class="string">"remark"</span>    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"selectUserVo"</span>&gt;</span></span><br><span class="line">        select user_id, dept_id, user_name, nick_name, user_type, email, phonenumber, sex, avatar, password, status, del_flag, login_ip, login_date, create_by, create_time, update_by, update_time, remark from news_user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserList"</span> <span class="attr">parameterType</span>=<span class="string">"NewsUser"</span> <span class="attr">resultMap</span>=<span class="string">"UserResult"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectUserVo"</span>/&gt;</span></span><br><span class="line">        where del_flag='0'</span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"deptId != null "</span>&gt;</span> and dept_id = #{deptId}<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"userName != null  and userName != ''"</span>&gt;</span> and user_name like concat('%', #{userName}, '%')<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"nickName != null  and nickName != ''"</span>&gt;</span> and nick_name like concat('%', #{nickName}, '%')<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"userType != null  and userType != ''"</span>&gt;</span> and user_type = #{userType}<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email != null  and email != ''"</span>&gt;</span> and email = #{email}<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"phonenumber != null  and phonenumber != ''"</span>&gt;</span> and phonenumber = #{phonenumber}<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null  and sex != ''"</span>&gt;</span> and sex = #{sex}<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"avatar != null  and avatar != ''"</span>&gt;</span> and avatar = #{avatar}<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"password != null  and password != ''"</span>&gt;</span> and password = #{password}<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"status != null  and status != ''"</span>&gt;</span> and status = #{status}<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"loginIp != null  and loginIp != ''"</span>&gt;</span> and login_ip = #{loginIp}<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"loginDate != null "</span>&gt;</span> and login_date = #{loginDate}<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByUserId"</span> <span class="attr">parameterType</span>=<span class="string">"Long"</span> <span class="attr">resultMap</span>=<span class="string">"UserResult"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectUserVo"</span>/&gt;</span></span><br><span class="line">        where user_id = #{userId} and del_flag = '0' limit 1</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insertUser"</span> <span class="attr">parameterType</span>=<span class="string">"NewsUser"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span> <span class="attr">keyProperty</span>=<span class="string">"userId"</span>&gt;</span></span><br><span class="line">        insert into news_user</span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"("</span> <span class="attr">suffix</span>=<span class="string">")"</span> <span class="attr">suffixOverrides</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"deptId != null"</span>&gt;</span>dept_id,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"userName != null and userName != ''"</span>&gt;</span>user_name,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"nickName != null and nickName != ''"</span>&gt;</span>nick_name,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"userType != null"</span>&gt;</span>user_type,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email != null"</span>&gt;</span>email,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"phonenumber != null"</span>&gt;</span>phonenumber,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null"</span>&gt;</span>sex,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"avatar != null"</span>&gt;</span>avatar,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"password != null"</span>&gt;</span>password,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"status != null"</span>&gt;</span>status,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"delFlag != null"</span>&gt;</span>del_flag,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"loginIp != null"</span>&gt;</span>login_ip,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"loginDate != null"</span>&gt;</span>login_date,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"createBy != null"</span>&gt;</span>create_by,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"createTime != null"</span>&gt;</span>create_time,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"updateBy != null"</span>&gt;</span>update_by,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"updateTime != null"</span>&gt;</span>update_time,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"remark != null"</span>&gt;</span>remark,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"values ("</span> <span class="attr">suffix</span>=<span class="string">")"</span> <span class="attr">suffixOverrides</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"deptId != null"</span>&gt;</span>#{deptId},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"userName != null and userName != ''"</span>&gt;</span>#{userName},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"nickName != null and nickName != ''"</span>&gt;</span>#{nickName},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"userType != null"</span>&gt;</span>#{userType},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email != null"</span>&gt;</span>#{email},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"phonenumber != null"</span>&gt;</span>#{phonenumber},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null"</span>&gt;</span>#{sex},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"avatar != null"</span>&gt;</span>#{avatar},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"password != null"</span>&gt;</span>#{password},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"status != null"</span>&gt;</span>#{status},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"delFlag != null"</span>&gt;</span>#{delFlag},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"loginIp != null"</span>&gt;</span>#{loginIp},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"loginDate != null"</span>&gt;</span>#{loginDate},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"createBy != null"</span>&gt;</span>#{createBy},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"createTime != null"</span>&gt;</span>#{createTime},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"updateBy != null"</span>&gt;</span>#{updateBy},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"updateTime != null"</span>&gt;</span>#{updateTime},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"remark != null"</span>&gt;</span>#{remark},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateUser"</span> <span class="attr">parameterType</span>=<span class="string">"NewsUser"</span>&gt;</span></span><br><span class="line">        update news_user</span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"SET"</span> <span class="attr">suffixOverrides</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"deptId != null"</span>&gt;</span>dept_id = #{deptId},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"userName != null and userName != ''"</span>&gt;</span>user_name = #{userName},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"nickName != null and nickName != ''"</span>&gt;</span>nick_name = #{nickName},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"userType != null"</span>&gt;</span>user_type = #{userType},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email != null"</span>&gt;</span>email = #{email},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"phonenumber != null"</span>&gt;</span>phonenumber = #{phonenumber},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null"</span>&gt;</span>sex = #{sex},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"avatar != null"</span>&gt;</span>avatar = #{avatar},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"password != null"</span>&gt;</span>password = #{password},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"status != null"</span>&gt;</span>status = #{status},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"delFlag != null"</span>&gt;</span>del_flag = #{delFlag},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"loginIp != null"</span>&gt;</span>login_ip = #{loginIp},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"loginDate != null"</span>&gt;</span>login_date = #{loginDate},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"createBy != null"</span>&gt;</span>create_by = #{createBy},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"createTime != null"</span>&gt;</span>create_time = #{createTime},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"updateBy != null"</span>&gt;</span>update_by = #{updateBy},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"updateTime != null"</span>&gt;</span>update_time = #{updateTime},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"remark != null"</span>&gt;</span>remark = #{remark},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">        where user_id = #{userId}</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteUserByUserId"</span> <span class="attr">parameterType</span>=<span class="string">"Long"</span>&gt;</span></span><br><span class="line">        update news_user set del_flag = '2' where user_id = #{userId}</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteUserByUserIds"</span> <span class="attr">parameterType</span>=<span class="string">"String"</span>&gt;</span></span><br><span class="line">        update news_user set del_flag = '2' where user_id in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">item</span>=<span class="string">"userId"</span> <span class="attr">collection</span>=<span class="string">"array"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">separator</span>=<span class="string">","</span> <span class="attr">close</span>=<span class="string">")"</span>&gt;</span></span><br><span class="line">            #{userId}</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByUserName"</span> <span class="attr">parameterType</span>=<span class="string">"String"</span> <span class="attr">resultMap</span>=<span class="string">"UserResult"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectUserVo"</span>/&gt;</span></span><br><span class="line">        where user_name = #{userName} and del_flag = '0' limit 1</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByPhone"</span> <span class="attr">parameterType</span>=<span class="string">"String"</span> <span class="attr">resultMap</span>=<span class="string">"UserResult"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectUserVo"</span>/&gt;</span></span><br><span class="line">        where phonenumber = #{phonenumber} and del_flag = '0' limit 1</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<h2 id="主-pom-xml-文件增加模块依赖"><a href="#主-pom-xml-文件增加模块依赖" class="headerlink" title="主 pom.xml 文件增加模块依赖"></a>主 pom.xml 文件增加模块依赖</h2><h4 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h4><figure class="highlight diff"><table><tbody><tr><td class="code"><pre><span class="line">    &lt;dependencyManagement&gt;</span><br><span class="line">    		...</span><br><span class="line">        &lt;dependencies&gt;</span><br><span class="line"><span class="addition">+            &lt;dependency&gt;</span></span><br><span class="line"><span class="addition">+                &lt;groupId&gt;com.codezm&lt;/groupId&gt;</span></span><br><span class="line"><span class="addition">+                &lt;artifactId&gt;auths&lt;/artifactId&gt;</span></span><br><span class="line"><span class="addition">+                &lt;version&gt;${ruoyi.version}&lt;/version&gt;</span></span><br><span class="line"><span class="addition">+            &lt;/dependency&gt;</span></span><br><span class="line">         &lt;/dependencies&gt;</span><br><span class="line">     &lt;/dependencyManagement&gt;</span><br><span class="line">     &lt;modules&gt;</span><br><span class="line">     		 ...</span><br><span class="line">         &lt;module&gt;ruoyi-quartz&lt;/module&gt;</span><br><span class="line">         &lt;module&gt;ruoyi-generator&lt;/module&gt;</span><br><span class="line">         &lt;module&gt;ruoyi-common&lt;/module&gt;</span><br><span class="line"><span class="addition">+        &lt;module&gt;auths&lt;/module&gt;</span></span><br><span class="line">     &lt;/modules&gt;</span><br></pre></td></tr></tbody></table></figure>



<h2 id="ruoyi-framework"><a href="#ruoyi-framework" class="headerlink" title="ruoyi-framework"></a>ruoyi-framework</h2><h4 id="增加依赖配置"><a href="#增加依赖配置" class="headerlink" title="增加依赖配置"></a>增加依赖配置</h4><p>ruoyi-framework/pom.xml</p>
<figure class="highlight diff"><table><tbody><tr><td class="code"><pre><span class="line">&lt;dependencyManagement&gt;</span><br><span class="line">    ...</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line"><span class="addition">+        &lt;dependency&gt;</span></span><br><span class="line"><span class="addition">+            &lt;groupId&gt;com.codezm&lt;/groupId&gt;</span></span><br><span class="line"><span class="addition">+            &lt;artifactId&gt;auths&lt;/artifactId&gt;</span></span><br><span class="line"><span class="addition">+        &lt;/dependency&gt;</span></span><br><span class="line">     &lt;/dependencies&gt;</span><br><span class="line">&lt;/dependencyManagement&gt;</span><br></pre></td></tr></tbody></table></figure>

<h4 id="ruoyi-framework-中创建基础-spring-security-配置文件"><a href="#ruoyi-framework-中创建基础-spring-security-配置文件" class="headerlink" title="ruoyi-framework 中创建基础 spring security 配置文件"></a>ruoyi-framework 中创建基础 spring security 配置文件</h4><p>ruoyi-framework/src/main/java/com/ruoyi/framework/config/SecurityBaseConfig.java</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruoyi.framework.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.config.NewsSecurityConfig;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Import;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * spring security配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true)</span></span><br><span class="line"><span class="meta">@Import({SecurityConfig.class, NewsSecurityConfig.class})</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityBaseConfig</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>ruoyi-framework/src/main/java/com/ruoyi/framework/config/SecurityConfig.java</p>
<figure class="highlight diff"><table><tbody><tr><td class="code"><pre><span class="line"> import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"> import org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"> import org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="addition">+import org.springframework.context.annotation.Configuration;</span></span><br><span class="line"><span class="addition">+import org.springframework.context.annotation.Primary;</span></span><br><span class="line"><span class="addition">+import org.springframework.core.annotation.Order;</span></span><br><span class="line"> import org.springframework.http.HttpMethod;</span><br><span class="line"> import org.springframework.security.authentication.AuthenticationManager;</span><br><span class="line"> import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line">@@ -27,7 +30,9 @@ import org.springframework.web.filter.CorsFilter;</span><br><span class="line">  *</span><br><span class="line">  * @author ruoyi</span><br><span class="line">  */</span><br><span class="line"><span class="deletion">-@EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true)</span></span><br><span class="line"><span class="addition">+//@EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true)</span></span><br><span class="line"><span class="addition">+@Configuration</span></span><br><span class="line"><span class="addition">+@Order(999)</span></span><br><span class="line"> public class SecurityConfig extends WebSecurityConfigurerAdapter</span><br><span class="line"> {</span><br><span class="line">     /**</span><br><span class="line">@@ -82,7 +87,8 @@ public class SecurityConfig extends WebSecurityConfigurerAdapter</span><br><span class="line">      * @return</span><br><span class="line">      * @throws Exception</span><br><span class="line">      */</span><br><span class="line"><span class="deletion">-    @Bean</span></span><br><span class="line"><span class="addition">+    @Bean("manageAuthenticationManager")</span></span><br><span class="line"><span class="addition">+    @Primary</span></span><br><span class="line">     @Override</span><br><span class="line">     public AuthenticationManager authenticationManagerBean() throws Exception</span><br><span class="line">     {</span><br></pre></td></tr></tbody></table></figure>



<h2 id="增加-token-环境变量"><a href="#增加-token-环境变量" class="headerlink" title="增加 token 环境变量"></a>增加 token 环境变量</h2><p>ruoyi-admin/src/main/resources/application.yml</p>
<figure class="highlight diff"><table><tbody><tr><td class="code"><pre><span class="line"><span class="addition">+# token配置</span></span><br><span class="line"><span class="addition">+news:</span></span><br><span class="line"><span class="addition">+  token:</span></span><br><span class="line"><span class="addition">+    # 令牌自定义标识-统一或者和前端商定</span></span><br><span class="line"><span class="addition">+    header: Authorization</span></span><br><span class="line"><span class="addition">+    # 令牌密钥</span></span><br><span class="line"><span class="addition">+    secret: abcdefgcodepiaonopqrstuvwxyz</span></span><br><span class="line"><span class="addition">+    # 令牌有效期（默认30分钟）</span></span><br><span class="line"><span class="addition">+    expireTime: 120</span></span><br><span class="line"><span class="addition">+</span></span><br></pre></td></tr></tbody></table></figure>



<h2 id="登录-Controller"><a href="#登录-Controller" class="headerlink" title="登录 Controller"></a>登录 Controller</h2><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codezm.news.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.domain.newsLoginBody;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.service.LoginService;</span><br><span class="line"><span class="keyword">import</span> com.codezm.auths.news.untils.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.constant.Constants;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.AjaxResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> codezm</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2024-05-14 15:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping("/news")</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginService loginService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping("/login")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResult <span class="title">login</span><span class="params">(<span class="meta">@RequestBody</span> newsLoginBody newsLoginBody)</span> </span>{</span><br><span class="line">        AjaxResult ajax = AjaxResult.success();</span><br><span class="line"><span class="comment">//         生成令牌</span></span><br><span class="line">        String token = loginService.login(newsLoginBody.getUsername(), newsLoginBody.getPassword(), newsLoginBody.getCode(), newsLoginBody.getUuid());</span><br><span class="line">        ajax.put(Constants.TOKEN, token);</span><br><span class="line">        <span class="keyword">return</span> ajax;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping("/info")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">info</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> SecurityUtils.getUsername();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>



<h2 id="表SQL"><a href="#表SQL" class="headerlink" title="表SQL"></a>表SQL</h2><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`news_user`</span> (</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">bigint</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'用户ID'</span>,</span><br><span class="line">  <span class="string">`dept_id`</span> <span class="built_in">bigint</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'部门ID'</span>,</span><br><span class="line">  <span class="string">`user_name`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户账号'</span>,</span><br><span class="line">  <span class="string">`nick_name`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户昵称'</span>,</span><br><span class="line">  <span class="string">`user_type`</span> <span class="built_in">varchar</span>(<span class="number">2</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">DEFAULT</span> <span class="string">'00'</span> <span class="keyword">COMMENT</span> <span class="string">'用户类型（00系统用户）'</span>,</span><br><span class="line">  <span class="string">`email`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'用户邮箱'</span>,</span><br><span class="line">  <span class="string">`phonenumber`</span> <span class="built_in">varchar</span>(<span class="number">11</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'手机号码'</span>,</span><br><span class="line">  <span class="string">`sex`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'用户性别（0男 1女 2未知）'</span>,</span><br><span class="line">  <span class="string">`avatar`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'头像地址'</span>,</span><br><span class="line">  <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'密码'</span>,</span><br><span class="line">  <span class="string">`status`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'帐号状态（0正常 1停用）'</span>,</span><br><span class="line">  <span class="string">`del_flag`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'删除标志（0代表存在 2代表删除）'</span>,</span><br><span class="line">  <span class="string">`login_ip`</span> <span class="built_in">varchar</span>(<span class="number">128</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'最后登录IP'</span>,</span><br><span class="line">  <span class="string">`login_date`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'最后登录时间'</span>,</span><br><span class="line">  <span class="string">`create_by`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'创建者'</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`update_by`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'更新者'</span>,</span><br><span class="line">  <span class="string">`update_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  <span class="string">`remark`</span> <span class="built_in">varchar</span>(<span class="number">500</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'备注'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`user_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">100</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COLLATE</span>=utf8mb4_general_ci <span class="keyword">COMMENT</span>=<span class="string">'用户信息表'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`ruoyi`</span>.<span class="string">`sys_user`</span>(<span class="string">`user_id`</span>, <span class="string">`dept_id`</span>, <span class="string">`user_name`</span>, <span class="string">`nick_name`</span>, <span class="string">`user_type`</span>, <span class="string">`email`</span>, <span class="string">`phonenumber`</span>, <span class="string">`sex`</span>, <span class="string">`avatar`</span>, <span class="string">`password`</span>, <span class="string">`status`</span>, <span class="string">`del_flag`</span>, <span class="string">`login_ip`</span>, <span class="string">`login_date`</span>, <span class="string">`create_by`</span>, <span class="string">`create_time`</span>, <span class="string">`update_by`</span>, <span class="string">`update_time`</span>, <span class="string">`remark`</span>) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">103</span>, <span class="string">'admin'</span>, <span class="string">'若依'</span>, <span class="string">'00'</span>, <span class="string">'ry@163.com'</span>, <span class="string">'15888888888'</span>, <span class="string">'1'</span>, <span class="string">''</span>, <span class="string">'$2a$10$7JB720yubVSZvUI0rEqK/.VqGOZTH.ulu33dHOiBE8ByOhJIrdAu2'</span>, <span class="string">'0'</span>, <span class="string">'0'</span>, <span class="string">'127.0.0.1'</span>, <span class="string">'2022-12-28 15:47:23'</span>, <span class="string">'admin'</span>, <span class="string">'2022-12-11 16:51:52'</span>, <span class="string">''</span>, <span class="string">'2022-12-28 15:47:22'</span>, <span class="string">'管理员'</span>);</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
</search>
